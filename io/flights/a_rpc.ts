/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/flights/a_rpc.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/api/annotations";
import * as dependency_2 from "./../../google/protobuf/empty";
import * as dependency_3 from "./../../protoc-gen-openapiv2/options/annotations";
import * as dependency_4 from "./boarding_pass";
import * as dependency_5 from "./airport";
import * as dependency_6 from "./flight";
import * as dependency_7 from "./flight_designator";
import * as dependency_8 from "./carrier";
import * as grpc_1 from "@grpc/grpc-js";
export namespace flights {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedFlightsService {
        static definition = {
            createPort: {
                path: "/flights.Flights/createPort",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.flights.Port) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.flights.Port.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getPort: {
                path: "/flights.Flights/getPort",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.flights.AirportCode) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.flights.AirportCode.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.flights.Port) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.flights.Port.deserialize(new Uint8Array(bytes))
            },
            updatePort: {
                path: "/flights.Flights/updatePort",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.flights.Port) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.flights.Port.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.flights.Port) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.flights.Port.deserialize(new Uint8Array(bytes))
            },
            deletePort: {
                path: "/flights.Flights/deletePort",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.flights.AirportCode) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.flights.AirportCode.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            createCarrier: {
                path: "/flights.Flights/createCarrier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.flights.Carrier) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.flights.Carrier.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getCarrier: {
                path: "/flights.Flights/getCarrier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.flights.CarrierCode) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.flights.CarrierCode.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.flights.Carrier) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.flights.Carrier.deserialize(new Uint8Array(bytes))
            },
            updateCarrier: {
                path: "/flights.Flights/updateCarrier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.flights.Carrier) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.flights.Carrier.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.flights.Carrier) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.flights.Carrier.deserialize(new Uint8Array(bytes))
            },
            deleteCarrier: {
                path: "/flights.Flights/deleteCarrier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.flights.CarrierCode) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.flights.CarrierCode.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            createFlightDesignator: {
                path: "/flights.Flights/createFlightDesignator",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.flights.FlightDesignator) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.flights.FlightDesignator.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getFlightDesignator: {
                path: "/flights.Flights/getFlightDesignator",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.flights.FlightDesignatorRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.flights.FlightDesignatorRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.flights.FlightDesignator) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.flights.FlightDesignator.deserialize(new Uint8Array(bytes))
            },
            updateFlightDesignator: {
                path: "/flights.Flights/updateFlightDesignator",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.flights.FlightDesignator) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.flights.FlightDesignator.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.flights.FlightDesignator) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.flights.FlightDesignator.deserialize(new Uint8Array(bytes))
            },
            deleteFlightDesignator: {
                path: "/flights.Flights/deleteFlightDesignator",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.flights.FlightDesignatorRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.flights.FlightDesignatorRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            createFlight: {
                path: "/flights.Flights/createFlight",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.flights.Flight) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.flights.Flight.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getFlight: {
                path: "/flights.Flights/getFlight",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.flights.FlightRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.flights.FlightRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.flights.Flight) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.flights.Flight.deserialize(new Uint8Array(bytes))
            },
            updateFlight: {
                path: "/flights.Flights/updateFlight",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.flights.Flight) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.flights.Flight.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.flights.Flight) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.flights.Flight.deserialize(new Uint8Array(bytes))
            },
            deleteFlight: {
                path: "/flights.Flights/deleteFlight",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.flights.FlightRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.flights.FlightRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            createBoardingPass: {
                path: "/flights.Flights/createBoardingPass",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.flights.BoardingPassRecord) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassRecord.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.flights.BoardingPassesResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassesResponse.deserialize(new Uint8Array(bytes))
            },
            getBoardingPassRecord: {
                path: "/flights.Flights/getBoardingPassRecord",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.flights.BoardingPassRecordRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassRecordRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.flights.BoardingPassRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassRecord.deserialize(new Uint8Array(bytes))
            },
            getBoardingPass: {
                path: "/flights.Flights/getBoardingPass",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.flights.BoardingPassRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.flights.BoardingPassesResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassesResponse.deserialize(new Uint8Array(bytes))
            },
            updateBoardingPass: {
                path: "/flights.Flights/updateBoardingPass",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.flights.BoardingPassRecord) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassRecord.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.flights.BoardingPassRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassRecord.deserialize(new Uint8Array(bytes))
            },
            deleteBoardingPass: {
                path: "/flights.Flights/deleteBoardingPass",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.flights.BoardingPassRecordRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.flights.BoardingPassRecordRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract createPort(call: grpc_1.ServerUnaryCall<dependency_5.flights.Port, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getPort(call: grpc_1.ServerUnaryCall<dependency_5.flights.AirportCode, dependency_5.flights.Port>, callback: grpc_1.sendUnaryData<dependency_5.flights.Port>): void;
        abstract updatePort(call: grpc_1.ServerUnaryCall<dependency_5.flights.Port, dependency_5.flights.Port>, callback: grpc_1.sendUnaryData<dependency_5.flights.Port>): void;
        abstract deletePort(call: grpc_1.ServerUnaryCall<dependency_5.flights.AirportCode, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract createCarrier(call: grpc_1.ServerUnaryCall<dependency_8.flights.Carrier, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getCarrier(call: grpc_1.ServerUnaryCall<dependency_8.flights.CarrierCode, dependency_8.flights.Carrier>, callback: grpc_1.sendUnaryData<dependency_8.flights.Carrier>): void;
        abstract updateCarrier(call: grpc_1.ServerUnaryCall<dependency_8.flights.Carrier, dependency_8.flights.Carrier>, callback: grpc_1.sendUnaryData<dependency_8.flights.Carrier>): void;
        abstract deleteCarrier(call: grpc_1.ServerUnaryCall<dependency_8.flights.CarrierCode, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract createFlightDesignator(call: grpc_1.ServerUnaryCall<dependency_7.flights.FlightDesignator, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getFlightDesignator(call: grpc_1.ServerUnaryCall<dependency_7.flights.FlightDesignatorRequest, dependency_7.flights.FlightDesignator>, callback: grpc_1.sendUnaryData<dependency_7.flights.FlightDesignator>): void;
        abstract updateFlightDesignator(call: grpc_1.ServerUnaryCall<dependency_7.flights.FlightDesignator, dependency_7.flights.FlightDesignator>, callback: grpc_1.sendUnaryData<dependency_7.flights.FlightDesignator>): void;
        abstract deleteFlightDesignator(call: grpc_1.ServerUnaryCall<dependency_7.flights.FlightDesignatorRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract createFlight(call: grpc_1.ServerUnaryCall<dependency_6.flights.Flight, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getFlight(call: grpc_1.ServerUnaryCall<dependency_6.flights.FlightRequest, dependency_6.flights.Flight>, callback: grpc_1.sendUnaryData<dependency_6.flights.Flight>): void;
        abstract updateFlight(call: grpc_1.ServerUnaryCall<dependency_6.flights.Flight, dependency_6.flights.Flight>, callback: grpc_1.sendUnaryData<dependency_6.flights.Flight>): void;
        abstract deleteFlight(call: grpc_1.ServerUnaryCall<dependency_6.flights.FlightRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract createBoardingPass(call: grpc_1.ServerUnaryCall<dependency_4.flights.BoardingPassRecord, dependency_4.flights.BoardingPassesResponse>, callback: grpc_1.sendUnaryData<dependency_4.flights.BoardingPassesResponse>): void;
        abstract getBoardingPassRecord(call: grpc_1.ServerUnaryCall<dependency_4.flights.BoardingPassRecordRequest, dependency_4.flights.BoardingPassRecord>, callback: grpc_1.sendUnaryData<dependency_4.flights.BoardingPassRecord>): void;
        abstract getBoardingPass(call: grpc_1.ServerUnaryCall<dependency_4.flights.BoardingPassRequest, dependency_4.flights.BoardingPassesResponse>, callback: grpc_1.sendUnaryData<dependency_4.flights.BoardingPassesResponse>): void;
        abstract updateBoardingPass(call: grpc_1.ServerUnaryCall<dependency_4.flights.BoardingPassRecord, dependency_4.flights.BoardingPassRecord>, callback: grpc_1.sendUnaryData<dependency_4.flights.BoardingPassRecord>): void;
        abstract deleteBoardingPass(call: grpc_1.ServerUnaryCall<dependency_4.flights.BoardingPassRecordRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
    }
    export class FlightsClient extends grpc_1.makeGenericClientConstructor(UnimplementedFlightsService.definition, "Flights", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        createPort: GrpcPromiseServiceInterface<dependency_5.flights.Port, dependency_2.google.protobuf.Empty> = (message: dependency_5.flights.Port, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createPort(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getPort: GrpcPromiseServiceInterface<dependency_5.flights.AirportCode, dependency_5.flights.Port> = (message: dependency_5.flights.AirportCode, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_5.flights.Port> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getPort(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_5.flights.Port) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updatePort: GrpcPromiseServiceInterface<dependency_5.flights.Port, dependency_5.flights.Port> = (message: dependency_5.flights.Port, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_5.flights.Port> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updatePort(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_5.flights.Port) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deletePort: GrpcPromiseServiceInterface<dependency_5.flights.AirportCode, dependency_2.google.protobuf.Empty> = (message: dependency_5.flights.AirportCode, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deletePort(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createCarrier: GrpcPromiseServiceInterface<dependency_8.flights.Carrier, dependency_2.google.protobuf.Empty> = (message: dependency_8.flights.Carrier, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createCarrier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getCarrier: GrpcPromiseServiceInterface<dependency_8.flights.CarrierCode, dependency_8.flights.Carrier> = (message: dependency_8.flights.CarrierCode, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.flights.Carrier> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getCarrier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.flights.Carrier) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateCarrier: GrpcPromiseServiceInterface<dependency_8.flights.Carrier, dependency_8.flights.Carrier> = (message: dependency_8.flights.Carrier, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.flights.Carrier> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateCarrier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.flights.Carrier) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteCarrier: GrpcPromiseServiceInterface<dependency_8.flights.CarrierCode, dependency_2.google.protobuf.Empty> = (message: dependency_8.flights.CarrierCode, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteCarrier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createFlightDesignator: GrpcPromiseServiceInterface<dependency_7.flights.FlightDesignator, dependency_2.google.protobuf.Empty> = (message: dependency_7.flights.FlightDesignator, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createFlightDesignator(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getFlightDesignator: GrpcPromiseServiceInterface<dependency_7.flights.FlightDesignatorRequest, dependency_7.flights.FlightDesignator> = (message: dependency_7.flights.FlightDesignatorRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_7.flights.FlightDesignator> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getFlightDesignator(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_7.flights.FlightDesignator) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateFlightDesignator: GrpcPromiseServiceInterface<dependency_7.flights.FlightDesignator, dependency_7.flights.FlightDesignator> = (message: dependency_7.flights.FlightDesignator, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_7.flights.FlightDesignator> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateFlightDesignator(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_7.flights.FlightDesignator) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteFlightDesignator: GrpcPromiseServiceInterface<dependency_7.flights.FlightDesignatorRequest, dependency_2.google.protobuf.Empty> = (message: dependency_7.flights.FlightDesignatorRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteFlightDesignator(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createFlight: GrpcPromiseServiceInterface<dependency_6.flights.Flight, dependency_2.google.protobuf.Empty> = (message: dependency_6.flights.Flight, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createFlight(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getFlight: GrpcPromiseServiceInterface<dependency_6.flights.FlightRequest, dependency_6.flights.Flight> = (message: dependency_6.flights.FlightRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.flights.Flight> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getFlight(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.flights.Flight) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateFlight: GrpcPromiseServiceInterface<dependency_6.flights.Flight, dependency_6.flights.Flight> = (message: dependency_6.flights.Flight, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.flights.Flight> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateFlight(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.flights.Flight) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteFlight: GrpcPromiseServiceInterface<dependency_6.flights.FlightRequest, dependency_2.google.protobuf.Empty> = (message: dependency_6.flights.FlightRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteFlight(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createBoardingPass: GrpcPromiseServiceInterface<dependency_4.flights.BoardingPassRecord, dependency_4.flights.BoardingPassesResponse> = (message: dependency_4.flights.BoardingPassRecord, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.flights.BoardingPassesResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createBoardingPass(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.flights.BoardingPassesResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getBoardingPassRecord: GrpcPromiseServiceInterface<dependency_4.flights.BoardingPassRecordRequest, dependency_4.flights.BoardingPassRecord> = (message: dependency_4.flights.BoardingPassRecordRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.flights.BoardingPassRecord> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getBoardingPassRecord(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.flights.BoardingPassRecord) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getBoardingPass: GrpcPromiseServiceInterface<dependency_4.flights.BoardingPassRequest, dependency_4.flights.BoardingPassesResponse> = (message: dependency_4.flights.BoardingPassRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.flights.BoardingPassesResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getBoardingPass(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.flights.BoardingPassesResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateBoardingPass: GrpcPromiseServiceInterface<dependency_4.flights.BoardingPassRecord, dependency_4.flights.BoardingPassRecord> = (message: dependency_4.flights.BoardingPassRecord, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.flights.BoardingPassRecord> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateBoardingPass(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.flights.BoardingPassRecord) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteBoardingPass: GrpcPromiseServiceInterface<dependency_4.flights.BoardingPassRecordRequest, dependency_2.google.protobuf.Empty> = (message: dependency_4.flights.BoardingPassRecordRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteBoardingPass(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
    }
}
