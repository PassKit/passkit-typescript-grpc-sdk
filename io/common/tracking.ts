/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/common/tracking.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export namespace io {
    export enum FbPixelStandardEvent {
        FBP_STANDARD_EVENT_DO_NOT_USE = 0,
        FBP_STANDARD_EVENT_PAGE_VIEW = 1,
        FBP_STANDARD_EVENT_COMPLETE_REGISTRATION = 2,
        FBP_STANDARD_EVENT_LEAD = 3,
        FBP_STANDARD_EVENT_PURCHASE = 4,
        FBP_STANDARD_EVENT_SCHEDULE = 5,
        FBP_STANDARD_EVENT_START_TRIAL = 6,
        FBP_STANDARD_EVENT_SUBMIT_APPLICATION = 7,
        FBP_STANDARD_EVENT_SUBSCRIBE = 8,
        FBP_STANDARD_EVENT_VIEW_CONTENT = 9
    }
    export enum GoogleAnalyticsDataCollectionPageEvent {
        GA_DC_EVENT_DO_NOT_USE = 0,
        GA_DC_EVENT_PAGE_VIEW = 1,
        GA_DC_EVENT_SUBMIT_FORM = 2
    }
    export enum GoogleAnalyticsPassRenderPageEvent {
        GA_PP_EVENT_DO_NOT_USE = 0,
        GA_PP_EVENT_PAGE_VIEW = 1,
        GA_PP_EVENT_ADD_TO_APPLE_WALLET_CLICK = 2,
        GA_PP_EVENT_VIEW_PASS_IN_APPLE_WALLET_CLICK = 3,
        GA_PP_EVENT_SAVE_TO_GOOGLE_PAY_CLICK = 4,
        GA_PP_EVENT_CHANGE_LANGUAGE = 5
    }
    export enum GoogleAnalyticsCustomerInitiatedRedemptionPageEvent {
        GA_CIRP_EVENT_DO_NOT_USE = 0,
        GA_CIRP_EVENT_PAGE_VIEW = 1,
        GA_CIRP_EVENT_REDEEM = 2
    }
    export class FacebookPixelSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            pixelId?: string;
            dataCollectionPageStandardEvents?: StandardEvent[];
            dataCollectionPageCustomEvents?: CustomEvent[];
            passPageStandardEvents?: StandardEvent[];
            passPageCustomEvents?: CustomEvent[];
            customerInitiatedRedemptionPageStandardEvents?: StandardEvent[];
            customerInitiatedRedemptionPageCustomEvents?: CustomEvent[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 3, 4, 5, 6, 7], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("pixelId" in data && data.pixelId != undefined) {
                    this.pixelId = data.pixelId;
                }
                if ("dataCollectionPageStandardEvents" in data && data.dataCollectionPageStandardEvents != undefined) {
                    this.dataCollectionPageStandardEvents = data.dataCollectionPageStandardEvents;
                }
                if ("dataCollectionPageCustomEvents" in data && data.dataCollectionPageCustomEvents != undefined) {
                    this.dataCollectionPageCustomEvents = data.dataCollectionPageCustomEvents;
                }
                if ("passPageStandardEvents" in data && data.passPageStandardEvents != undefined) {
                    this.passPageStandardEvents = data.passPageStandardEvents;
                }
                if ("passPageCustomEvents" in data && data.passPageCustomEvents != undefined) {
                    this.passPageCustomEvents = data.passPageCustomEvents;
                }
                if ("customerInitiatedRedemptionPageStandardEvents" in data && data.customerInitiatedRedemptionPageStandardEvents != undefined) {
                    this.customerInitiatedRedemptionPageStandardEvents = data.customerInitiatedRedemptionPageStandardEvents;
                }
                if ("customerInitiatedRedemptionPageCustomEvents" in data && data.customerInitiatedRedemptionPageCustomEvents != undefined) {
                    this.customerInitiatedRedemptionPageCustomEvents = data.customerInitiatedRedemptionPageCustomEvents;
                }
            }
        }
        get pixelId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set pixelId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get dataCollectionPageStandardEvents() {
            return pb_1.Message.getRepeatedWrapperField(this, StandardEvent, 2) as StandardEvent[];
        }
        set dataCollectionPageStandardEvents(value: StandardEvent[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get dataCollectionPageCustomEvents() {
            return pb_1.Message.getRepeatedWrapperField(this, CustomEvent, 3) as CustomEvent[];
        }
        set dataCollectionPageCustomEvents(value: CustomEvent[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get passPageStandardEvents() {
            return pb_1.Message.getRepeatedWrapperField(this, StandardEvent, 4) as StandardEvent[];
        }
        set passPageStandardEvents(value: StandardEvent[]) {
            pb_1.Message.setRepeatedWrapperField(this, 4, value);
        }
        get passPageCustomEvents() {
            return pb_1.Message.getRepeatedWrapperField(this, CustomEvent, 5) as CustomEvent[];
        }
        set passPageCustomEvents(value: CustomEvent[]) {
            pb_1.Message.setRepeatedWrapperField(this, 5, value);
        }
        get customerInitiatedRedemptionPageStandardEvents() {
            return pb_1.Message.getRepeatedWrapperField(this, StandardEvent, 6) as StandardEvent[];
        }
        set customerInitiatedRedemptionPageStandardEvents(value: StandardEvent[]) {
            pb_1.Message.setRepeatedWrapperField(this, 6, value);
        }
        get customerInitiatedRedemptionPageCustomEvents() {
            return pb_1.Message.getRepeatedWrapperField(this, CustomEvent, 7) as CustomEvent[];
        }
        set customerInitiatedRedemptionPageCustomEvents(value: CustomEvent[]) {
            pb_1.Message.setRepeatedWrapperField(this, 7, value);
        }
        static fromObject(data: {
            pixelId?: string;
            dataCollectionPageStandardEvents?: ReturnType<typeof StandardEvent.prototype.toObject>[];
            dataCollectionPageCustomEvents?: ReturnType<typeof CustomEvent.prototype.toObject>[];
            passPageStandardEvents?: ReturnType<typeof StandardEvent.prototype.toObject>[];
            passPageCustomEvents?: ReturnType<typeof CustomEvent.prototype.toObject>[];
            customerInitiatedRedemptionPageStandardEvents?: ReturnType<typeof StandardEvent.prototype.toObject>[];
            customerInitiatedRedemptionPageCustomEvents?: ReturnType<typeof CustomEvent.prototype.toObject>[];
        }): FacebookPixelSettings {
            const message = new FacebookPixelSettings({});
            if (data.pixelId != null) {
                message.pixelId = data.pixelId;
            }
            if (data.dataCollectionPageStandardEvents != null) {
                message.dataCollectionPageStandardEvents = data.dataCollectionPageStandardEvents.map(item => StandardEvent.fromObject(item));
            }
            if (data.dataCollectionPageCustomEvents != null) {
                message.dataCollectionPageCustomEvents = data.dataCollectionPageCustomEvents.map(item => CustomEvent.fromObject(item));
            }
            if (data.passPageStandardEvents != null) {
                message.passPageStandardEvents = data.passPageStandardEvents.map(item => StandardEvent.fromObject(item));
            }
            if (data.passPageCustomEvents != null) {
                message.passPageCustomEvents = data.passPageCustomEvents.map(item => CustomEvent.fromObject(item));
            }
            if (data.customerInitiatedRedemptionPageStandardEvents != null) {
                message.customerInitiatedRedemptionPageStandardEvents = data.customerInitiatedRedemptionPageStandardEvents.map(item => StandardEvent.fromObject(item));
            }
            if (data.customerInitiatedRedemptionPageCustomEvents != null) {
                message.customerInitiatedRedemptionPageCustomEvents = data.customerInitiatedRedemptionPageCustomEvents.map(item => CustomEvent.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                pixelId?: string;
                dataCollectionPageStandardEvents?: ReturnType<typeof StandardEvent.prototype.toObject>[];
                dataCollectionPageCustomEvents?: ReturnType<typeof CustomEvent.prototype.toObject>[];
                passPageStandardEvents?: ReturnType<typeof StandardEvent.prototype.toObject>[];
                passPageCustomEvents?: ReturnType<typeof CustomEvent.prototype.toObject>[];
                customerInitiatedRedemptionPageStandardEvents?: ReturnType<typeof StandardEvent.prototype.toObject>[];
                customerInitiatedRedemptionPageCustomEvents?: ReturnType<typeof CustomEvent.prototype.toObject>[];
            } = {};
            if (this.pixelId != null) {
                data.pixelId = this.pixelId;
            }
            if (this.dataCollectionPageStandardEvents != null) {
                data.dataCollectionPageStandardEvents = this.dataCollectionPageStandardEvents.map((item: StandardEvent) => item.toObject());
            }
            if (this.dataCollectionPageCustomEvents != null) {
                data.dataCollectionPageCustomEvents = this.dataCollectionPageCustomEvents.map((item: CustomEvent) => item.toObject());
            }
            if (this.passPageStandardEvents != null) {
                data.passPageStandardEvents = this.passPageStandardEvents.map((item: StandardEvent) => item.toObject());
            }
            if (this.passPageCustomEvents != null) {
                data.passPageCustomEvents = this.passPageCustomEvents.map((item: CustomEvent) => item.toObject());
            }
            if (this.customerInitiatedRedemptionPageStandardEvents != null) {
                data.customerInitiatedRedemptionPageStandardEvents = this.customerInitiatedRedemptionPageStandardEvents.map((item: StandardEvent) => item.toObject());
            }
            if (this.customerInitiatedRedemptionPageCustomEvents != null) {
                data.customerInitiatedRedemptionPageCustomEvents = this.customerInitiatedRedemptionPageCustomEvents.map((item: CustomEvent) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.pixelId.length)
                writer.writeString(1, this.pixelId);
            if (this.dataCollectionPageStandardEvents.length)
                writer.writeRepeatedMessage(2, this.dataCollectionPageStandardEvents, (item: StandardEvent) => item.serialize(writer));
            if (this.dataCollectionPageCustomEvents.length)
                writer.writeRepeatedMessage(3, this.dataCollectionPageCustomEvents, (item: CustomEvent) => item.serialize(writer));
            if (this.passPageStandardEvents.length)
                writer.writeRepeatedMessage(4, this.passPageStandardEvents, (item: StandardEvent) => item.serialize(writer));
            if (this.passPageCustomEvents.length)
                writer.writeRepeatedMessage(5, this.passPageCustomEvents, (item: CustomEvent) => item.serialize(writer));
            if (this.customerInitiatedRedemptionPageStandardEvents.length)
                writer.writeRepeatedMessage(6, this.customerInitiatedRedemptionPageStandardEvents, (item: StandardEvent) => item.serialize(writer));
            if (this.customerInitiatedRedemptionPageCustomEvents.length)
                writer.writeRepeatedMessage(7, this.customerInitiatedRedemptionPageCustomEvents, (item: CustomEvent) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): FacebookPixelSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FacebookPixelSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.pixelId = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.dataCollectionPageStandardEvents, () => pb_1.Message.addToRepeatedWrapperField(message, 2, StandardEvent.deserialize(reader), StandardEvent));
                        break;
                    case 3:
                        reader.readMessage(message.dataCollectionPageCustomEvents, () => pb_1.Message.addToRepeatedWrapperField(message, 3, CustomEvent.deserialize(reader), CustomEvent));
                        break;
                    case 4:
                        reader.readMessage(message.passPageStandardEvents, () => pb_1.Message.addToRepeatedWrapperField(message, 4, StandardEvent.deserialize(reader), StandardEvent));
                        break;
                    case 5:
                        reader.readMessage(message.passPageCustomEvents, () => pb_1.Message.addToRepeatedWrapperField(message, 5, CustomEvent.deserialize(reader), CustomEvent));
                        break;
                    case 6:
                        reader.readMessage(message.customerInitiatedRedemptionPageStandardEvents, () => pb_1.Message.addToRepeatedWrapperField(message, 6, StandardEvent.deserialize(reader), StandardEvent));
                        break;
                    case 7:
                        reader.readMessage(message.customerInitiatedRedemptionPageCustomEvents, () => pb_1.Message.addToRepeatedWrapperField(message, 7, CustomEvent.deserialize(reader), CustomEvent));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): FacebookPixelSettings {
            return FacebookPixelSettings.deserialize(bytes);
        }
    }
    export class StandardEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            event?: FbPixelStandardEvent;
            properties?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("event" in data && data.event != undefined) {
                    this.event = data.event;
                }
                if ("properties" in data && data.properties != undefined) {
                    this.properties = data.properties;
                }
            }
        }
        get event() {
            return pb_1.Message.getFieldWithDefault(this, 1, FbPixelStandardEvent.FBP_STANDARD_EVENT_DO_NOT_USE) as FbPixelStandardEvent;
        }
        set event(value: FbPixelStandardEvent) {
            pb_1.Message.setField(this, 1, value);
        }
        get properties() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set properties(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            event?: FbPixelStandardEvent;
            properties?: string;
        }): StandardEvent {
            const message = new StandardEvent({});
            if (data.event != null) {
                message.event = data.event;
            }
            if (data.properties != null) {
                message.properties = data.properties;
            }
            return message;
        }
        toObject() {
            const data: {
                event?: FbPixelStandardEvent;
                properties?: string;
            } = {};
            if (this.event != null) {
                data.event = this.event;
            }
            if (this.properties != null) {
                data.properties = this.properties;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.event != FbPixelStandardEvent.FBP_STANDARD_EVENT_DO_NOT_USE)
                writer.writeEnum(1, this.event);
            if (this.properties.length)
                writer.writeString(3, this.properties);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StandardEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StandardEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.event = reader.readEnum();
                        break;
                    case 3:
                        message.properties = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): StandardEvent {
            return StandardEvent.deserialize(bytes);
        }
    }
    export class CustomEvent extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            event?: string;
            properties?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("event" in data && data.event != undefined) {
                    this.event = data.event;
                }
                if ("properties" in data && data.properties != undefined) {
                    this.properties = data.properties;
                }
            }
        }
        get event() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set event(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get properties() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set properties(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            event?: string;
            properties?: string;
        }): CustomEvent {
            const message = new CustomEvent({});
            if (data.event != null) {
                message.event = data.event;
            }
            if (data.properties != null) {
                message.properties = data.properties;
            }
            return message;
        }
        toObject() {
            const data: {
                event?: string;
                properties?: string;
            } = {};
            if (this.event != null) {
                data.event = this.event;
            }
            if (this.properties != null) {
                data.properties = this.properties;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.event.length)
                writer.writeString(1, this.event);
            if (this.properties.length)
                writer.writeString(3, this.properties);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CustomEvent {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CustomEvent();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.event = reader.readString();
                        break;
                    case 3:
                        message.properties = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CustomEvent {
            return CustomEvent.deserialize(bytes);
        }
    }
    export class GoogleAnalyticsSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            trackingIds?: string[];
            dataCollectionPageEvents?: GoogleAnalyticsDataCollectionPageEvent[];
            passRenderPageEvents?: GoogleAnalyticsPassRenderPageEvent[];
            customerInitiatedRedemption?: GoogleAnalyticsCustomerInitiatedRedemptionPageEvent[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 2, 3, 4], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("trackingIds" in data && data.trackingIds != undefined) {
                    this.trackingIds = data.trackingIds;
                }
                if ("dataCollectionPageEvents" in data && data.dataCollectionPageEvents != undefined) {
                    this.dataCollectionPageEvents = data.dataCollectionPageEvents;
                }
                if ("passRenderPageEvents" in data && data.passRenderPageEvents != undefined) {
                    this.passRenderPageEvents = data.passRenderPageEvents;
                }
                if ("customerInitiatedRedemption" in data && data.customerInitiatedRedemption != undefined) {
                    this.customerInitiatedRedemption = data.customerInitiatedRedemption;
                }
            }
        }
        get trackingIds() {
            return pb_1.Message.getFieldWithDefault(this, 1, []) as string[];
        }
        set trackingIds(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        get dataCollectionPageEvents() {
            return pb_1.Message.getFieldWithDefault(this, 2, []) as GoogleAnalyticsDataCollectionPageEvent[];
        }
        set dataCollectionPageEvents(value: GoogleAnalyticsDataCollectionPageEvent[]) {
            pb_1.Message.setField(this, 2, value);
        }
        get passRenderPageEvents() {
            return pb_1.Message.getFieldWithDefault(this, 3, []) as GoogleAnalyticsPassRenderPageEvent[];
        }
        set passRenderPageEvents(value: GoogleAnalyticsPassRenderPageEvent[]) {
            pb_1.Message.setField(this, 3, value);
        }
        get customerInitiatedRedemption() {
            return pb_1.Message.getFieldWithDefault(this, 4, []) as GoogleAnalyticsCustomerInitiatedRedemptionPageEvent[];
        }
        set customerInitiatedRedemption(value: GoogleAnalyticsCustomerInitiatedRedemptionPageEvent[]) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            trackingIds?: string[];
            dataCollectionPageEvents?: GoogleAnalyticsDataCollectionPageEvent[];
            passRenderPageEvents?: GoogleAnalyticsPassRenderPageEvent[];
            customerInitiatedRedemption?: GoogleAnalyticsCustomerInitiatedRedemptionPageEvent[];
        }): GoogleAnalyticsSettings {
            const message = new GoogleAnalyticsSettings({});
            if (data.trackingIds != null) {
                message.trackingIds = data.trackingIds;
            }
            if (data.dataCollectionPageEvents != null) {
                message.dataCollectionPageEvents = data.dataCollectionPageEvents;
            }
            if (data.passRenderPageEvents != null) {
                message.passRenderPageEvents = data.passRenderPageEvents;
            }
            if (data.customerInitiatedRedemption != null) {
                message.customerInitiatedRedemption = data.customerInitiatedRedemption;
            }
            return message;
        }
        toObject() {
            const data: {
                trackingIds?: string[];
                dataCollectionPageEvents?: GoogleAnalyticsDataCollectionPageEvent[];
                passRenderPageEvents?: GoogleAnalyticsPassRenderPageEvent[];
                customerInitiatedRedemption?: GoogleAnalyticsCustomerInitiatedRedemptionPageEvent[];
            } = {};
            if (this.trackingIds != null) {
                data.trackingIds = this.trackingIds;
            }
            if (this.dataCollectionPageEvents != null) {
                data.dataCollectionPageEvents = this.dataCollectionPageEvents;
            }
            if (this.passRenderPageEvents != null) {
                data.passRenderPageEvents = this.passRenderPageEvents;
            }
            if (this.customerInitiatedRedemption != null) {
                data.customerInitiatedRedemption = this.customerInitiatedRedemption;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.trackingIds.length)
                writer.writeRepeatedString(1, this.trackingIds);
            if (this.dataCollectionPageEvents.length)
                writer.writePackedEnum(2, this.dataCollectionPageEvents);
            if (this.passRenderPageEvents.length)
                writer.writePackedEnum(3, this.passRenderPageEvents);
            if (this.customerInitiatedRedemption.length)
                writer.writePackedEnum(4, this.customerInitiatedRedemption);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GoogleAnalyticsSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GoogleAnalyticsSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    case 2:
                        message.dataCollectionPageEvents = reader.readPackedEnum();
                        break;
                    case 3:
                        message.passRenderPageEvents = reader.readPackedEnum();
                        break;
                    case 4:
                        message.customerInitiatedRedemption = reader.readPackedEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): GoogleAnalyticsSettings {
            return GoogleAnalyticsSettings.deserialize(bytes);
        }
    }
    export class TrackingSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            facebookPixelSettings?: FacebookPixelSettings;
            googleAnalyticsSettings?: GoogleAnalyticsSettings;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("facebookPixelSettings" in data && data.facebookPixelSettings != undefined) {
                    this.facebookPixelSettings = data.facebookPixelSettings;
                }
                if ("googleAnalyticsSettings" in data && data.googleAnalyticsSettings != undefined) {
                    this.googleAnalyticsSettings = data.googleAnalyticsSettings;
                }
            }
        }
        get facebookPixelSettings() {
            return pb_1.Message.getWrapperField(this, FacebookPixelSettings, 1) as FacebookPixelSettings;
        }
        set facebookPixelSettings(value: FacebookPixelSettings) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get hasFacebookPixelSettings() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get googleAnalyticsSettings() {
            return pb_1.Message.getWrapperField(this, GoogleAnalyticsSettings, 2) as GoogleAnalyticsSettings;
        }
        set googleAnalyticsSettings(value: GoogleAnalyticsSettings) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasGoogleAnalyticsSettings() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            facebookPixelSettings?: ReturnType<typeof FacebookPixelSettings.prototype.toObject>;
            googleAnalyticsSettings?: ReturnType<typeof GoogleAnalyticsSettings.prototype.toObject>;
        }): TrackingSettings {
            const message = new TrackingSettings({});
            if (data.facebookPixelSettings != null) {
                message.facebookPixelSettings = FacebookPixelSettings.fromObject(data.facebookPixelSettings);
            }
            if (data.googleAnalyticsSettings != null) {
                message.googleAnalyticsSettings = GoogleAnalyticsSettings.fromObject(data.googleAnalyticsSettings);
            }
            return message;
        }
        toObject() {
            const data: {
                facebookPixelSettings?: ReturnType<typeof FacebookPixelSettings.prototype.toObject>;
                googleAnalyticsSettings?: ReturnType<typeof GoogleAnalyticsSettings.prototype.toObject>;
            } = {};
            if (this.facebookPixelSettings != null) {
                data.facebookPixelSettings = this.facebookPixelSettings.toObject();
            }
            if (this.googleAnalyticsSettings != null) {
                data.googleAnalyticsSettings = this.googleAnalyticsSettings.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.hasFacebookPixelSettings)
                writer.writeMessage(1, this.facebookPixelSettings, () => this.facebookPixelSettings.serialize(writer));
            if (this.hasGoogleAnalyticsSettings)
                writer.writeMessage(2, this.googleAnalyticsSettings, () => this.googleAnalyticsSettings.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TrackingSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TrackingSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.facebookPixelSettings, () => message.facebookPixelSettings = FacebookPixelSettings.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.googleAnalyticsSettings, () => message.googleAnalyticsSettings = GoogleAnalyticsSettings.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TrackingSettings {
            return TrackingSettings.deserialize(bytes);
        }
    }
}
