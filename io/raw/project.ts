/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/raw/project.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/timestamp";
import * as dependency_2 from "./../common/distribution";
import * as dependency_3 from "./../common/localization";
import * as dependency_4 from "./../common/project";
import * as dependency_5 from "./../common/billing";
import * as dependency_6 from "./../../protoc-gen-openapiv2/options/annotations";
import * as pb_1 from "google-protobuf";
export namespace raw {
    export class PassProject extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            name?: string;
            localizedName?: dependency_3.io.LocalizedString;
            status?: dependency_4.io.ProjectStatus[];
            quota?: dependency_5.io.Quota;
            passTypeIdentifier?: string;
            distributionSettings?: dependency_2.io.DistributionSettings;
            created?: dependency_1.google.protobuf.Timestamp;
            updated?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("localizedName" in data && data.localizedName != undefined) {
                    this.localizedName = data.localizedName;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("quota" in data && data.quota != undefined) {
                    this.quota = data.quota;
                }
                if ("passTypeIdentifier" in data && data.passTypeIdentifier != undefined) {
                    this.passTypeIdentifier = data.passTypeIdentifier;
                }
                if ("distributionSettings" in data && data.distributionSettings != undefined) {
                    this.distributionSettings = data.distributionSettings;
                }
                if ("created" in data && data.created != undefined) {
                    this.created = data.created;
                }
                if ("updated" in data && data.updated != undefined) {
                    this.updated = data.updated;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get localizedName() {
            return pb_1.Message.getWrapperField(this, dependency_3.io.LocalizedString, 3) as dependency_3.io.LocalizedString;
        }
        set localizedName(value: dependency_3.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get hasLocalizedName() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 4, []) as dependency_4.io.ProjectStatus[];
        }
        set status(value: dependency_4.io.ProjectStatus[]) {
            pb_1.Message.setField(this, 4, value);
        }
        get quota() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.Quota, 5) as dependency_5.io.Quota;
        }
        set quota(value: dependency_5.io.Quota) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get hasQuota() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get passTypeIdentifier() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set passTypeIdentifier(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get distributionSettings() {
            return pb_1.Message.getWrapperField(this, dependency_2.io.DistributionSettings, 7) as dependency_2.io.DistributionSettings;
        }
        set distributionSettings(value: dependency_2.io.DistributionSettings) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get hasDistributionSettings() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get created() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 8) as dependency_1.google.protobuf.Timestamp;
        }
        set created(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get hasCreated() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get updated() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 9) as dependency_1.google.protobuf.Timestamp;
        }
        set updated(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get hasUpdated() {
            return pb_1.Message.getField(this, 9) != null;
        }
        static fromObject(data: {
            id?: string;
            name?: string;
            localizedName?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
            status?: dependency_4.io.ProjectStatus[];
            quota?: ReturnType<typeof dependency_5.io.Quota.prototype.toObject>;
            passTypeIdentifier?: string;
            distributionSettings?: ReturnType<typeof dependency_2.io.DistributionSettings.prototype.toObject>;
            created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): PassProject {
            const message = new PassProject({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.localizedName != null) {
                message.localizedName = dependency_3.io.LocalizedString.fromObject(data.localizedName);
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.quota != null) {
                message.quota = dependency_5.io.Quota.fromObject(data.quota);
            }
            if (data.passTypeIdentifier != null) {
                message.passTypeIdentifier = data.passTypeIdentifier;
            }
            if (data.distributionSettings != null) {
                message.distributionSettings = dependency_2.io.DistributionSettings.fromObject(data.distributionSettings);
            }
            if (data.created != null) {
                message.created = dependency_1.google.protobuf.Timestamp.fromObject(data.created);
            }
            if (data.updated != null) {
                message.updated = dependency_1.google.protobuf.Timestamp.fromObject(data.updated);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                name?: string;
                localizedName?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
                status?: dependency_4.io.ProjectStatus[];
                quota?: ReturnType<typeof dependency_5.io.Quota.prototype.toObject>;
                passTypeIdentifier?: string;
                distributionSettings?: ReturnType<typeof dependency_2.io.DistributionSettings.prototype.toObject>;
                created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.localizedName != null) {
                data.localizedName = this.localizedName.toObject();
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.quota != null) {
                data.quota = this.quota.toObject();
            }
            if (this.passTypeIdentifier != null) {
                data.passTypeIdentifier = this.passTypeIdentifier;
            }
            if (this.distributionSettings != null) {
                data.distributionSettings = this.distributionSettings.toObject();
            }
            if (this.created != null) {
                data.created = this.created.toObject();
            }
            if (this.updated != null) {
                data.updated = this.updated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.hasLocalizedName)
                writer.writeMessage(3, this.localizedName, () => this.localizedName.serialize(writer));
            if (this.status.length)
                writer.writePackedEnum(4, this.status);
            if (this.hasQuota)
                writer.writeMessage(5, this.quota, () => this.quota.serialize(writer));
            if (this.passTypeIdentifier.length)
                writer.writeString(6, this.passTypeIdentifier);
            if (this.hasDistributionSettings)
                writer.writeMessage(7, this.distributionSettings, () => this.distributionSettings.serialize(writer));
            if (this.hasCreated)
                writer.writeMessage(8, this.created, () => this.created.serialize(writer));
            if (this.hasUpdated)
                writer.writeMessage(9, this.updated, () => this.updated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PassProject {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PassProject();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.localizedName, () => message.localizedName = dependency_3.io.LocalizedString.deserialize(reader));
                        break;
                    case 4:
                        message.status = reader.readPackedEnum();
                        break;
                    case 5:
                        reader.readMessage(message.quota, () => message.quota = dependency_5.io.Quota.deserialize(reader));
                        break;
                    case 6:
                        message.passTypeIdentifier = reader.readString();
                        break;
                    case 7:
                        reader.readMessage(message.distributionSettings, () => message.distributionSettings = dependency_2.io.DistributionSettings.deserialize(reader));
                        break;
                    case 8:
                        reader.readMessage(message.created, () => message.created = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.updated, () => message.updated = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PassProject {
            return PassProject.deserialize(bytes);
        }
    }
    export class PassProjectCopyRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            name?: string;
            status?: dependency_4.io.ProjectStatus[];
            passTypeIdentifier?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("passTypeIdentifier" in data && data.passTypeIdentifier != undefined) {
                    this.passTypeIdentifier = data.passTypeIdentifier;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 3, []) as dependency_4.io.ProjectStatus[];
        }
        set status(value: dependency_4.io.ProjectStatus[]) {
            pb_1.Message.setField(this, 3, value);
        }
        get passTypeIdentifier() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set passTypeIdentifier(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            id?: string;
            name?: string;
            status?: dependency_4.io.ProjectStatus[];
            passTypeIdentifier?: string;
        }): PassProjectCopyRequest {
            const message = new PassProjectCopyRequest({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.passTypeIdentifier != null) {
                message.passTypeIdentifier = data.passTypeIdentifier;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                name?: string;
                status?: dependency_4.io.ProjectStatus[];
                passTypeIdentifier?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.passTypeIdentifier != null) {
                data.passTypeIdentifier = this.passTypeIdentifier;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.name.length)
                writer.writeString(2, this.name);
            if (this.status.length)
                writer.writePackedEnum(3, this.status);
            if (this.passTypeIdentifier.length)
                writer.writeString(4, this.passTypeIdentifier);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PassProjectCopyRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PassProjectCopyRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.name = reader.readString();
                        break;
                    case 3:
                        message.status = reader.readPackedEnum();
                        break;
                    case 4:
                        message.passTypeIdentifier = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PassProjectCopyRequest {
            return PassProjectCopyRequest.deserialize(bytes);
        }
    }
}
