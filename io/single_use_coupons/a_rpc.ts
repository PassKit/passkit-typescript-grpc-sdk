/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/single_use_coupons/a_rpc.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/empty";
import * as dependency_2 from "./../../google/api/annotations";
import * as dependency_3 from "./../common/common_objects";
import * as dependency_4 from "./../common/pagination";
import * as dependency_5 from "./../common/filter";
import * as dependency_6 from "./../common/reporting";
import * as dependency_7 from "./../common/personal";
import * as dependency_8 from "./campaign";
import * as dependency_9 from "./offer";
import * as dependency_10 from "./coupon";
import * as dependency_11 from "./../../protoc-gen-openapiv2/options/annotations";
import * as grpc_1 from "@grpc/grpc-js";
export namespace single_use_coupons {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedSingleUseCouponsService {
        static definition = {
            createCouponCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/createCouponCampaign",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.single_use_coupons.CouponCampaign) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CouponCampaign.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateCouponCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/updateCouponCampaign",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.single_use_coupons.CouponCampaign) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CouponCampaign.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.single_use_coupons.CouponCampaign) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CouponCampaign.deserialize(new Uint8Array(bytes))
            },
            getCouponCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/getCouponCampaign",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.single_use_coupons.CouponCampaign) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CouponCampaign.deserialize(new Uint8Array(bytes))
            },
            deleteCouponCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/deleteCouponCampaign",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            listCouponCampaignsDeprecated: {
                path: "/single_use_coupons.SingleUseCoupons/listCouponCampaignsDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_4.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.single_use_coupons.CouponCampaign) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CouponCampaign.deserialize(new Uint8Array(bytes))
            },
            listCouponCampaigns: {
                path: "/single_use_coupons.SingleUseCoupons/listCouponCampaigns",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_5.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.single_use_coupons.CouponCampaign) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CouponCampaign.deserialize(new Uint8Array(bytes))
            },
            getAnalytics: {
                path: "/single_use_coupons.SingleUseCoupons/getAnalytics",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.AnalyticsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.AnalyticsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.single_use_coupons.CouponCampaignAnalyticsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CouponCampaignAnalyticsResponse.deserialize(new Uint8Array(bytes))
            },
            createCouponOffer: {
                path: "/single_use_coupons.SingleUseCoupons/createCouponOffer",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.single_use_coupons.CouponOffer) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffer.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateCouponOffer: {
                path: "/single_use_coupons.SingleUseCoupons/updateCouponOffer",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.single_use_coupons.CouponOffer) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffer.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.single_use_coupons.CouponOffer) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffer.deserialize(new Uint8Array(bytes))
            },
            getCouponOffer: {
                path: "/single_use_coupons.SingleUseCoupons/getCouponOffer",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.single_use_coupons.CouponOffer) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffer.deserialize(new Uint8Array(bytes))
            },
            deleteCouponOffer: {
                path: "/single_use_coupons.SingleUseCoupons/deleteCouponOffer",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            listCouponOffersDeprecated: {
                path: "/single_use_coupons.SingleUseCoupons/listCouponOffersDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_9.single_use_coupons.CouponOffersListRequestDeprecated) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffersListRequestDeprecated.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.single_use_coupons.CouponOffer) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffer.deserialize(new Uint8Array(bytes))
            },
            listCouponOffers: {
                path: "/single_use_coupons.SingleUseCoupons/listCouponOffers",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_9.single_use_coupons.CouponOffersListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffersListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.single_use_coupons.CouponOffer) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.single_use_coupons.CouponOffer.deserialize(new Uint8Array(bytes))
            },
            createCoupon: {
                path: "/single_use_coupons.SingleUseCoupons/createCoupon",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateCoupon: {
                path: "/single_use_coupons.SingleUseCoupons/updateCoupon",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            streamCouponUpdates: {
                path: "/single_use_coupons.SingleUseCoupons/streamCouponUpdates",
                requestStream: true,
                responseStream: true,
                requestSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            redeemCoupon: {
                path: "/single_use_coupons.SingleUseCoupons/redeemCoupon",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateCouponExternalId: {
                path: "/single_use_coupons.SingleUseCoupons/updateCouponExternalId",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.CouponNewExternalIdRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.CouponNewExternalIdRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            streamCouponRedemptions: {
                path: "/single_use_coupons.SingleUseCoupons/streamCouponRedemptions",
                requestStream: true,
                responseStream: true,
                requestSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            getCouponById: {
                path: "/single_use_coupons.SingleUseCoupons/getCouponById",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes))
            },
            getCouponByExternalId: {
                path: "/single_use_coupons.SingleUseCoupons/getCouponByExternalId",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.ExternalIdRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.ExternalIdRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes))
            },
            voidCoupon: {
                path: "/single_use_coupons.SingleUseCoupons/voidCoupon",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            bulkVoidCoupons: {
                path: "/single_use_coupons.SingleUseCoupons/bulkVoidCoupons",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.BulkPassActionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.BulkPassActionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            listCouponsByCouponCampaignDeprecated: {
                path: "/single_use_coupons.SingleUseCoupons/listCouponsByCouponCampaignDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_10.single_use_coupons.ListRequestDeprecated) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.ListRequestDeprecated.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes))
            },
            listCouponsByCouponCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/listCouponsByCouponCampaign",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_10.single_use_coupons.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.single_use_coupons.Coupon) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.Coupon.deserialize(new Uint8Array(bytes))
            },
            countCouponsByCouponCampaignDeprecated: {
                path: "/single_use_coupons.SingleUseCoupons/countCouponsByCouponCampaignDeprecated",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.ListRequestDeprecated) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.ListRequestDeprecated.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Count.deserialize(new Uint8Array(bytes))
            },
            countCouponsByCouponCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/countCouponsByCouponCampaign",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.single_use_coupons.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.single_use_coupons.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Count.deserialize(new Uint8Array(bytes))
            },
            patchPerson: {
                path: "/single_use_coupons.SingleUseCoupons/patchPerson",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.io.PersonRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.PersonRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            copyCouponCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/copyCouponCampaign",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.single_use_coupons.CampaignCopyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.single_use_coupons.CampaignCopyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            getMetaKeysForCampaign: {
                path: "/single_use_coupons.SingleUseCoupons/getMetaKeysForCampaign",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Strings) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Strings.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract createCouponCampaign(call: grpc_1.ServerUnaryCall<dependency_8.single_use_coupons.CouponCampaign, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract updateCouponCampaign(call: grpc_1.ServerUnaryCall<dependency_8.single_use_coupons.CouponCampaign, dependency_8.single_use_coupons.CouponCampaign>, callback: grpc_1.sendUnaryData<dependency_8.single_use_coupons.CouponCampaign>): void;
        abstract getCouponCampaign(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_8.single_use_coupons.CouponCampaign>, callback: grpc_1.sendUnaryData<dependency_8.single_use_coupons.CouponCampaign>): void;
        abstract deleteCouponCampaign(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_1.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_1.google.protobuf.Empty>): void;
        abstract listCouponCampaignsDeprecated(call: grpc_1.ServerWritableStream<dependency_4.io.Pagination, dependency_8.single_use_coupons.CouponCampaign>): void;
        abstract listCouponCampaigns(call: grpc_1.ServerWritableStream<dependency_5.io.Filters, dependency_8.single_use_coupons.CouponCampaign>): void;
        abstract getAnalytics(call: grpc_1.ServerUnaryCall<dependency_6.io.AnalyticsRequest, dependency_8.single_use_coupons.CouponCampaignAnalyticsResponse>, callback: grpc_1.sendUnaryData<dependency_8.single_use_coupons.CouponCampaignAnalyticsResponse>): void;
        abstract createCouponOffer(call: grpc_1.ServerUnaryCall<dependency_9.single_use_coupons.CouponOffer, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract updateCouponOffer(call: grpc_1.ServerUnaryCall<dependency_9.single_use_coupons.CouponOffer, dependency_9.single_use_coupons.CouponOffer>, callback: grpc_1.sendUnaryData<dependency_9.single_use_coupons.CouponOffer>): void;
        abstract getCouponOffer(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_9.single_use_coupons.CouponOffer>, callback: grpc_1.sendUnaryData<dependency_9.single_use_coupons.CouponOffer>): void;
        abstract deleteCouponOffer(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_1.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_1.google.protobuf.Empty>): void;
        abstract listCouponOffersDeprecated(call: grpc_1.ServerWritableStream<dependency_9.single_use_coupons.CouponOffersListRequestDeprecated, dependency_9.single_use_coupons.CouponOffer>): void;
        abstract listCouponOffers(call: grpc_1.ServerWritableStream<dependency_9.single_use_coupons.CouponOffersListRequest, dependency_9.single_use_coupons.CouponOffer>): void;
        abstract createCoupon(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract updateCoupon(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract streamCouponUpdates(call: grpc_1.ServerDuplexStream<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id>): void;
        abstract redeemCoupon(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract updateCouponExternalId(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.CouponNewExternalIdRequest, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract streamCouponRedemptions(call: grpc_1.ServerDuplexStream<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id>): void;
        abstract getCouponById(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_10.single_use_coupons.Coupon>, callback: grpc_1.sendUnaryData<dependency_10.single_use_coupons.Coupon>): void;
        abstract getCouponByExternalId(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.ExternalIdRequest, dependency_10.single_use_coupons.Coupon>, callback: grpc_1.sendUnaryData<dependency_10.single_use_coupons.Coupon>): void;
        abstract voidCoupon(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.Coupon, dependency_1.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_1.google.protobuf.Empty>): void;
        abstract bulkVoidCoupons(call: grpc_1.ServerUnaryCall<dependency_3.io.BulkPassActionRequest, dependency_1.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_1.google.protobuf.Empty>): void;
        abstract listCouponsByCouponCampaignDeprecated(call: grpc_1.ServerWritableStream<dependency_10.single_use_coupons.ListRequestDeprecated, dependency_10.single_use_coupons.Coupon>): void;
        abstract listCouponsByCouponCampaign(call: grpc_1.ServerWritableStream<dependency_10.single_use_coupons.ListRequest, dependency_10.single_use_coupons.Coupon>): void;
        abstract countCouponsByCouponCampaignDeprecated(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.ListRequestDeprecated, dependency_3.io.Count>, callback: grpc_1.sendUnaryData<dependency_3.io.Count>): void;
        abstract countCouponsByCouponCampaign(call: grpc_1.ServerUnaryCall<dependency_10.single_use_coupons.ListRequest, dependency_3.io.Count>, callback: grpc_1.sendUnaryData<dependency_3.io.Count>): void;
        abstract patchPerson(call: grpc_1.ServerUnaryCall<dependency_7.io.PersonRequest, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract copyCouponCampaign(call: grpc_1.ServerUnaryCall<dependency_8.single_use_coupons.CampaignCopyRequest, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract getMetaKeysForCampaign(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_3.io.Strings>, callback: grpc_1.sendUnaryData<dependency_3.io.Strings>): void;
    }
    export class SingleUseCouponsClient extends grpc_1.makeGenericClientConstructor(UnimplementedSingleUseCouponsService.definition, "SingleUseCoupons", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        createCouponCampaign: GrpcPromiseServiceInterface<dependency_8.single_use_coupons.CouponCampaign, dependency_3.io.Id> = (message: dependency_8.single_use_coupons.CouponCampaign, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createCouponCampaign(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateCouponCampaign: GrpcPromiseServiceInterface<dependency_8.single_use_coupons.CouponCampaign, dependency_8.single_use_coupons.CouponCampaign> = (message: dependency_8.single_use_coupons.CouponCampaign, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.single_use_coupons.CouponCampaign> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateCouponCampaign(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.single_use_coupons.CouponCampaign) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getCouponCampaign: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_8.single_use_coupons.CouponCampaign> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.single_use_coupons.CouponCampaign> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getCouponCampaign(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.single_use_coupons.CouponCampaign) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteCouponCampaign: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_1.google.protobuf.Empty> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_1.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteCouponCampaign(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_1.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listCouponCampaignsDeprecated: GrpcStreamServiceInterface<dependency_4.io.Pagination, dependency_8.single_use_coupons.CouponCampaign> = (message: dependency_4.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_8.single_use_coupons.CouponCampaign> => {
            return super.listCouponCampaignsDeprecated(message, metadata, options);
        };
        listCouponCampaigns: GrpcStreamServiceInterface<dependency_5.io.Filters, dependency_8.single_use_coupons.CouponCampaign> = (message: dependency_5.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_8.single_use_coupons.CouponCampaign> => {
            return super.listCouponCampaigns(message, metadata, options);
        };
        getAnalytics: GrpcPromiseServiceInterface<dependency_6.io.AnalyticsRequest, dependency_8.single_use_coupons.CouponCampaignAnalyticsResponse> = (message: dependency_6.io.AnalyticsRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.single_use_coupons.CouponCampaignAnalyticsResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getAnalytics(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.single_use_coupons.CouponCampaignAnalyticsResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createCouponOffer: GrpcPromiseServiceInterface<dependency_9.single_use_coupons.CouponOffer, dependency_3.io.Id> = (message: dependency_9.single_use_coupons.CouponOffer, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createCouponOffer(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateCouponOffer: GrpcPromiseServiceInterface<dependency_9.single_use_coupons.CouponOffer, dependency_9.single_use_coupons.CouponOffer> = (message: dependency_9.single_use_coupons.CouponOffer, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.single_use_coupons.CouponOffer> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateCouponOffer(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.single_use_coupons.CouponOffer) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getCouponOffer: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_9.single_use_coupons.CouponOffer> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.single_use_coupons.CouponOffer> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getCouponOffer(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.single_use_coupons.CouponOffer) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteCouponOffer: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_1.google.protobuf.Empty> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_1.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteCouponOffer(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_1.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listCouponOffersDeprecated: GrpcStreamServiceInterface<dependency_9.single_use_coupons.CouponOffersListRequestDeprecated, dependency_9.single_use_coupons.CouponOffer> = (message: dependency_9.single_use_coupons.CouponOffersListRequestDeprecated, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_9.single_use_coupons.CouponOffer> => {
            return super.listCouponOffersDeprecated(message, metadata, options);
        };
        listCouponOffers: GrpcStreamServiceInterface<dependency_9.single_use_coupons.CouponOffersListRequest, dependency_9.single_use_coupons.CouponOffer> = (message: dependency_9.single_use_coupons.CouponOffersListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_9.single_use_coupons.CouponOffer> => {
            return super.listCouponOffers(message, metadata, options);
        };
        createCoupon: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id> = (message: dependency_10.single_use_coupons.Coupon, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createCoupon(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateCoupon: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id> = (message: dependency_10.single_use_coupons.Coupon, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateCoupon(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        streamCouponUpdates: GrpcChunkServiceInterface<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id> = (metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id> => {
            return super.streamCouponUpdates(metadata, options);
        };
        redeemCoupon: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id> = (message: dependency_10.single_use_coupons.Coupon, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.redeemCoupon(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateCouponExternalId: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.CouponNewExternalIdRequest, dependency_3.io.Id> = (message: dependency_10.single_use_coupons.CouponNewExternalIdRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateCouponExternalId(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        streamCouponRedemptions: GrpcChunkServiceInterface<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id> = (metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<dependency_10.single_use_coupons.Coupon, dependency_3.io.Id> => {
            return super.streamCouponRedemptions(metadata, options);
        };
        getCouponById: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_10.single_use_coupons.Coupon> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_10.single_use_coupons.Coupon> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getCouponById(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_10.single_use_coupons.Coupon) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getCouponByExternalId: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.ExternalIdRequest, dependency_10.single_use_coupons.Coupon> = (message: dependency_10.single_use_coupons.ExternalIdRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_10.single_use_coupons.Coupon> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getCouponByExternalId(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_10.single_use_coupons.Coupon) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        voidCoupon: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.Coupon, dependency_1.google.protobuf.Empty> = (message: dependency_10.single_use_coupons.Coupon, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_1.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.voidCoupon(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_1.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        bulkVoidCoupons: GrpcPromiseServiceInterface<dependency_3.io.BulkPassActionRequest, dependency_1.google.protobuf.Empty> = (message: dependency_3.io.BulkPassActionRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_1.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.bulkVoidCoupons(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_1.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listCouponsByCouponCampaignDeprecated: GrpcStreamServiceInterface<dependency_10.single_use_coupons.ListRequestDeprecated, dependency_10.single_use_coupons.Coupon> = (message: dependency_10.single_use_coupons.ListRequestDeprecated, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_10.single_use_coupons.Coupon> => {
            return super.listCouponsByCouponCampaignDeprecated(message, metadata, options);
        };
        listCouponsByCouponCampaign: GrpcStreamServiceInterface<dependency_10.single_use_coupons.ListRequest, dependency_10.single_use_coupons.Coupon> = (message: dependency_10.single_use_coupons.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_10.single_use_coupons.Coupon> => {
            return super.listCouponsByCouponCampaign(message, metadata, options);
        };
        countCouponsByCouponCampaignDeprecated: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.ListRequestDeprecated, dependency_3.io.Count> = (message: dependency_10.single_use_coupons.ListRequestDeprecated, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countCouponsByCouponCampaignDeprecated(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        countCouponsByCouponCampaign: GrpcPromiseServiceInterface<dependency_10.single_use_coupons.ListRequest, dependency_3.io.Count> = (message: dependency_10.single_use_coupons.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countCouponsByCouponCampaign(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        patchPerson: GrpcPromiseServiceInterface<dependency_7.io.PersonRequest, dependency_3.io.Id> = (message: dependency_7.io.PersonRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.patchPerson(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        copyCouponCampaign: GrpcPromiseServiceInterface<dependency_8.single_use_coupons.CampaignCopyRequest, dependency_3.io.Id> = (message: dependency_8.single_use_coupons.CampaignCopyRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.copyCouponCampaign(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getMetaKeysForCampaign: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_3.io.Strings> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Strings> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getMetaKeysForCampaign(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Strings) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
    }
}
