/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/single_use_coupons/coupon.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/timestamp";
import * as dependency_2 from "./../common/pagination";
import * as dependency_3 from "./../common/filter";
import * as dependency_4 from "./../common/pass";
import * as dependency_5 from "./../common/personal";
import * as dependency_6 from "./../common/metrics";
import * as dependency_7 from "./../../protoc-gen-openapiv2/options/annotations";
import * as pb_1 from "google-protobuf";
export namespace single_use_coupons {
    export enum CouponStatus {
        UNREDEEMED = 0,
        REDEEMED = 1
    }
    export class Coupon extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            externalId?: string;
            offerId?: string;
            campaignId?: string;
            person?: dependency_5.io.Person;
            metaData?: Map<string, string>;
            sku?: string;
            optOut?: boolean;
            status?: CouponStatus;
            expiryDate?: dependency_1.google.protobuf.Timestamp;
            redemptionDetails?: RedemptionDetails;
            passOverrides?: dependency_4.io.PassOverrides;
            passMetaData?: dependency_6.io.Metadata;
            created?: dependency_1.google.protobuf.Timestamp;
            updated?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("externalId" in data && data.externalId != undefined) {
                    this.externalId = data.externalId;
                }
                if ("offerId" in data && data.offerId != undefined) {
                    this.offerId = data.offerId;
                }
                if ("campaignId" in data && data.campaignId != undefined) {
                    this.campaignId = data.campaignId;
                }
                if ("person" in data && data.person != undefined) {
                    this.person = data.person;
                }
                if ("metaData" in data && data.metaData != undefined) {
                    this.metaData = data.metaData;
                }
                if ("sku" in data && data.sku != undefined) {
                    this.sku = data.sku;
                }
                if ("optOut" in data && data.optOut != undefined) {
                    this.optOut = data.optOut;
                }
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("expiryDate" in data && data.expiryDate != undefined) {
                    this.expiryDate = data.expiryDate;
                }
                if ("redemptionDetails" in data && data.redemptionDetails != undefined) {
                    this.redemptionDetails = data.redemptionDetails;
                }
                if ("passOverrides" in data && data.passOverrides != undefined) {
                    this.passOverrides = data.passOverrides;
                }
                if ("passMetaData" in data && data.passMetaData != undefined) {
                    this.passMetaData = data.passMetaData;
                }
                if ("created" in data && data.created != undefined) {
                    this.created = data.created;
                }
                if ("updated" in data && data.updated != undefined) {
                    this.updated = data.updated;
                }
            }
            if (!this.metaData)
                this.metaData = new Map();
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get externalId() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set externalId(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get offerId() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set offerId(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get campaignId() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set campaignId(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get person() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.Person, 5) as dependency_5.io.Person;
        }
        set person(value: dependency_5.io.Person) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get hasPerson() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get metaData() {
            return pb_1.Message.getField(this, 6) as any as Map<string, string>;
        }
        set metaData(value: Map<string, string>) {
            pb_1.Message.setField(this, 6, value as any);
        }
        get sku() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set sku(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get optOut() {
            return pb_1.Message.getFieldWithDefault(this, 8, false) as boolean;
        }
        set optOut(value: boolean) {
            pb_1.Message.setField(this, 8, value);
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 10, CouponStatus.UNREDEEMED) as CouponStatus;
        }
        set status(value: CouponStatus) {
            pb_1.Message.setField(this, 10, value);
        }
        get expiryDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 11) as dependency_1.google.protobuf.Timestamp;
        }
        set expiryDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 11, value);
        }
        get hasExpiryDate() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get redemptionDetails() {
            return pb_1.Message.getWrapperField(this, RedemptionDetails, 12) as RedemptionDetails;
        }
        set redemptionDetails(value: RedemptionDetails) {
            pb_1.Message.setWrapperField(this, 12, value);
        }
        get hasRedemptionDetails() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get passOverrides() {
            return pb_1.Message.getWrapperField(this, dependency_4.io.PassOverrides, 13) as dependency_4.io.PassOverrides;
        }
        set passOverrides(value: dependency_4.io.PassOverrides) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get hasPassOverrides() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get passMetaData() {
            return pb_1.Message.getWrapperField(this, dependency_6.io.Metadata, 14) as dependency_6.io.Metadata;
        }
        set passMetaData(value: dependency_6.io.Metadata) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get hasPassMetaData() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get created() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 15) as dependency_1.google.protobuf.Timestamp;
        }
        set created(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 15, value);
        }
        get hasCreated() {
            return pb_1.Message.getField(this, 15) != null;
        }
        get updated() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 16) as dependency_1.google.protobuf.Timestamp;
        }
        set updated(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 16, value);
        }
        get hasUpdated() {
            return pb_1.Message.getField(this, 16) != null;
        }
        static fromObject(data: {
            id?: string;
            externalId?: string;
            offerId?: string;
            campaignId?: string;
            person?: ReturnType<typeof dependency_5.io.Person.prototype.toObject>;
            metaData?: {
                [key: string]: string;
            };
            sku?: string;
            optOut?: boolean;
            status?: CouponStatus;
            expiryDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            redemptionDetails?: ReturnType<typeof RedemptionDetails.prototype.toObject>;
            passOverrides?: ReturnType<typeof dependency_4.io.PassOverrides.prototype.toObject>;
            passMetaData?: ReturnType<typeof dependency_6.io.Metadata.prototype.toObject>;
            created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): Coupon {
            const message = new Coupon({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.externalId != null) {
                message.externalId = data.externalId;
            }
            if (data.offerId != null) {
                message.offerId = data.offerId;
            }
            if (data.campaignId != null) {
                message.campaignId = data.campaignId;
            }
            if (data.person != null) {
                message.person = dependency_5.io.Person.fromObject(data.person);
            }
            if (typeof data.metaData == "object") {
                message.metaData = new Map(Object.entries(data.metaData));
            }
            if (data.sku != null) {
                message.sku = data.sku;
            }
            if (data.optOut != null) {
                message.optOut = data.optOut;
            }
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.expiryDate != null) {
                message.expiryDate = dependency_1.google.protobuf.Timestamp.fromObject(data.expiryDate);
            }
            if (data.redemptionDetails != null) {
                message.redemptionDetails = RedemptionDetails.fromObject(data.redemptionDetails);
            }
            if (data.passOverrides != null) {
                message.passOverrides = dependency_4.io.PassOverrides.fromObject(data.passOverrides);
            }
            if (data.passMetaData != null) {
                message.passMetaData = dependency_6.io.Metadata.fromObject(data.passMetaData);
            }
            if (data.created != null) {
                message.created = dependency_1.google.protobuf.Timestamp.fromObject(data.created);
            }
            if (data.updated != null) {
                message.updated = dependency_1.google.protobuf.Timestamp.fromObject(data.updated);
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                externalId?: string;
                offerId?: string;
                campaignId?: string;
                person?: ReturnType<typeof dependency_5.io.Person.prototype.toObject>;
                metaData?: {
                    [key: string]: string;
                };
                sku?: string;
                optOut?: boolean;
                status?: CouponStatus;
                expiryDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                redemptionDetails?: ReturnType<typeof RedemptionDetails.prototype.toObject>;
                passOverrides?: ReturnType<typeof dependency_4.io.PassOverrides.prototype.toObject>;
                passMetaData?: ReturnType<typeof dependency_6.io.Metadata.prototype.toObject>;
                created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.externalId != null) {
                data.externalId = this.externalId;
            }
            if (this.offerId != null) {
                data.offerId = this.offerId;
            }
            if (this.campaignId != null) {
                data.campaignId = this.campaignId;
            }
            if (this.person != null) {
                data.person = this.person.toObject();
            }
            if (this.metaData != null) {
                data.metaData = (Object.fromEntries)(this.metaData);
            }
            if (this.sku != null) {
                data.sku = this.sku;
            }
            if (this.optOut != null) {
                data.optOut = this.optOut;
            }
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.expiryDate != null) {
                data.expiryDate = this.expiryDate.toObject();
            }
            if (this.redemptionDetails != null) {
                data.redemptionDetails = this.redemptionDetails.toObject();
            }
            if (this.passOverrides != null) {
                data.passOverrides = this.passOverrides.toObject();
            }
            if (this.passMetaData != null) {
                data.passMetaData = this.passMetaData.toObject();
            }
            if (this.created != null) {
                data.created = this.created.toObject();
            }
            if (this.updated != null) {
                data.updated = this.updated.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.externalId.length)
                writer.writeString(2, this.externalId);
            if (this.offerId.length)
                writer.writeString(3, this.offerId);
            if (this.campaignId.length)
                writer.writeString(4, this.campaignId);
            if (this.hasPerson)
                writer.writeMessage(5, this.person, () => this.person.serialize(writer));
            for (const [key, value] of this.metaData) {
                writer.writeMessage(6, this.metaData, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (this.sku.length)
                writer.writeString(7, this.sku);
            if (this.optOut != false)
                writer.writeBool(8, this.optOut);
            if (this.status != CouponStatus.UNREDEEMED)
                writer.writeEnum(10, this.status);
            if (this.hasExpiryDate)
                writer.writeMessage(11, this.expiryDate, () => this.expiryDate.serialize(writer));
            if (this.hasRedemptionDetails)
                writer.writeMessage(12, this.redemptionDetails, () => this.redemptionDetails.serialize(writer));
            if (this.hasPassOverrides)
                writer.writeMessage(13, this.passOverrides, () => this.passOverrides.serialize(writer));
            if (this.hasPassMetaData)
                writer.writeMessage(14, this.passMetaData, () => this.passMetaData.serialize(writer));
            if (this.hasCreated)
                writer.writeMessage(15, this.created, () => this.created.serialize(writer));
            if (this.hasUpdated)
                writer.writeMessage(16, this.updated, () => this.updated.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Coupon {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Coupon();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.externalId = reader.readString();
                        break;
                    case 3:
                        message.offerId = reader.readString();
                        break;
                    case 4:
                        message.campaignId = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.person, () => message.person = dependency_5.io.Person.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.metaData as any, reader, reader.readString, reader.readString));
                        break;
                    case 7:
                        message.sku = reader.readString();
                        break;
                    case 8:
                        message.optOut = reader.readBool();
                        break;
                    case 10:
                        message.status = reader.readEnum();
                        break;
                    case 11:
                        reader.readMessage(message.expiryDate, () => message.expiryDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 12:
                        reader.readMessage(message.redemptionDetails, () => message.redemptionDetails = RedemptionDetails.deserialize(reader));
                        break;
                    case 13:
                        reader.readMessage(message.passOverrides, () => message.passOverrides = dependency_4.io.PassOverrides.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.passMetaData, () => message.passMetaData = dependency_6.io.Metadata.deserialize(reader));
                        break;
                    case 15:
                        reader.readMessage(message.created, () => message.created = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 16:
                        reader.readMessage(message.updated, () => message.updated = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Coupon {
            return Coupon.deserialize(bytes);
        }
    }
    export class RedemptionDetails extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            redemptionDate?: dependency_1.google.protobuf.Timestamp;
            redemptionCode?: string;
            lat?: number;
            lon?: number;
            alt?: number;
            redemptionSource?: string;
            redemptionReference?: string;
            transactionReference?: string;
            transactionAmount?: number;
            metaData?: Map<string, string>;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("redemptionDate" in data && data.redemptionDate != undefined) {
                    this.redemptionDate = data.redemptionDate;
                }
                if ("redemptionCode" in data && data.redemptionCode != undefined) {
                    this.redemptionCode = data.redemptionCode;
                }
                if ("lat" in data && data.lat != undefined) {
                    this.lat = data.lat;
                }
                if ("lon" in data && data.lon != undefined) {
                    this.lon = data.lon;
                }
                if ("alt" in data && data.alt != undefined) {
                    this.alt = data.alt;
                }
                if ("redemptionSource" in data && data.redemptionSource != undefined) {
                    this.redemptionSource = data.redemptionSource;
                }
                if ("redemptionReference" in data && data.redemptionReference != undefined) {
                    this.redemptionReference = data.redemptionReference;
                }
                if ("transactionReference" in data && data.transactionReference != undefined) {
                    this.transactionReference = data.transactionReference;
                }
                if ("transactionAmount" in data && data.transactionAmount != undefined) {
                    this.transactionAmount = data.transactionAmount;
                }
                if ("metaData" in data && data.metaData != undefined) {
                    this.metaData = data.metaData;
                }
            }
            if (!this.metaData)
                this.metaData = new Map();
        }
        get redemptionDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 1) as dependency_1.google.protobuf.Timestamp;
        }
        set redemptionDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get hasRedemptionDate() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get redemptionCode() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set redemptionCode(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get lat() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set lat(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get lon() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set lon(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        get alt() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set alt(value: number) {
            pb_1.Message.setField(this, 5, value);
        }
        get redemptionSource() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set redemptionSource(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get redemptionReference() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set redemptionReference(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get transactionReference() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set transactionReference(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get transactionAmount() {
            return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
        }
        set transactionAmount(value: number) {
            pb_1.Message.setField(this, 9, value);
        }
        get metaData() {
            return pb_1.Message.getField(this, 10) as any as Map<string, string>;
        }
        set metaData(value: Map<string, string>) {
            pb_1.Message.setField(this, 10, value as any);
        }
        static fromObject(data: {
            redemptionDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            redemptionCode?: string;
            lat?: number;
            lon?: number;
            alt?: number;
            redemptionSource?: string;
            redemptionReference?: string;
            transactionReference?: string;
            transactionAmount?: number;
            metaData?: {
                [key: string]: string;
            };
        }): RedemptionDetails {
            const message = new RedemptionDetails({});
            if (data.redemptionDate != null) {
                message.redemptionDate = dependency_1.google.protobuf.Timestamp.fromObject(data.redemptionDate);
            }
            if (data.redemptionCode != null) {
                message.redemptionCode = data.redemptionCode;
            }
            if (data.lat != null) {
                message.lat = data.lat;
            }
            if (data.lon != null) {
                message.lon = data.lon;
            }
            if (data.alt != null) {
                message.alt = data.alt;
            }
            if (data.redemptionSource != null) {
                message.redemptionSource = data.redemptionSource;
            }
            if (data.redemptionReference != null) {
                message.redemptionReference = data.redemptionReference;
            }
            if (data.transactionReference != null) {
                message.transactionReference = data.transactionReference;
            }
            if (data.transactionAmount != null) {
                message.transactionAmount = data.transactionAmount;
            }
            if (typeof data.metaData == "object") {
                message.metaData = new Map(Object.entries(data.metaData));
            }
            return message;
        }
        toObject() {
            const data: {
                redemptionDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                redemptionCode?: string;
                lat?: number;
                lon?: number;
                alt?: number;
                redemptionSource?: string;
                redemptionReference?: string;
                transactionReference?: string;
                transactionAmount?: number;
                metaData?: {
                    [key: string]: string;
                };
            } = {};
            if (this.redemptionDate != null) {
                data.redemptionDate = this.redemptionDate.toObject();
            }
            if (this.redemptionCode != null) {
                data.redemptionCode = this.redemptionCode;
            }
            if (this.lat != null) {
                data.lat = this.lat;
            }
            if (this.lon != null) {
                data.lon = this.lon;
            }
            if (this.alt != null) {
                data.alt = this.alt;
            }
            if (this.redemptionSource != null) {
                data.redemptionSource = this.redemptionSource;
            }
            if (this.redemptionReference != null) {
                data.redemptionReference = this.redemptionReference;
            }
            if (this.transactionReference != null) {
                data.transactionReference = this.transactionReference;
            }
            if (this.transactionAmount != null) {
                data.transactionAmount = this.transactionAmount;
            }
            if (this.metaData != null) {
                data.metaData = (Object.fromEntries)(this.metaData);
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.hasRedemptionDate)
                writer.writeMessage(1, this.redemptionDate, () => this.redemptionDate.serialize(writer));
            if (this.redemptionCode.length)
                writer.writeString(2, this.redemptionCode);
            if (this.lat != 0)
                writer.writeDouble(3, this.lat);
            if (this.lon != 0)
                writer.writeDouble(4, this.lon);
            if (this.alt != 0)
                writer.writeInt32(5, this.alt);
            if (this.redemptionSource.length)
                writer.writeString(6, this.redemptionSource);
            if (this.redemptionReference.length)
                writer.writeString(7, this.redemptionReference);
            if (this.transactionReference.length)
                writer.writeString(8, this.transactionReference);
            if (this.transactionAmount != 0)
                writer.writeDouble(9, this.transactionAmount);
            for (const [key, value] of this.metaData) {
                writer.writeMessage(10, this.metaData, () => {
                    writer.writeString(1, key);
                    writer.writeString(2, value);
                });
            }
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RedemptionDetails {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RedemptionDetails();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.redemptionDate, () => message.redemptionDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 2:
                        message.redemptionCode = reader.readString();
                        break;
                    case 3:
                        message.lat = reader.readDouble();
                        break;
                    case 4:
                        message.lon = reader.readDouble();
                        break;
                    case 5:
                        message.alt = reader.readInt32();
                        break;
                    case 6:
                        message.redemptionSource = reader.readString();
                        break;
                    case 7:
                        message.redemptionReference = reader.readString();
                        break;
                    case 8:
                        message.transactionReference = reader.readString();
                        break;
                    case 9:
                        message.transactionAmount = reader.readDouble();
                        break;
                    case 10:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.metaData as any, reader, reader.readString, reader.readString));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RedemptionDetails {
            return RedemptionDetails.deserialize(bytes);
        }
    }
    export class ExternalIdRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            couponCampaignId?: string;
            externalId?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("couponCampaignId" in data && data.couponCampaignId != undefined) {
                    this.couponCampaignId = data.couponCampaignId;
                }
                if ("externalId" in data && data.externalId != undefined) {
                    this.externalId = data.externalId;
                }
            }
        }
        get couponCampaignId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set couponCampaignId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get externalId() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set externalId(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            couponCampaignId?: string;
            externalId?: string;
        }): ExternalIdRequest {
            const message = new ExternalIdRequest({});
            if (data.couponCampaignId != null) {
                message.couponCampaignId = data.couponCampaignId;
            }
            if (data.externalId != null) {
                message.externalId = data.externalId;
            }
            return message;
        }
        toObject() {
            const data: {
                couponCampaignId?: string;
                externalId?: string;
            } = {};
            if (this.couponCampaignId != null) {
                data.couponCampaignId = this.couponCampaignId;
            }
            if (this.externalId != null) {
                data.externalId = this.externalId;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.couponCampaignId.length)
                writer.writeString(1, this.couponCampaignId);
            if (this.externalId.length)
                writer.writeString(2, this.externalId);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExternalIdRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExternalIdRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.couponCampaignId = reader.readString();
                        break;
                    case 2:
                        message.externalId = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExternalIdRequest {
            return ExternalIdRequest.deserialize(bytes);
        }
    }
    export class ListRequestDeprecated extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            couponCampaignId?: string;
            pagination?: dependency_2.io.Pagination;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("couponCampaignId" in data && data.couponCampaignId != undefined) {
                    this.couponCampaignId = data.couponCampaignId;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get couponCampaignId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set couponCampaignId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_2.io.Pagination, 2) as dependency_2.io.Pagination;
        }
        set pagination(value: dependency_2.io.Pagination) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasPagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            couponCampaignId?: string;
            pagination?: ReturnType<typeof dependency_2.io.Pagination.prototype.toObject>;
        }): ListRequestDeprecated {
            const message = new ListRequestDeprecated({});
            if (data.couponCampaignId != null) {
                message.couponCampaignId = data.couponCampaignId;
            }
            if (data.pagination != null) {
                message.pagination = dependency_2.io.Pagination.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                couponCampaignId?: string;
                pagination?: ReturnType<typeof dependency_2.io.Pagination.prototype.toObject>;
            } = {};
            if (this.couponCampaignId != null) {
                data.couponCampaignId = this.couponCampaignId;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.couponCampaignId.length)
                writer.writeString(1, this.couponCampaignId);
            if (this.hasPagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListRequestDeprecated {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListRequestDeprecated();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.couponCampaignId = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_2.io.Pagination.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListRequestDeprecated {
            return ListRequestDeprecated.deserialize(bytes);
        }
    }
    export class ListRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            couponCampaignId?: string;
            filters?: dependency_3.io.Filters;
            emailAsCsv?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("couponCampaignId" in data && data.couponCampaignId != undefined) {
                    this.couponCampaignId = data.couponCampaignId;
                }
                if ("filters" in data && data.filters != undefined) {
                    this.filters = data.filters;
                }
                if ("emailAsCsv" in data && data.emailAsCsv != undefined) {
                    this.emailAsCsv = data.emailAsCsv;
                }
            }
        }
        get couponCampaignId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set couponCampaignId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get filters() {
            return pb_1.Message.getWrapperField(this, dependency_3.io.Filters, 2) as dependency_3.io.Filters;
        }
        set filters(value: dependency_3.io.Filters) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasFilters() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get emailAsCsv() {
            return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
        }
        set emailAsCsv(value: boolean) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            couponCampaignId?: string;
            filters?: ReturnType<typeof dependency_3.io.Filters.prototype.toObject>;
            emailAsCsv?: boolean;
        }): ListRequest {
            const message = new ListRequest({});
            if (data.couponCampaignId != null) {
                message.couponCampaignId = data.couponCampaignId;
            }
            if (data.filters != null) {
                message.filters = dependency_3.io.Filters.fromObject(data.filters);
            }
            if (data.emailAsCsv != null) {
                message.emailAsCsv = data.emailAsCsv;
            }
            return message;
        }
        toObject() {
            const data: {
                couponCampaignId?: string;
                filters?: ReturnType<typeof dependency_3.io.Filters.prototype.toObject>;
                emailAsCsv?: boolean;
            } = {};
            if (this.couponCampaignId != null) {
                data.couponCampaignId = this.couponCampaignId;
            }
            if (this.filters != null) {
                data.filters = this.filters.toObject();
            }
            if (this.emailAsCsv != null) {
                data.emailAsCsv = this.emailAsCsv;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.couponCampaignId.length)
                writer.writeString(1, this.couponCampaignId);
            if (this.hasFilters)
                writer.writeMessage(2, this.filters, () => this.filters.serialize(writer));
            if (this.emailAsCsv != false)
                writer.writeBool(3, this.emailAsCsv);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.couponCampaignId = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.filters, () => message.filters = dependency_3.io.Filters.deserialize(reader));
                        break;
                    case 3:
                        message.emailAsCsv = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListRequest {
            return ListRequest.deserialize(bytes);
        }
    }
    export class CouponNewExternalIdRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            couponCampaignId?: string;
            externalId?: string;
            newExternalId?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("couponCampaignId" in data && data.couponCampaignId != undefined) {
                    this.couponCampaignId = data.couponCampaignId;
                }
                if ("externalId" in data && data.externalId != undefined) {
                    this.externalId = data.externalId;
                }
                if ("newExternalId" in data && data.newExternalId != undefined) {
                    this.newExternalId = data.newExternalId;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get couponCampaignId() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set couponCampaignId(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get externalId() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set externalId(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get newExternalId() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set newExternalId(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            id?: string;
            couponCampaignId?: string;
            externalId?: string;
            newExternalId?: string;
        }): CouponNewExternalIdRequest {
            const message = new CouponNewExternalIdRequest({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.couponCampaignId != null) {
                message.couponCampaignId = data.couponCampaignId;
            }
            if (data.externalId != null) {
                message.externalId = data.externalId;
            }
            if (data.newExternalId != null) {
                message.newExternalId = data.newExternalId;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                couponCampaignId?: string;
                externalId?: string;
                newExternalId?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.couponCampaignId != null) {
                data.couponCampaignId = this.couponCampaignId;
            }
            if (this.externalId != null) {
                data.externalId = this.externalId;
            }
            if (this.newExternalId != null) {
                data.newExternalId = this.newExternalId;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.couponCampaignId.length)
                writer.writeString(2, this.couponCampaignId);
            if (this.externalId.length)
                writer.writeString(3, this.externalId);
            if (this.newExternalId.length)
                writer.writeString(4, this.newExternalId);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CouponNewExternalIdRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CouponNewExternalIdRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.couponCampaignId = reader.readString();
                        break;
                    case 3:
                        message.externalId = reader.readString();
                        break;
                    case 4:
                        message.newExternalId = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CouponNewExternalIdRequest {
            return CouponNewExternalIdRequest.deserialize(bytes);
        }
    }
}
