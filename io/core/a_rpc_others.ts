/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/core/a_rpc_others.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/api/annotations";
import * as dependency_2 from "./../../google/protobuf/empty";
import * as dependency_3 from "./../../protoc-gen-openapiv2/options/annotations";
import * as dependency_4 from "./../common/common_objects";
import * as dependency_5 from "./../common/project";
import * as dependency_6 from "./../common/pagination";
import * as dependency_7 from "./../common/filter";
import * as dependency_8 from "./../common/integration";
import * as dependency_9 from "./../user/user";
import * as grpc_1 from "@grpc/grpc-js";
export namespace io {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedUsersService {
        static definition = {
            createUser: {
                path: "/io.Users/createUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.NewUser) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.NewUser.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.NewUserResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.NewUserResponse.deserialize(new Uint8Array(bytes))
            },
            newUser: {
                path: "/io.Users/newUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.NewUser) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.NewUser.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.JWT) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.JWT.deserialize(new Uint8Array(bytes))
            },
            verify: {
                path: "/io.Users/verify",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.VerifyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.VerifyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Boolean) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Boolean.deserialize(new Uint8Array(bytes))
            },
            resendVerificationEmail: {
                path: "/io.Users/resendVerificationEmail",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Boolean) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Boolean.deserialize(new Uint8Array(bytes))
            },
            getUser: {
                path: "/io.Users/getUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.GetUserResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.GetUserResponse.deserialize(new Uint8Array(bytes))
            },
            login: {
                path: "/io.Users/login",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.Credentials) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.Credentials.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.JWT) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.JWT.deserialize(new Uint8Array(bytes))
            },
            get2faBarcode: {
                path: "/io.Users/get2faBarcode",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Url) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Url.deserialize(new Uint8Array(bytes))
            },
            resetPassword: {
                path: "/io.Users/resetPassword",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.Credentials) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.Credentials.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            sendPasswordResetLink: {
                path: "/io.Users/sendPasswordResetLink",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.Username) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.Username.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            changePassword: {
                path: "/io.Users/changePassword",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.PasswordResetInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.PasswordResetInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            changeEmail: {
                path: "/io.Users/changeEmail",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.Email) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.Email.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            confirmEmailChange: {
                path: "/io.Users/confirmEmailChange",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.ConfirmEmailChangeInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.ConfirmEmailChangeInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            updateCompanyName: {
                path: "/io.Users/updateCompanyName",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.CompanyName) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.CompanyName.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getProjectsForUserQueryDeprecated: {
                path: "/io.Users/getProjectsForUserQueryDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_6.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Project) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Project.deserialize(new Uint8Array(bytes))
            },
            getProjectsQueryDeprecated: {
                path: "/io.Users/getProjectsQueryDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_6.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Project) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Project.deserialize(new Uint8Array(bytes))
            },
            getProjectsForUserQuery: {
                path: "/io.Users/getProjectsForUserQuery",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_7.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Project) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Project.deserialize(new Uint8Array(bytes))
            },
            getProjectsQuery: {
                path: "/io.Users/getProjectsQuery",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_7.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Project) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Project.deserialize(new Uint8Array(bytes))
            },
            getProjectByUuid: {
                path: "/io.Users/getProjectByUuid",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Project) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Project.deserialize(new Uint8Array(bytes))
            },
            getProjectAndTemplateByShortCode: {
                path: "/io.Users/getProjectAndTemplateByShortCode",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.ProjectByShortCodeResult) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.ProjectByShortCodeResult.deserialize(new Uint8Array(bytes))
            },
            getProjectsForUser: {
                path: "/io.Users/getProjectsForUser",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_5.io.ProjectStatusFilter) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.ProjectStatusFilter.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Project) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Project.deserialize(new Uint8Array(bytes))
            },
            getProjects: {
                path: "/io.Users/getProjects",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_5.io.ProjectStatusFilter) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.ProjectStatusFilter.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Project) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Project.deserialize(new Uint8Array(bytes))
            },
            getScannerConfig: {
                path: "/io.Users/getScannerConfig",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.ScannerConfiguration) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.ScannerConfiguration.deserialize(new Uint8Array(bytes))
            },
            createScannerConfig: {
                path: "/io.Users/createScannerConfig",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.ScannerConfiguration) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.ScannerConfiguration.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            updateScannerConfig: {
                path: "/io.Users/updateScannerConfig",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.ScannerConfiguration) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.ScannerConfiguration.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.ScannerConfiguration) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.ScannerConfiguration.deserialize(new Uint8Array(bytes))
            },
            createAuthorizationResource: {
                path: "/io.Users/createAuthorizationResource",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.OAuth2AuthorizationRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.OAuth2AuthorizationRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            deleteAuthorizationResource: {
                path: "/io.Users/deleteAuthorizationResource",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            refreshApiSecret: {
                path: "/io.Users/refreshApiSecret",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            deleteAccount: {
                path: "/io.Users/deleteAccount",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.DeleteAccountRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.DeleteAccountRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            revokeLegacyCredentials: {
                path: "/io.Users/revokeLegacyCredentials",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            createTeamMember: {
                path: "/io.Users/createTeamMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.NewTeamMember) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.NewTeamMember.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            createPermissionsForTeamMember: {
                path: "/io.Users/createPermissionsForTeamMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.TeamMemberPermissions) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.TeamMemberPermissions.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateTeamMemberPermissions: {
                path: "/io.Users/updateTeamMemberPermissions",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.TeamMemberPermissions) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.TeamMemberPermissions.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.TeamMemberPermissions) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.TeamMemberPermissions.deserialize(new Uint8Array(bytes))
            },
            patchTeamMemberPermissions: {
                path: "/io.Users/patchTeamMemberPermissions",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_9.io.TeamMemberPermissions) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.TeamMemberPermissions.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.TeamMemberPermissions) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.TeamMemberPermissions.deserialize(new Uint8Array(bytes))
            },
            getTeamMember: {
                path: "/io.Users/getTeamMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.GetTeamMemberResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.GetTeamMemberResponse.deserialize(new Uint8Array(bytes))
            },
            getTeamMembers: {
                path: "/io.Users/getTeamMembers",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.ListTeamMembersResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.ListTeamMembersResponse.deserialize(new Uint8Array(bytes))
            },
            deleteTeamMember: {
                path: "/io.Users/deleteTeamMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getTeamMemberLogs: {
                path: "/io.Users/getTeamMemberLogs",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_9.io.AuditLogRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_9.io.AuditLogRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.io.AuditLog) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.io.AuditLog.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract createUser(call: grpc_1.ServerUnaryCall<dependency_9.io.NewUser, dependency_9.io.NewUserResponse>, callback: grpc_1.sendUnaryData<dependency_9.io.NewUserResponse>): void;
        abstract newUser(call: grpc_1.ServerUnaryCall<dependency_9.io.NewUser, dependency_9.io.JWT>, callback: grpc_1.sendUnaryData<dependency_9.io.JWT>): void;
        abstract verify(call: grpc_1.ServerUnaryCall<dependency_9.io.VerifyRequest, dependency_4.io.Boolean>, callback: grpc_1.sendUnaryData<dependency_4.io.Boolean>): void;
        abstract resendVerificationEmail(call: grpc_1.ServerUnaryCall<dependency_2.google.protobuf.Empty, dependency_4.io.Boolean>, callback: grpc_1.sendUnaryData<dependency_4.io.Boolean>): void;
        abstract getUser(call: grpc_1.ServerUnaryCall<dependency_2.google.protobuf.Empty, dependency_9.io.GetUserResponse>, callback: grpc_1.sendUnaryData<dependency_9.io.GetUserResponse>): void;
        abstract login(call: grpc_1.ServerUnaryCall<dependency_9.io.Credentials, dependency_9.io.JWT>, callback: grpc_1.sendUnaryData<dependency_9.io.JWT>): void;
        abstract get2faBarcode(call: grpc_1.ServerUnaryCall<dependency_2.google.protobuf.Empty, dependency_4.io.Url>, callback: grpc_1.sendUnaryData<dependency_4.io.Url>): void;
        abstract resetPassword(call: grpc_1.ServerUnaryCall<dependency_9.io.Credentials, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract sendPasswordResetLink(call: grpc_1.ServerUnaryCall<dependency_9.io.Username, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract changePassword(call: grpc_1.ServerUnaryCall<dependency_9.io.PasswordResetInput, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract changeEmail(call: grpc_1.ServerUnaryCall<dependency_9.io.Email, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract confirmEmailChange(call: grpc_1.ServerUnaryCall<dependency_9.io.ConfirmEmailChangeInput, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract updateCompanyName(call: grpc_1.ServerUnaryCall<dependency_9.io.CompanyName, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getProjectsForUserQueryDeprecated(call: grpc_1.ServerWritableStream<dependency_6.io.Pagination, dependency_5.io.Project>): void;
        abstract getProjectsQueryDeprecated(call: grpc_1.ServerWritableStream<dependency_6.io.Pagination, dependency_5.io.Project>): void;
        abstract getProjectsForUserQuery(call: grpc_1.ServerWritableStream<dependency_7.io.Filters, dependency_5.io.Project>): void;
        abstract getProjectsQuery(call: grpc_1.ServerWritableStream<dependency_7.io.Filters, dependency_5.io.Project>): void;
        abstract getProjectByUuid(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_5.io.Project>, callback: grpc_1.sendUnaryData<dependency_5.io.Project>): void;
        abstract getProjectAndTemplateByShortCode(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_5.io.ProjectByShortCodeResult>, callback: grpc_1.sendUnaryData<dependency_5.io.ProjectByShortCodeResult>): void;
        abstract getProjectsForUser(call: grpc_1.ServerWritableStream<dependency_5.io.ProjectStatusFilter, dependency_5.io.Project>): void;
        abstract getProjects(call: grpc_1.ServerWritableStream<dependency_5.io.ProjectStatusFilter, dependency_5.io.Project>): void;
        abstract getScannerConfig(call: grpc_1.ServerUnaryCall<dependency_2.google.protobuf.Empty, dependency_9.io.ScannerConfiguration>, callback: grpc_1.sendUnaryData<dependency_9.io.ScannerConfiguration>): void;
        abstract createScannerConfig(call: grpc_1.ServerUnaryCall<dependency_9.io.ScannerConfiguration, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract updateScannerConfig(call: grpc_1.ServerUnaryCall<dependency_9.io.ScannerConfiguration, dependency_9.io.ScannerConfiguration>, callback: grpc_1.sendUnaryData<dependency_9.io.ScannerConfiguration>): void;
        abstract createAuthorizationResource(call: grpc_1.ServerUnaryCall<dependency_9.io.OAuth2AuthorizationRequest, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract deleteAuthorizationResource(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract refreshApiSecret(call: grpc_1.ServerUnaryCall<dependency_2.google.protobuf.Empty, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract deleteAccount(call: grpc_1.ServerUnaryCall<dependency_9.io.DeleteAccountRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract revokeLegacyCredentials(call: grpc_1.ServerUnaryCall<dependency_2.google.protobuf.Empty, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract createTeamMember(call: grpc_1.ServerUnaryCall<dependency_9.io.NewTeamMember, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract createPermissionsForTeamMember(call: grpc_1.ServerUnaryCall<dependency_9.io.TeamMemberPermissions, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract updateTeamMemberPermissions(call: grpc_1.ServerUnaryCall<dependency_9.io.TeamMemberPermissions, dependency_9.io.TeamMemberPermissions>, callback: grpc_1.sendUnaryData<dependency_9.io.TeamMemberPermissions>): void;
        abstract patchTeamMemberPermissions(call: grpc_1.ServerUnaryCall<dependency_9.io.TeamMemberPermissions, dependency_9.io.TeamMemberPermissions>, callback: grpc_1.sendUnaryData<dependency_9.io.TeamMemberPermissions>): void;
        abstract getTeamMember(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_9.io.GetTeamMemberResponse>, callback: grpc_1.sendUnaryData<dependency_9.io.GetTeamMemberResponse>): void;
        abstract getTeamMembers(call: grpc_1.ServerWritableStream<dependency_2.google.protobuf.Empty, dependency_9.io.ListTeamMembersResponse>): void;
        abstract deleteTeamMember(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getTeamMemberLogs(call: grpc_1.ServerWritableStream<dependency_9.io.AuditLogRequest, dependency_9.io.AuditLog>): void;
    }
    export class UsersClient extends grpc_1.makeGenericClientConstructor(UnimplementedUsersService.definition, "Users", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        createUser: GrpcPromiseServiceInterface<dependency_9.io.NewUser, dependency_9.io.NewUserResponse> = (message: dependency_9.io.NewUser, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.NewUserResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createUser(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.NewUserResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        newUser: GrpcPromiseServiceInterface<dependency_9.io.NewUser, dependency_9.io.JWT> = (message: dependency_9.io.NewUser, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.JWT> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.newUser(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.JWT) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        verify: GrpcPromiseServiceInterface<dependency_9.io.VerifyRequest, dependency_4.io.Boolean> = (message: dependency_9.io.VerifyRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Boolean> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.verify(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Boolean) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        resendVerificationEmail: GrpcPromiseServiceInterface<dependency_2.google.protobuf.Empty, dependency_4.io.Boolean> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Boolean> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.resendVerificationEmail(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Boolean) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getUser: GrpcPromiseServiceInterface<dependency_2.google.protobuf.Empty, dependency_9.io.GetUserResponse> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.GetUserResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getUser(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.GetUserResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        login: GrpcPromiseServiceInterface<dependency_9.io.Credentials, dependency_9.io.JWT> = (message: dependency_9.io.Credentials, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.JWT> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.login(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.JWT) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        get2faBarcode: GrpcPromiseServiceInterface<dependency_2.google.protobuf.Empty, dependency_4.io.Url> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Url> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.get2faBarcode(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Url) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        resetPassword: GrpcPromiseServiceInterface<dependency_9.io.Credentials, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.Credentials, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.resetPassword(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        sendPasswordResetLink: GrpcPromiseServiceInterface<dependency_9.io.Username, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.Username, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.sendPasswordResetLink(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        changePassword: GrpcPromiseServiceInterface<dependency_9.io.PasswordResetInput, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.PasswordResetInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.changePassword(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        changeEmail: GrpcPromiseServiceInterface<dependency_9.io.Email, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.Email, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.changeEmail(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        confirmEmailChange: GrpcPromiseServiceInterface<dependency_9.io.ConfirmEmailChangeInput, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.ConfirmEmailChangeInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.confirmEmailChange(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateCompanyName: GrpcPromiseServiceInterface<dependency_9.io.CompanyName, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.CompanyName, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateCompanyName(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getProjectsForUserQueryDeprecated: GrpcStreamServiceInterface<dependency_6.io.Pagination, dependency_5.io.Project> = (message: dependency_6.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_5.io.Project> => {
            return super.getProjectsForUserQueryDeprecated(message, metadata, options);
        };
        getProjectsQueryDeprecated: GrpcStreamServiceInterface<dependency_6.io.Pagination, dependency_5.io.Project> = (message: dependency_6.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_5.io.Project> => {
            return super.getProjectsQueryDeprecated(message, metadata, options);
        };
        getProjectsForUserQuery: GrpcStreamServiceInterface<dependency_7.io.Filters, dependency_5.io.Project> = (message: dependency_7.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_5.io.Project> => {
            return super.getProjectsForUserQuery(message, metadata, options);
        };
        getProjectsQuery: GrpcStreamServiceInterface<dependency_7.io.Filters, dependency_5.io.Project> = (message: dependency_7.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_5.io.Project> => {
            return super.getProjectsQuery(message, metadata, options);
        };
        getProjectByUuid: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_5.io.Project> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_5.io.Project> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getProjectByUuid(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_5.io.Project) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getProjectAndTemplateByShortCode: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_5.io.ProjectByShortCodeResult> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_5.io.ProjectByShortCodeResult> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getProjectAndTemplateByShortCode(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_5.io.ProjectByShortCodeResult) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getProjectsForUser: GrpcStreamServiceInterface<dependency_5.io.ProjectStatusFilter, dependency_5.io.Project> = (message: dependency_5.io.ProjectStatusFilter, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_5.io.Project> => {
            return super.getProjectsForUser(message, metadata, options);
        };
        getProjects: GrpcStreamServiceInterface<dependency_5.io.ProjectStatusFilter, dependency_5.io.Project> = (message: dependency_5.io.ProjectStatusFilter, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_5.io.Project> => {
            return super.getProjects(message, metadata, options);
        };
        getScannerConfig: GrpcPromiseServiceInterface<dependency_2.google.protobuf.Empty, dependency_9.io.ScannerConfiguration> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.ScannerConfiguration> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getScannerConfig(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.ScannerConfiguration) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createScannerConfig: GrpcPromiseServiceInterface<dependency_9.io.ScannerConfiguration, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.ScannerConfiguration, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createScannerConfig(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateScannerConfig: GrpcPromiseServiceInterface<dependency_9.io.ScannerConfiguration, dependency_9.io.ScannerConfiguration> = (message: dependency_9.io.ScannerConfiguration, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.ScannerConfiguration> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateScannerConfig(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.ScannerConfiguration) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createAuthorizationResource: GrpcPromiseServiceInterface<dependency_9.io.OAuth2AuthorizationRequest, dependency_4.io.Id> = (message: dependency_9.io.OAuth2AuthorizationRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createAuthorizationResource(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteAuthorizationResource: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteAuthorizationResource(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        refreshApiSecret: GrpcPromiseServiceInterface<dependency_2.google.protobuf.Empty, dependency_2.google.protobuf.Empty> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.refreshApiSecret(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteAccount: GrpcPromiseServiceInterface<dependency_9.io.DeleteAccountRequest, dependency_2.google.protobuf.Empty> = (message: dependency_9.io.DeleteAccountRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteAccount(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        revokeLegacyCredentials: GrpcPromiseServiceInterface<dependency_2.google.protobuf.Empty, dependency_2.google.protobuf.Empty> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.revokeLegacyCredentials(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createTeamMember: GrpcPromiseServiceInterface<dependency_9.io.NewTeamMember, dependency_4.io.Id> = (message: dependency_9.io.NewTeamMember, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createTeamMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createPermissionsForTeamMember: GrpcPromiseServiceInterface<dependency_9.io.TeamMemberPermissions, dependency_4.io.Id> = (message: dependency_9.io.TeamMemberPermissions, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createPermissionsForTeamMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateTeamMemberPermissions: GrpcPromiseServiceInterface<dependency_9.io.TeamMemberPermissions, dependency_9.io.TeamMemberPermissions> = (message: dependency_9.io.TeamMemberPermissions, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.TeamMemberPermissions> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateTeamMemberPermissions(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.TeamMemberPermissions) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        patchTeamMemberPermissions: GrpcPromiseServiceInterface<dependency_9.io.TeamMemberPermissions, dependency_9.io.TeamMemberPermissions> = (message: dependency_9.io.TeamMemberPermissions, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.TeamMemberPermissions> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.patchTeamMemberPermissions(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.TeamMemberPermissions) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getTeamMember: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_9.io.GetTeamMemberResponse> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.io.GetTeamMemberResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getTeamMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.io.GetTeamMemberResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getTeamMembers: GrpcStreamServiceInterface<dependency_2.google.protobuf.Empty, dependency_9.io.ListTeamMembersResponse> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_9.io.ListTeamMembersResponse> => {
            return super.getTeamMembers(message, metadata, options);
        };
        deleteTeamMember: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteTeamMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getTeamMemberLogs: GrpcStreamServiceInterface<dependency_9.io.AuditLogRequest, dependency_9.io.AuditLog> = (message: dependency_9.io.AuditLogRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_9.io.AuditLog> => {
            return super.getTeamMemberLogs(message, metadata, options);
        };
    }
    export abstract class UnimplementedIntegrationsService {
        static definition = {
            createIntegrations: {
                path: "/io.Integrations/createIntegrations",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.IntegrationConfigs) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.IntegrationConfigs.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            getIntegrations: {
                path: "/io.Integrations/getIntegrations",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.ProtocolIdInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.ProtocolIdInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.io.IntegrationConfigs) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.io.IntegrationConfigs.deserialize(new Uint8Array(bytes))
            },
            updateIntegrations: {
                path: "/io.Integrations/updateIntegrations",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.IntegrationConfigs) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.IntegrationConfigs.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            deleteIntegrations: {
                path: "/io.Integrations/deleteIntegrations",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.ProtocolIdInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.ProtocolIdInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            createSinkSubscription: {
                path: "/io.Integrations/createSinkSubscription",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.SinkSubscription) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.SinkSubscription.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            getSinkSubscription: {
                path: "/io.Integrations/getSinkSubscription",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.SubscriptionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.SubscriptionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.io.SinkSubscription) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.io.SinkSubscription.deserialize(new Uint8Array(bytes))
            },
            listSinkSubscriptionsDeprecated: {
                path: "/io.Integrations/listSinkSubscriptionsDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_4.io.ListRequestDeprecated) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.ListRequestDeprecated.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.io.SinkSubscription) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.io.SinkSubscription.deserialize(new Uint8Array(bytes))
            },
            listSinkSubscriptions: {
                path: "/io.Integrations/listSinkSubscriptions",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_4.io.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.io.SinkSubscription) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.io.SinkSubscription.deserialize(new Uint8Array(bytes))
            },
            updateSinkSubscription: {
                path: "/io.Integrations/updateSinkSubscription",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.SinkSubscription) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.SinkSubscription.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            deleteSinkSubscription: {
                path: "/io.Integrations/deleteSinkSubscription",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.SubscriptionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.SubscriptionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getSampleSubscriptionEvent: {
                path: "/io.Integrations/getSampleSubscriptionEvent",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.io.SinkSubscription) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.io.SinkSubscription.deserialize(new Uint8Array(bytes))
            },
            callDynamicApi: {
                path: "/io.Integrations/callDynamicApi",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.DynamicApiInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.DynamicApiInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.io.DynamicApiResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.io.DynamicApiResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract createIntegrations(call: grpc_1.ServerUnaryCall<dependency_8.io.IntegrationConfigs, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract getIntegrations(call: grpc_1.ServerUnaryCall<dependency_8.io.ProtocolIdInput, dependency_8.io.IntegrationConfigs>, callback: grpc_1.sendUnaryData<dependency_8.io.IntegrationConfigs>): void;
        abstract updateIntegrations(call: grpc_1.ServerUnaryCall<dependency_8.io.IntegrationConfigs, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract deleteIntegrations(call: grpc_1.ServerUnaryCall<dependency_8.io.ProtocolIdInput, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract createSinkSubscription(call: grpc_1.ServerUnaryCall<dependency_8.io.SinkSubscription, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract getSinkSubscription(call: grpc_1.ServerUnaryCall<dependency_8.io.SubscriptionRequest, dependency_8.io.SinkSubscription>, callback: grpc_1.sendUnaryData<dependency_8.io.SinkSubscription>): void;
        abstract listSinkSubscriptionsDeprecated(call: grpc_1.ServerWritableStream<dependency_4.io.ListRequestDeprecated, dependency_8.io.SinkSubscription>): void;
        abstract listSinkSubscriptions(call: grpc_1.ServerWritableStream<dependency_4.io.ListRequest, dependency_8.io.SinkSubscription>): void;
        abstract updateSinkSubscription(call: grpc_1.ServerUnaryCall<dependency_8.io.SinkSubscription, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract deleteSinkSubscription(call: grpc_1.ServerUnaryCall<dependency_8.io.SubscriptionRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getSampleSubscriptionEvent(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_8.io.SinkSubscription>, callback: grpc_1.sendUnaryData<dependency_8.io.SinkSubscription>): void;
        abstract callDynamicApi(call: grpc_1.ServerUnaryCall<dependency_8.io.DynamicApiInput, dependency_8.io.DynamicApiResponse>, callback: grpc_1.sendUnaryData<dependency_8.io.DynamicApiResponse>): void;
    }
    export class IntegrationsClient extends grpc_1.makeGenericClientConstructor(UnimplementedIntegrationsService.definition, "Integrations", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        createIntegrations: GrpcPromiseServiceInterface<dependency_8.io.IntegrationConfigs, dependency_4.io.Id> = (message: dependency_8.io.IntegrationConfigs, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createIntegrations(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getIntegrations: GrpcPromiseServiceInterface<dependency_8.io.ProtocolIdInput, dependency_8.io.IntegrationConfigs> = (message: dependency_8.io.ProtocolIdInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.io.IntegrationConfigs> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getIntegrations(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.io.IntegrationConfigs) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateIntegrations: GrpcPromiseServiceInterface<dependency_8.io.IntegrationConfigs, dependency_4.io.Id> = (message: dependency_8.io.IntegrationConfigs, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateIntegrations(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteIntegrations: GrpcPromiseServiceInterface<dependency_8.io.ProtocolIdInput, dependency_2.google.protobuf.Empty> = (message: dependency_8.io.ProtocolIdInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteIntegrations(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createSinkSubscription: GrpcPromiseServiceInterface<dependency_8.io.SinkSubscription, dependency_4.io.Id> = (message: dependency_8.io.SinkSubscription, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createSinkSubscription(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getSinkSubscription: GrpcPromiseServiceInterface<dependency_8.io.SubscriptionRequest, dependency_8.io.SinkSubscription> = (message: dependency_8.io.SubscriptionRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.io.SinkSubscription> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getSinkSubscription(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.io.SinkSubscription) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listSinkSubscriptionsDeprecated: GrpcStreamServiceInterface<dependency_4.io.ListRequestDeprecated, dependency_8.io.SinkSubscription> = (message: dependency_4.io.ListRequestDeprecated, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_8.io.SinkSubscription> => {
            return super.listSinkSubscriptionsDeprecated(message, metadata, options);
        };
        listSinkSubscriptions: GrpcStreamServiceInterface<dependency_4.io.ListRequest, dependency_8.io.SinkSubscription> = (message: dependency_4.io.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_8.io.SinkSubscription> => {
            return super.listSinkSubscriptions(message, metadata, options);
        };
        updateSinkSubscription: GrpcPromiseServiceInterface<dependency_8.io.SinkSubscription, dependency_4.io.Id> = (message: dependency_8.io.SinkSubscription, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateSinkSubscription(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteSinkSubscription: GrpcPromiseServiceInterface<dependency_8.io.SubscriptionRequest, dependency_2.google.protobuf.Empty> = (message: dependency_8.io.SubscriptionRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteSinkSubscription(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getSampleSubscriptionEvent: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_8.io.SinkSubscription> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.io.SinkSubscription> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getSampleSubscriptionEvent(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.io.SinkSubscription) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        callDynamicApi: GrpcPromiseServiceInterface<dependency_8.io.DynamicApiInput, dependency_8.io.DynamicApiResponse> = (message: dependency_8.io.DynamicApiInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_8.io.DynamicApiResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.callDynamicApi(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_8.io.DynamicApiResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
    }
}
