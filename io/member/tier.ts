/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/member/tier.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/timestamp";
import * as dependency_2 from "./../../protoc-gen-openapiv2/options/annotations";
import * as dependency_3 from "./../common/localization";
import * as dependency_4 from "./../common/common_objects";
import * as dependency_5 from "./../common/expiry";
import * as pb_1 from "google-protobuf";
export namespace members {
    export class Tier extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            tierIndex?: number;
            name?: string;
            localizedName?: dependency_3.io.LocalizedString;
            secondaryTierName?: string;
            localizedSecondaryTierName?: dependency_3.io.LocalizedString;
            programId?: string;
            passTemplateId?: string;
            tierUpgradeMessage?: string;
            localizedTierUpgradeMessage?: dependency_3.io.LocalizedString;
            tierDowngradeMessage?: string;
            localizedTierDowngradeMessage?: dependency_3.io.LocalizedString;
            created?: dependency_1.google.protobuf.Timestamp;
            updated?: dependency_1.google.protobuf.Timestamp;
            pointsOverdrawn?: boolean;
            secondaryPointsOverdrawn?: boolean;
            expirySettings?: dependency_5.io.ExpirySettings;
            timezone?: string;
            allowTierEnrolment?: dependency_4.io.PkBool;
            shortCode?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("tierIndex" in data && data.tierIndex != undefined) {
                    this.tierIndex = data.tierIndex;
                }
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("localizedName" in data && data.localizedName != undefined) {
                    this.localizedName = data.localizedName;
                }
                if ("secondaryTierName" in data && data.secondaryTierName != undefined) {
                    this.secondaryTierName = data.secondaryTierName;
                }
                if ("localizedSecondaryTierName" in data && data.localizedSecondaryTierName != undefined) {
                    this.localizedSecondaryTierName = data.localizedSecondaryTierName;
                }
                if ("programId" in data && data.programId != undefined) {
                    this.programId = data.programId;
                }
                if ("passTemplateId" in data && data.passTemplateId != undefined) {
                    this.passTemplateId = data.passTemplateId;
                }
                if ("tierUpgradeMessage" in data && data.tierUpgradeMessage != undefined) {
                    this.tierUpgradeMessage = data.tierUpgradeMessage;
                }
                if ("localizedTierUpgradeMessage" in data && data.localizedTierUpgradeMessage != undefined) {
                    this.localizedTierUpgradeMessage = data.localizedTierUpgradeMessage;
                }
                if ("tierDowngradeMessage" in data && data.tierDowngradeMessage != undefined) {
                    this.tierDowngradeMessage = data.tierDowngradeMessage;
                }
                if ("localizedTierDowngradeMessage" in data && data.localizedTierDowngradeMessage != undefined) {
                    this.localizedTierDowngradeMessage = data.localizedTierDowngradeMessage;
                }
                if ("created" in data && data.created != undefined) {
                    this.created = data.created;
                }
                if ("updated" in data && data.updated != undefined) {
                    this.updated = data.updated;
                }
                if ("pointsOverdrawn" in data && data.pointsOverdrawn != undefined) {
                    this.pointsOverdrawn = data.pointsOverdrawn;
                }
                if ("secondaryPointsOverdrawn" in data && data.secondaryPointsOverdrawn != undefined) {
                    this.secondaryPointsOverdrawn = data.secondaryPointsOverdrawn;
                }
                if ("expirySettings" in data && data.expirySettings != undefined) {
                    this.expirySettings = data.expirySettings;
                }
                if ("timezone" in data && data.timezone != undefined) {
                    this.timezone = data.timezone;
                }
                if ("allowTierEnrolment" in data && data.allowTierEnrolment != undefined) {
                    this.allowTierEnrolment = data.allowTierEnrolment;
                }
                if ("shortCode" in data && data.shortCode != undefined) {
                    this.shortCode = data.shortCode;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get tierIndex() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set tierIndex(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get localizedName() {
            return pb_1.Message.getWrapperField(this, dependency_3.io.LocalizedString, 4) as dependency_3.io.LocalizedString;
        }
        set localizedName(value: dependency_3.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get hasLocalizedName() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get secondaryTierName() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set secondaryTierName(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get localizedSecondaryTierName() {
            return pb_1.Message.getWrapperField(this, dependency_3.io.LocalizedString, 6) as dependency_3.io.LocalizedString;
        }
        set localizedSecondaryTierName(value: dependency_3.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get hasLocalizedSecondaryTierName() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get programId() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set programId(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get passTemplateId() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set passTemplateId(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get tierUpgradeMessage() {
            return pb_1.Message.getFieldWithDefault(this, 9, "") as string;
        }
        set tierUpgradeMessage(value: string) {
            pb_1.Message.setField(this, 9, value);
        }
        get localizedTierUpgradeMessage() {
            return pb_1.Message.getWrapperField(this, dependency_3.io.LocalizedString, 10) as dependency_3.io.LocalizedString;
        }
        set localizedTierUpgradeMessage(value: dependency_3.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get hasLocalizedTierUpgradeMessage() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get tierDowngradeMessage() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set tierDowngradeMessage(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get localizedTierDowngradeMessage() {
            return pb_1.Message.getWrapperField(this, dependency_3.io.LocalizedString, 12) as dependency_3.io.LocalizedString;
        }
        set localizedTierDowngradeMessage(value: dependency_3.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 12, value);
        }
        get hasLocalizedTierDowngradeMessage() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get created() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 13) as dependency_1.google.protobuf.Timestamp;
        }
        set created(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get hasCreated() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get updated() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 14) as dependency_1.google.protobuf.Timestamp;
        }
        set updated(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get hasUpdated() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get pointsOverdrawn() {
            return pb_1.Message.getFieldWithDefault(this, 15, false) as boolean;
        }
        set pointsOverdrawn(value: boolean) {
            pb_1.Message.setField(this, 15, value);
        }
        get secondaryPointsOverdrawn() {
            return pb_1.Message.getFieldWithDefault(this, 16, false) as boolean;
        }
        set secondaryPointsOverdrawn(value: boolean) {
            pb_1.Message.setField(this, 16, value);
        }
        get expirySettings() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.ExpirySettings, 17) as dependency_5.io.ExpirySettings;
        }
        set expirySettings(value: dependency_5.io.ExpirySettings) {
            pb_1.Message.setWrapperField(this, 17, value);
        }
        get hasExpirySettings() {
            return pb_1.Message.getField(this, 17) != null;
        }
        get timezone() {
            return pb_1.Message.getFieldWithDefault(this, 18, "") as string;
        }
        set timezone(value: string) {
            pb_1.Message.setField(this, 18, value);
        }
        get allowTierEnrolment() {
            return pb_1.Message.getWrapperField(this, dependency_4.io.PkBool, 19) as dependency_4.io.PkBool;
        }
        set allowTierEnrolment(value: dependency_4.io.PkBool) {
            pb_1.Message.setWrapperField(this, 19, value);
        }
        get hasAllowTierEnrolment() {
            return pb_1.Message.getField(this, 19) != null;
        }
        get shortCode() {
            return pb_1.Message.getFieldWithDefault(this, 20, "") as string;
        }
        set shortCode(value: string) {
            pb_1.Message.setField(this, 20, value);
        }
        static fromObject(data: {
            id?: string;
            tierIndex?: number;
            name?: string;
            localizedName?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
            secondaryTierName?: string;
            localizedSecondaryTierName?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
            programId?: string;
            passTemplateId?: string;
            tierUpgradeMessage?: string;
            localizedTierUpgradeMessage?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
            tierDowngradeMessage?: string;
            localizedTierDowngradeMessage?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
            created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            pointsOverdrawn?: boolean;
            secondaryPointsOverdrawn?: boolean;
            expirySettings?: ReturnType<typeof dependency_5.io.ExpirySettings.prototype.toObject>;
            timezone?: string;
            allowTierEnrolment?: ReturnType<typeof dependency_4.io.PkBool.prototype.toObject>;
            shortCode?: string;
        }): Tier {
            const message = new Tier({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.tierIndex != null) {
                message.tierIndex = data.tierIndex;
            }
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.localizedName != null) {
                message.localizedName = dependency_3.io.LocalizedString.fromObject(data.localizedName);
            }
            if (data.secondaryTierName != null) {
                message.secondaryTierName = data.secondaryTierName;
            }
            if (data.localizedSecondaryTierName != null) {
                message.localizedSecondaryTierName = dependency_3.io.LocalizedString.fromObject(data.localizedSecondaryTierName);
            }
            if (data.programId != null) {
                message.programId = data.programId;
            }
            if (data.passTemplateId != null) {
                message.passTemplateId = data.passTemplateId;
            }
            if (data.tierUpgradeMessage != null) {
                message.tierUpgradeMessage = data.tierUpgradeMessage;
            }
            if (data.localizedTierUpgradeMessage != null) {
                message.localizedTierUpgradeMessage = dependency_3.io.LocalizedString.fromObject(data.localizedTierUpgradeMessage);
            }
            if (data.tierDowngradeMessage != null) {
                message.tierDowngradeMessage = data.tierDowngradeMessage;
            }
            if (data.localizedTierDowngradeMessage != null) {
                message.localizedTierDowngradeMessage = dependency_3.io.LocalizedString.fromObject(data.localizedTierDowngradeMessage);
            }
            if (data.created != null) {
                message.created = dependency_1.google.protobuf.Timestamp.fromObject(data.created);
            }
            if (data.updated != null) {
                message.updated = dependency_1.google.protobuf.Timestamp.fromObject(data.updated);
            }
            if (data.pointsOverdrawn != null) {
                message.pointsOverdrawn = data.pointsOverdrawn;
            }
            if (data.secondaryPointsOverdrawn != null) {
                message.secondaryPointsOverdrawn = data.secondaryPointsOverdrawn;
            }
            if (data.expirySettings != null) {
                message.expirySettings = dependency_5.io.ExpirySettings.fromObject(data.expirySettings);
            }
            if (data.timezone != null) {
                message.timezone = data.timezone;
            }
            if (data.allowTierEnrolment != null) {
                message.allowTierEnrolment = dependency_4.io.PkBool.fromObject(data.allowTierEnrolment);
            }
            if (data.shortCode != null) {
                message.shortCode = data.shortCode;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                tierIndex?: number;
                name?: string;
                localizedName?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
                secondaryTierName?: string;
                localizedSecondaryTierName?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
                programId?: string;
                passTemplateId?: string;
                tierUpgradeMessage?: string;
                localizedTierUpgradeMessage?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
                tierDowngradeMessage?: string;
                localizedTierDowngradeMessage?: ReturnType<typeof dependency_3.io.LocalizedString.prototype.toObject>;
                created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                pointsOverdrawn?: boolean;
                secondaryPointsOverdrawn?: boolean;
                expirySettings?: ReturnType<typeof dependency_5.io.ExpirySettings.prototype.toObject>;
                timezone?: string;
                allowTierEnrolment?: ReturnType<typeof dependency_4.io.PkBool.prototype.toObject>;
                shortCode?: string;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.tierIndex != null) {
                data.tierIndex = this.tierIndex;
            }
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.localizedName != null) {
                data.localizedName = this.localizedName.toObject();
            }
            if (this.secondaryTierName != null) {
                data.secondaryTierName = this.secondaryTierName;
            }
            if (this.localizedSecondaryTierName != null) {
                data.localizedSecondaryTierName = this.localizedSecondaryTierName.toObject();
            }
            if (this.programId != null) {
                data.programId = this.programId;
            }
            if (this.passTemplateId != null) {
                data.passTemplateId = this.passTemplateId;
            }
            if (this.tierUpgradeMessage != null) {
                data.tierUpgradeMessage = this.tierUpgradeMessage;
            }
            if (this.localizedTierUpgradeMessage != null) {
                data.localizedTierUpgradeMessage = this.localizedTierUpgradeMessage.toObject();
            }
            if (this.tierDowngradeMessage != null) {
                data.tierDowngradeMessage = this.tierDowngradeMessage;
            }
            if (this.localizedTierDowngradeMessage != null) {
                data.localizedTierDowngradeMessage = this.localizedTierDowngradeMessage.toObject();
            }
            if (this.created != null) {
                data.created = this.created.toObject();
            }
            if (this.updated != null) {
                data.updated = this.updated.toObject();
            }
            if (this.pointsOverdrawn != null) {
                data.pointsOverdrawn = this.pointsOverdrawn;
            }
            if (this.secondaryPointsOverdrawn != null) {
                data.secondaryPointsOverdrawn = this.secondaryPointsOverdrawn;
            }
            if (this.expirySettings != null) {
                data.expirySettings = this.expirySettings.toObject();
            }
            if (this.timezone != null) {
                data.timezone = this.timezone;
            }
            if (this.allowTierEnrolment != null) {
                data.allowTierEnrolment = this.allowTierEnrolment.toObject();
            }
            if (this.shortCode != null) {
                data.shortCode = this.shortCode;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.tierIndex != 0)
                writer.writeUint32(2, this.tierIndex);
            if (this.name.length)
                writer.writeString(3, this.name);
            if (this.hasLocalizedName)
                writer.writeMessage(4, this.localizedName, () => this.localizedName.serialize(writer));
            if (this.secondaryTierName.length)
                writer.writeString(5, this.secondaryTierName);
            if (this.hasLocalizedSecondaryTierName)
                writer.writeMessage(6, this.localizedSecondaryTierName, () => this.localizedSecondaryTierName.serialize(writer));
            if (this.programId.length)
                writer.writeString(7, this.programId);
            if (this.passTemplateId.length)
                writer.writeString(8, this.passTemplateId);
            if (this.tierUpgradeMessage.length)
                writer.writeString(9, this.tierUpgradeMessage);
            if (this.hasLocalizedTierUpgradeMessage)
                writer.writeMessage(10, this.localizedTierUpgradeMessage, () => this.localizedTierUpgradeMessage.serialize(writer));
            if (this.tierDowngradeMessage.length)
                writer.writeString(11, this.tierDowngradeMessage);
            if (this.hasLocalizedTierDowngradeMessage)
                writer.writeMessage(12, this.localizedTierDowngradeMessage, () => this.localizedTierDowngradeMessage.serialize(writer));
            if (this.hasCreated)
                writer.writeMessage(13, this.created, () => this.created.serialize(writer));
            if (this.hasUpdated)
                writer.writeMessage(14, this.updated, () => this.updated.serialize(writer));
            if (this.pointsOverdrawn != false)
                writer.writeBool(15, this.pointsOverdrawn);
            if (this.secondaryPointsOverdrawn != false)
                writer.writeBool(16, this.secondaryPointsOverdrawn);
            if (this.hasExpirySettings)
                writer.writeMessage(17, this.expirySettings, () => this.expirySettings.serialize(writer));
            if (this.timezone.length)
                writer.writeString(18, this.timezone);
            if (this.hasAllowTierEnrolment)
                writer.writeMessage(19, this.allowTierEnrolment, () => this.allowTierEnrolment.serialize(writer));
            if (this.shortCode.length)
                writer.writeString(20, this.shortCode);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Tier {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Tier();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.tierIndex = reader.readUint32();
                        break;
                    case 3:
                        message.name = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.localizedName, () => message.localizedName = dependency_3.io.LocalizedString.deserialize(reader));
                        break;
                    case 5:
                        message.secondaryTierName = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.localizedSecondaryTierName, () => message.localizedSecondaryTierName = dependency_3.io.LocalizedString.deserialize(reader));
                        break;
                    case 7:
                        message.programId = reader.readString();
                        break;
                    case 8:
                        message.passTemplateId = reader.readString();
                        break;
                    case 9:
                        message.tierUpgradeMessage = reader.readString();
                        break;
                    case 10:
                        reader.readMessage(message.localizedTierUpgradeMessage, () => message.localizedTierUpgradeMessage = dependency_3.io.LocalizedString.deserialize(reader));
                        break;
                    case 11:
                        message.tierDowngradeMessage = reader.readString();
                        break;
                    case 12:
                        reader.readMessage(message.localizedTierDowngradeMessage, () => message.localizedTierDowngradeMessage = dependency_3.io.LocalizedString.deserialize(reader));
                        break;
                    case 13:
                        reader.readMessage(message.created, () => message.created = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.updated, () => message.updated = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 15:
                        message.pointsOverdrawn = reader.readBool();
                        break;
                    case 16:
                        message.secondaryPointsOverdrawn = reader.readBool();
                        break;
                    case 17:
                        reader.readMessage(message.expirySettings, () => message.expirySettings = dependency_5.io.ExpirySettings.deserialize(reader));
                        break;
                    case 18:
                        message.timezone = reader.readString();
                        break;
                    case 19:
                        reader.readMessage(message.allowTierEnrolment, () => message.allowTierEnrolment = dependency_4.io.PkBool.deserialize(reader));
                        break;
                    case 20:
                        message.shortCode = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Tier {
            return Tier.deserialize(bytes);
        }
    }
    export class TierRequestInput extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            programId?: string;
            tierId?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("programId" in data && data.programId != undefined) {
                    this.programId = data.programId;
                }
                if ("tierId" in data && data.tierId != undefined) {
                    this.tierId = data.tierId;
                }
            }
        }
        get programId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set programId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get tierId() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set tierId(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            programId?: string;
            tierId?: string;
        }): TierRequestInput {
            const message = new TierRequestInput({});
            if (data.programId != null) {
                message.programId = data.programId;
            }
            if (data.tierId != null) {
                message.tierId = data.tierId;
            }
            return message;
        }
        toObject() {
            const data: {
                programId?: string;
                tierId?: string;
            } = {};
            if (this.programId != null) {
                data.programId = this.programId;
            }
            if (this.tierId != null) {
                data.tierId = this.tierId;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.programId.length)
                writer.writeString(1, this.programId);
            if (this.tierId.length)
                writer.writeString(2, this.tierId);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TierRequestInput {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TierRequestInput();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.programId = reader.readString();
                        break;
                    case 2:
                        message.tierId = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): TierRequestInput {
            return TierRequestInput.deserialize(bytes);
        }
    }
}
