/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/core/a_rpc_images.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/api/annotations";
import * as dependency_2 from "./../../google/protobuf/empty";
import * as dependency_3 from "./../../protoc-gen-openapiv2/options/annotations";
import * as dependency_4 from "./../common/common_objects";
import * as dependency_5 from "./../common/pagination";
import * as dependency_6 from "./../image/image";
import * as dependency_7 from "./../common/filter";
import * as grpc_1 from "@grpc/grpc-js";
export namespace io {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedImagesService {
        static definition = {
            setProfileImage: {
                path: "/io.Images/setProfileImage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.ProfileImageInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.ProfileImageInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getProfileImage: {
                path: "/io.Images/getProfileImage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Url) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Url.deserialize(new Uint8Array(bytes))
            },
            createImages: {
                path: "/io.Images/createImages",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.CreateImageInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.CreateImageInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageIds) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageIds.deserialize(new Uint8Array(bytes))
            },
            updateImage: {
                path: "/io.Images/updateImage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.UpdateImageInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.UpdateImageInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageRecord.deserialize(new Uint8Array(bytes))
            },
            getImageURL: {
                path: "/io.Images/getImageURL",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Url) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Url.deserialize(new Uint8Array(bytes))
            },
            getStampImageURL: {
                path: "/io.Images/getStampImageURL",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.StampImageRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.StampImageRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Url) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Url.deserialize(new Uint8Array(bytes))
            },
            getStampImageConfig: {
                path: "/io.Images/getStampImageConfig",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.StampImageConfig) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.StampImageConfig.deserialize(new Uint8Array(bytes))
            },
            updateStampImageConfig: {
                path: "/io.Images/updateStampImageConfig",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.StampImageConfig) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.StampImageConfig.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            getStampImagePreview: {
                path: "/io.Images/getStampImagePreview",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.StampImagePreviewRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.StampImagePreviewRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.StampImagePreview) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.StampImagePreview.deserialize(new Uint8Array(bytes))
            },
            getLocalizedImageURL: {
                path: "/io.Images/getLocalizedImageURL",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.LocalizedImageInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.LocalizedImageInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Url) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Url.deserialize(new Uint8Array(bytes))
            },
            getProfileImageById: {
                path: "/io.Images/getProfileImageById",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Url) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Url.deserialize(new Uint8Array(bytes))
            },
            getImageBundle: {
                path: "/io.Images/getImageBundle",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageBundle) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageBundle.deserialize(new Uint8Array(bytes))
            },
            getImageData: {
                path: "/io.Images/getImageData",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageRecord.deserialize(new Uint8Array(bytes))
            },
            deleteImage: {
                path: "/io.Images/deleteImage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            deleteLocalizedImage: {
                path: "/io.Images/deleteLocalizedImage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.io.LocalizedImageInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.LocalizedImageInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageRecord.deserialize(new Uint8Array(bytes))
            },
            listImagesForUserDeprecated: {
                path: "/io.Images/listImagesForUserDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_5.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageRecord.deserialize(new Uint8Array(bytes))
            },
            listImagesForUser: {
                path: "/io.Images/listImagesForUser",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_7.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageRecord.deserialize(new Uint8Array(bytes))
            },
            listImagesDeprecated: {
                path: "/io.Images/listImagesDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_5.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageRecord.deserialize(new Uint8Array(bytes))
            },
            listImages: {
                path: "/io.Images/listImages",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_7.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.io.ImageRecord) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.io.ImageRecord.deserialize(new Uint8Array(bytes))
            },
            countImagesDeprecated: {
                path: "/io.Images/countImagesDeprecated",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Count.deserialize(new Uint8Array(bytes))
            },
            countImages: {
                path: "/io.Images/countImages",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Count.deserialize(new Uint8Array(bytes))
            },
            countImagesForUserDeprecated: {
                path: "/io.Images/countImagesForUserDeprecated",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Count.deserialize(new Uint8Array(bytes))
            },
            countImagesForUser: {
                path: "/io.Images/countImagesForUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Count.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract setProfileImage(call: grpc_1.ServerUnaryCall<dependency_6.io.ProfileImageInput, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getProfileImage(call: grpc_1.ServerUnaryCall<dependency_2.google.protobuf.Empty, dependency_4.io.Url>, callback: grpc_1.sendUnaryData<dependency_4.io.Url>): void;
        abstract createImages(call: grpc_1.ServerUnaryCall<dependency_6.io.CreateImageInput, dependency_6.io.ImageIds>, callback: grpc_1.sendUnaryData<dependency_6.io.ImageIds>): void;
        abstract updateImage(call: grpc_1.ServerUnaryCall<dependency_6.io.UpdateImageInput, dependency_6.io.ImageRecord>, callback: grpc_1.sendUnaryData<dependency_6.io.ImageRecord>): void;
        abstract getImageURL(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_4.io.Url>, callback: grpc_1.sendUnaryData<dependency_4.io.Url>): void;
        abstract getStampImageURL(call: grpc_1.ServerUnaryCall<dependency_6.io.StampImageRequest, dependency_4.io.Url>, callback: grpc_1.sendUnaryData<dependency_4.io.Url>): void;
        abstract getStampImageConfig(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_6.io.StampImageConfig>, callback: grpc_1.sendUnaryData<dependency_6.io.StampImageConfig>): void;
        abstract updateStampImageConfig(call: grpc_1.ServerUnaryCall<dependency_6.io.StampImageConfig, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract getStampImagePreview(call: grpc_1.ServerUnaryCall<dependency_6.io.StampImagePreviewRequest, dependency_6.io.StampImagePreview>, callback: grpc_1.sendUnaryData<dependency_6.io.StampImagePreview>): void;
        abstract getLocalizedImageURL(call: grpc_1.ServerUnaryCall<dependency_6.io.LocalizedImageInput, dependency_4.io.Url>, callback: grpc_1.sendUnaryData<dependency_4.io.Url>): void;
        abstract getProfileImageById(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_4.io.Url>, callback: grpc_1.sendUnaryData<dependency_4.io.Url>): void;
        abstract getImageBundle(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_6.io.ImageBundle>, callback: grpc_1.sendUnaryData<dependency_6.io.ImageBundle>): void;
        abstract getImageData(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_6.io.ImageRecord>, callback: grpc_1.sendUnaryData<dependency_6.io.ImageRecord>): void;
        abstract deleteImage(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract deleteLocalizedImage(call: grpc_1.ServerUnaryCall<dependency_6.io.LocalizedImageInput, dependency_6.io.ImageRecord>, callback: grpc_1.sendUnaryData<dependency_6.io.ImageRecord>): void;
        abstract listImagesForUserDeprecated(call: grpc_1.ServerWritableStream<dependency_5.io.Pagination, dependency_6.io.ImageRecord>): void;
        abstract listImagesForUser(call: grpc_1.ServerWritableStream<dependency_7.io.Filters, dependency_6.io.ImageRecord>): void;
        abstract listImagesDeprecated(call: grpc_1.ServerWritableStream<dependency_5.io.Pagination, dependency_6.io.ImageRecord>): void;
        abstract listImages(call: grpc_1.ServerWritableStream<dependency_7.io.Filters, dependency_6.io.ImageRecord>): void;
        abstract countImagesDeprecated(call: grpc_1.ServerUnaryCall<dependency_5.io.Pagination, dependency_4.io.Count>, callback: grpc_1.sendUnaryData<dependency_4.io.Count>): void;
        abstract countImages(call: grpc_1.ServerUnaryCall<dependency_7.io.Filters, dependency_4.io.Count>, callback: grpc_1.sendUnaryData<dependency_4.io.Count>): void;
        abstract countImagesForUserDeprecated(call: grpc_1.ServerUnaryCall<dependency_5.io.Pagination, dependency_4.io.Count>, callback: grpc_1.sendUnaryData<dependency_4.io.Count>): void;
        abstract countImagesForUser(call: grpc_1.ServerUnaryCall<dependency_7.io.Filters, dependency_4.io.Count>, callback: grpc_1.sendUnaryData<dependency_4.io.Count>): void;
    }
    export class ImagesClient extends grpc_1.makeGenericClientConstructor(UnimplementedImagesService.definition, "Images", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        setProfileImage: GrpcPromiseServiceInterface<dependency_6.io.ProfileImageInput, dependency_2.google.protobuf.Empty> = (message: dependency_6.io.ProfileImageInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.setProfileImage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getProfileImage: GrpcPromiseServiceInterface<dependency_2.google.protobuf.Empty, dependency_4.io.Url> = (message: dependency_2.google.protobuf.Empty, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Url> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getProfileImage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Url) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createImages: GrpcPromiseServiceInterface<dependency_6.io.CreateImageInput, dependency_6.io.ImageIds> = (message: dependency_6.io.CreateImageInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.io.ImageIds> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createImages(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.io.ImageIds) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateImage: GrpcPromiseServiceInterface<dependency_6.io.UpdateImageInput, dependency_6.io.ImageRecord> = (message: dependency_6.io.UpdateImageInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.io.ImageRecord> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateImage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.io.ImageRecord) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getImageURL: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_4.io.Url> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Url> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getImageURL(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Url) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getStampImageURL: GrpcPromiseServiceInterface<dependency_6.io.StampImageRequest, dependency_4.io.Url> = (message: dependency_6.io.StampImageRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Url> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getStampImageURL(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Url) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getStampImageConfig: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_6.io.StampImageConfig> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.io.StampImageConfig> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getStampImageConfig(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.io.StampImageConfig) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateStampImageConfig: GrpcPromiseServiceInterface<dependency_6.io.StampImageConfig, dependency_4.io.Id> = (message: dependency_6.io.StampImageConfig, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateStampImageConfig(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getStampImagePreview: GrpcPromiseServiceInterface<dependency_6.io.StampImagePreviewRequest, dependency_6.io.StampImagePreview> = (message: dependency_6.io.StampImagePreviewRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.io.StampImagePreview> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getStampImagePreview(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.io.StampImagePreview) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getLocalizedImageURL: GrpcPromiseServiceInterface<dependency_6.io.LocalizedImageInput, dependency_4.io.Url> = (message: dependency_6.io.LocalizedImageInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Url> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getLocalizedImageURL(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Url) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getProfileImageById: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_4.io.Url> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Url> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getProfileImageById(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Url) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getImageBundle: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_6.io.ImageBundle> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.io.ImageBundle> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getImageBundle(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.io.ImageBundle) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getImageData: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_6.io.ImageRecord> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.io.ImageRecord> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getImageData(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.io.ImageRecord) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteImage: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteImage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteLocalizedImage: GrpcPromiseServiceInterface<dependency_6.io.LocalizedImageInput, dependency_6.io.ImageRecord> = (message: dependency_6.io.LocalizedImageInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.io.ImageRecord> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteLocalizedImage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.io.ImageRecord) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listImagesForUserDeprecated: GrpcStreamServiceInterface<dependency_5.io.Pagination, dependency_6.io.ImageRecord> = (message: dependency_5.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_6.io.ImageRecord> => {
            return super.listImagesForUserDeprecated(message, metadata, options);
        };
        listImagesForUser: GrpcStreamServiceInterface<dependency_7.io.Filters, dependency_6.io.ImageRecord> = (message: dependency_7.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_6.io.ImageRecord> => {
            return super.listImagesForUser(message, metadata, options);
        };
        listImagesDeprecated: GrpcStreamServiceInterface<dependency_5.io.Pagination, dependency_6.io.ImageRecord> = (message: dependency_5.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_6.io.ImageRecord> => {
            return super.listImagesDeprecated(message, metadata, options);
        };
        listImages: GrpcStreamServiceInterface<dependency_7.io.Filters, dependency_6.io.ImageRecord> = (message: dependency_7.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_6.io.ImageRecord> => {
            return super.listImages(message, metadata, options);
        };
        countImagesDeprecated: GrpcPromiseServiceInterface<dependency_5.io.Pagination, dependency_4.io.Count> = (message: dependency_5.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countImagesDeprecated(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        countImages: GrpcPromiseServiceInterface<dependency_7.io.Filters, dependency_4.io.Count> = (message: dependency_7.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countImages(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        countImagesForUserDeprecated: GrpcPromiseServiceInterface<dependency_5.io.Pagination, dependency_4.io.Count> = (message: dependency_5.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countImagesForUserDeprecated(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        countImagesForUser: GrpcPromiseServiceInterface<dependency_7.io.Filters, dependency_4.io.Count> = (message: dependency_7.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countImagesForUser(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
    }
}
