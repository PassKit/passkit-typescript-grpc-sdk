/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/single_use_coupons/offer.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/timestamp";
import * as dependency_2 from "./../common/billing";
import * as dependency_3 from "./../common/operation";
import * as dependency_4 from "./../common/distribution";
import * as dependency_5 from "./../common/localization";
import * as dependency_6 from "./../common/pagination";
import * as dependency_7 from "./../common/filter";
import * as dependency_8 from "./../common/template";
import * as dependency_9 from "./../image/image";
import * as dependency_10 from "./../../protoc-gen-openapiv2/options/annotations";
import * as pb_1 from "google-protobuf";
export namespace single_use_coupons {
    export enum CouponExpiryType {
        EXPIRY_DO_NOT_USE = 0,
        AUTO_EXPIRE_OFFER_END_DATE = 1,
        AUTO_EXPIRE_REDEMPTION_END_DATE = 2,
        EXPIRE_AFTER_X_DAYS = 3,
        EXPIRE_ON_VARIABLE_DATE_TIME = 4
    }
    export enum RedemptionType {
        REDEMPTION_TYPE_DO_NOT_USE = 0,
        REDEMPTION_TYPE_API = 1,
        REDEMPTION_TYPE_CUSTOMER_INITIATED = 2,
        REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_FIXED = 3,
        REDEMPTION_TYPE_CUSTOMER_INITIATED_CODE_PROVIDED_ON_REDEEM = 4
    }
    export class CouponOffer extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            id?: string;
            offerTitle?: string;
            localizedOfferTitle?: dependency_5.io.LocalizedString;
            offerShortTitle?: string;
            localizedOfferShortTitle?: dependency_5.io.LocalizedString;
            offerDetails?: string;
            localizedOfferDetails?: dependency_5.io.LocalizedString;
            offerFinePrint?: string;
            localizedOfferFinePrint?: dependency_5.io.LocalizedString;
            beforeRedeemPassTemplateId?: string;
            afterRedeemPassTemplateId?: string;
            quota?: dependency_2.io.Quota;
            couponExpirySettings?: CouponExpirySettings;
            redemptionSettings?: RedemptionSettings;
            issueStartDate?: dependency_1.google.protobuf.Timestamp;
            issueEndDate?: dependency_1.google.protobuf.Timestamp;
            created?: dependency_1.google.protobuf.Timestamp;
            updated?: dependency_1.google.protobuf.Timestamp;
            campaignId?: string;
            distributionSettings?: dependency_4.io.DistributionSettings;
            shortCode?: string;
            ianaTimezone?: string;
            disabled?: boolean;
            operation?: dependency_3.io.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("id" in data && data.id != undefined) {
                    this.id = data.id;
                }
                if ("offerTitle" in data && data.offerTitle != undefined) {
                    this.offerTitle = data.offerTitle;
                }
                if ("localizedOfferTitle" in data && data.localizedOfferTitle != undefined) {
                    this.localizedOfferTitle = data.localizedOfferTitle;
                }
                if ("offerShortTitle" in data && data.offerShortTitle != undefined) {
                    this.offerShortTitle = data.offerShortTitle;
                }
                if ("localizedOfferShortTitle" in data && data.localizedOfferShortTitle != undefined) {
                    this.localizedOfferShortTitle = data.localizedOfferShortTitle;
                }
                if ("offerDetails" in data && data.offerDetails != undefined) {
                    this.offerDetails = data.offerDetails;
                }
                if ("localizedOfferDetails" in data && data.localizedOfferDetails != undefined) {
                    this.localizedOfferDetails = data.localizedOfferDetails;
                }
                if ("offerFinePrint" in data && data.offerFinePrint != undefined) {
                    this.offerFinePrint = data.offerFinePrint;
                }
                if ("localizedOfferFinePrint" in data && data.localizedOfferFinePrint != undefined) {
                    this.localizedOfferFinePrint = data.localizedOfferFinePrint;
                }
                if ("beforeRedeemPassTemplateId" in data && data.beforeRedeemPassTemplateId != undefined) {
                    this.beforeRedeemPassTemplateId = data.beforeRedeemPassTemplateId;
                }
                if ("afterRedeemPassTemplateId" in data && data.afterRedeemPassTemplateId != undefined) {
                    this.afterRedeemPassTemplateId = data.afterRedeemPassTemplateId;
                }
                if ("quota" in data && data.quota != undefined) {
                    this.quota = data.quota;
                }
                if ("couponExpirySettings" in data && data.couponExpirySettings != undefined) {
                    this.couponExpirySettings = data.couponExpirySettings;
                }
                if ("redemptionSettings" in data && data.redemptionSettings != undefined) {
                    this.redemptionSettings = data.redemptionSettings;
                }
                if ("issueStartDate" in data && data.issueStartDate != undefined) {
                    this.issueStartDate = data.issueStartDate;
                }
                if ("issueEndDate" in data && data.issueEndDate != undefined) {
                    this.issueEndDate = data.issueEndDate;
                }
                if ("created" in data && data.created != undefined) {
                    this.created = data.created;
                }
                if ("updated" in data && data.updated != undefined) {
                    this.updated = data.updated;
                }
                if ("campaignId" in data && data.campaignId != undefined) {
                    this.campaignId = data.campaignId;
                }
                if ("distributionSettings" in data && data.distributionSettings != undefined) {
                    this.distributionSettings = data.distributionSettings;
                }
                if ("shortCode" in data && data.shortCode != undefined) {
                    this.shortCode = data.shortCode;
                }
                if ("ianaTimezone" in data && data.ianaTimezone != undefined) {
                    this.ianaTimezone = data.ianaTimezone;
                }
                if ("disabled" in data && data.disabled != undefined) {
                    this.disabled = data.disabled;
                }
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get id() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set id(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get offerTitle() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set offerTitle(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get localizedOfferTitle() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 3) as dependency_5.io.LocalizedString;
        }
        set localizedOfferTitle(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get hasLocalizedOfferTitle() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get offerShortTitle() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set offerShortTitle(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get localizedOfferShortTitle() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 5) as dependency_5.io.LocalizedString;
        }
        set localizedOfferShortTitle(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get hasLocalizedOfferShortTitle() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get offerDetails() {
            return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
        }
        set offerDetails(value: string) {
            pb_1.Message.setField(this, 6, value);
        }
        get localizedOfferDetails() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 7) as dependency_5.io.LocalizedString;
        }
        set localizedOfferDetails(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get hasLocalizedOfferDetails() {
            return pb_1.Message.getField(this, 7) != null;
        }
        get offerFinePrint() {
            return pb_1.Message.getFieldWithDefault(this, 8, "") as string;
        }
        set offerFinePrint(value: string) {
            pb_1.Message.setField(this, 8, value);
        }
        get localizedOfferFinePrint() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 9) as dependency_5.io.LocalizedString;
        }
        set localizedOfferFinePrint(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get hasLocalizedOfferFinePrint() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get beforeRedeemPassTemplateId() {
            return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
        }
        set beforeRedeemPassTemplateId(value: string) {
            pb_1.Message.setField(this, 10, value);
        }
        get afterRedeemPassTemplateId() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set afterRedeemPassTemplateId(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get quota() {
            return pb_1.Message.getWrapperField(this, dependency_2.io.Quota, 12) as dependency_2.io.Quota;
        }
        set quota(value: dependency_2.io.Quota) {
            pb_1.Message.setWrapperField(this, 12, value);
        }
        get hasQuota() {
            return pb_1.Message.getField(this, 12) != null;
        }
        get couponExpirySettings() {
            return pb_1.Message.getWrapperField(this, CouponExpirySettings, 13) as CouponExpirySettings;
        }
        set couponExpirySettings(value: CouponExpirySettings) {
            pb_1.Message.setWrapperField(this, 13, value);
        }
        get hasCouponExpirySettings() {
            return pb_1.Message.getField(this, 13) != null;
        }
        get redemptionSettings() {
            return pb_1.Message.getWrapperField(this, RedemptionSettings, 14) as RedemptionSettings;
        }
        set redemptionSettings(value: RedemptionSettings) {
            pb_1.Message.setWrapperField(this, 14, value);
        }
        get hasRedemptionSettings() {
            return pb_1.Message.getField(this, 14) != null;
        }
        get issueStartDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 15) as dependency_1.google.protobuf.Timestamp;
        }
        set issueStartDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 15, value);
        }
        get hasIssueStartDate() {
            return pb_1.Message.getField(this, 15) != null;
        }
        get issueEndDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 16) as dependency_1.google.protobuf.Timestamp;
        }
        set issueEndDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 16, value);
        }
        get hasIssueEndDate() {
            return pb_1.Message.getField(this, 16) != null;
        }
        get created() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 17) as dependency_1.google.protobuf.Timestamp;
        }
        set created(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 17, value);
        }
        get hasCreated() {
            return pb_1.Message.getField(this, 17) != null;
        }
        get updated() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 18) as dependency_1.google.protobuf.Timestamp;
        }
        set updated(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 18, value);
        }
        get hasUpdated() {
            return pb_1.Message.getField(this, 18) != null;
        }
        get campaignId() {
            return pb_1.Message.getFieldWithDefault(this, 19, "") as string;
        }
        set campaignId(value: string) {
            pb_1.Message.setField(this, 19, value);
        }
        get distributionSettings() {
            return pb_1.Message.getWrapperField(this, dependency_4.io.DistributionSettings, 20) as dependency_4.io.DistributionSettings;
        }
        set distributionSettings(value: dependency_4.io.DistributionSettings) {
            pb_1.Message.setWrapperField(this, 20, value);
        }
        get hasDistributionSettings() {
            return pb_1.Message.getField(this, 20) != null;
        }
        get shortCode() {
            return pb_1.Message.getFieldWithDefault(this, 21, "") as string;
        }
        set shortCode(value: string) {
            pb_1.Message.setField(this, 21, value);
        }
        get ianaTimezone() {
            return pb_1.Message.getFieldWithDefault(this, 22, "") as string;
        }
        set ianaTimezone(value: string) {
            pb_1.Message.setField(this, 22, value);
        }
        get disabled() {
            return pb_1.Message.getFieldWithDefault(this, 23, false) as boolean;
        }
        set disabled(value: boolean) {
            pb_1.Message.setField(this, 23, value);
        }
        get operation() {
            return pb_1.Message.getFieldWithDefault(this, 100, dependency_3.io.Operation.OPERATION_DO_NOT_USE) as dependency_3.io.Operation;
        }
        set operation(value: dependency_3.io.Operation) {
            pb_1.Message.setField(this, 100, value);
        }
        static fromObject(data: {
            id?: string;
            offerTitle?: string;
            localizedOfferTitle?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            offerShortTitle?: string;
            localizedOfferShortTitle?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            offerDetails?: string;
            localizedOfferDetails?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            offerFinePrint?: string;
            localizedOfferFinePrint?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            beforeRedeemPassTemplateId?: string;
            afterRedeemPassTemplateId?: string;
            quota?: ReturnType<typeof dependency_2.io.Quota.prototype.toObject>;
            couponExpirySettings?: ReturnType<typeof CouponExpirySettings.prototype.toObject>;
            redemptionSettings?: ReturnType<typeof RedemptionSettings.prototype.toObject>;
            issueStartDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            issueEndDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            campaignId?: string;
            distributionSettings?: ReturnType<typeof dependency_4.io.DistributionSettings.prototype.toObject>;
            shortCode?: string;
            ianaTimezone?: string;
            disabled?: boolean;
            operation?: dependency_3.io.Operation;
        }): CouponOffer {
            const message = new CouponOffer({});
            if (data.id != null) {
                message.id = data.id;
            }
            if (data.offerTitle != null) {
                message.offerTitle = data.offerTitle;
            }
            if (data.localizedOfferTitle != null) {
                message.localizedOfferTitle = dependency_5.io.LocalizedString.fromObject(data.localizedOfferTitle);
            }
            if (data.offerShortTitle != null) {
                message.offerShortTitle = data.offerShortTitle;
            }
            if (data.localizedOfferShortTitle != null) {
                message.localizedOfferShortTitle = dependency_5.io.LocalizedString.fromObject(data.localizedOfferShortTitle);
            }
            if (data.offerDetails != null) {
                message.offerDetails = data.offerDetails;
            }
            if (data.localizedOfferDetails != null) {
                message.localizedOfferDetails = dependency_5.io.LocalizedString.fromObject(data.localizedOfferDetails);
            }
            if (data.offerFinePrint != null) {
                message.offerFinePrint = data.offerFinePrint;
            }
            if (data.localizedOfferFinePrint != null) {
                message.localizedOfferFinePrint = dependency_5.io.LocalizedString.fromObject(data.localizedOfferFinePrint);
            }
            if (data.beforeRedeemPassTemplateId != null) {
                message.beforeRedeemPassTemplateId = data.beforeRedeemPassTemplateId;
            }
            if (data.afterRedeemPassTemplateId != null) {
                message.afterRedeemPassTemplateId = data.afterRedeemPassTemplateId;
            }
            if (data.quota != null) {
                message.quota = dependency_2.io.Quota.fromObject(data.quota);
            }
            if (data.couponExpirySettings != null) {
                message.couponExpirySettings = CouponExpirySettings.fromObject(data.couponExpirySettings);
            }
            if (data.redemptionSettings != null) {
                message.redemptionSettings = RedemptionSettings.fromObject(data.redemptionSettings);
            }
            if (data.issueStartDate != null) {
                message.issueStartDate = dependency_1.google.protobuf.Timestamp.fromObject(data.issueStartDate);
            }
            if (data.issueEndDate != null) {
                message.issueEndDate = dependency_1.google.protobuf.Timestamp.fromObject(data.issueEndDate);
            }
            if (data.created != null) {
                message.created = dependency_1.google.protobuf.Timestamp.fromObject(data.created);
            }
            if (data.updated != null) {
                message.updated = dependency_1.google.protobuf.Timestamp.fromObject(data.updated);
            }
            if (data.campaignId != null) {
                message.campaignId = data.campaignId;
            }
            if (data.distributionSettings != null) {
                message.distributionSettings = dependency_4.io.DistributionSettings.fromObject(data.distributionSettings);
            }
            if (data.shortCode != null) {
                message.shortCode = data.shortCode;
            }
            if (data.ianaTimezone != null) {
                message.ianaTimezone = data.ianaTimezone;
            }
            if (data.disabled != null) {
                message.disabled = data.disabled;
            }
            if (data.operation != null) {
                message.operation = data.operation;
            }
            return message;
        }
        toObject() {
            const data: {
                id?: string;
                offerTitle?: string;
                localizedOfferTitle?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                offerShortTitle?: string;
                localizedOfferShortTitle?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                offerDetails?: string;
                localizedOfferDetails?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                offerFinePrint?: string;
                localizedOfferFinePrint?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                beforeRedeemPassTemplateId?: string;
                afterRedeemPassTemplateId?: string;
                quota?: ReturnType<typeof dependency_2.io.Quota.prototype.toObject>;
                couponExpirySettings?: ReturnType<typeof CouponExpirySettings.prototype.toObject>;
                redemptionSettings?: ReturnType<typeof RedemptionSettings.prototype.toObject>;
                issueStartDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                issueEndDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                updated?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                campaignId?: string;
                distributionSettings?: ReturnType<typeof dependency_4.io.DistributionSettings.prototype.toObject>;
                shortCode?: string;
                ianaTimezone?: string;
                disabled?: boolean;
                operation?: dependency_3.io.Operation;
            } = {};
            if (this.id != null) {
                data.id = this.id;
            }
            if (this.offerTitle != null) {
                data.offerTitle = this.offerTitle;
            }
            if (this.localizedOfferTitle != null) {
                data.localizedOfferTitle = this.localizedOfferTitle.toObject();
            }
            if (this.offerShortTitle != null) {
                data.offerShortTitle = this.offerShortTitle;
            }
            if (this.localizedOfferShortTitle != null) {
                data.localizedOfferShortTitle = this.localizedOfferShortTitle.toObject();
            }
            if (this.offerDetails != null) {
                data.offerDetails = this.offerDetails;
            }
            if (this.localizedOfferDetails != null) {
                data.localizedOfferDetails = this.localizedOfferDetails.toObject();
            }
            if (this.offerFinePrint != null) {
                data.offerFinePrint = this.offerFinePrint;
            }
            if (this.localizedOfferFinePrint != null) {
                data.localizedOfferFinePrint = this.localizedOfferFinePrint.toObject();
            }
            if (this.beforeRedeemPassTemplateId != null) {
                data.beforeRedeemPassTemplateId = this.beforeRedeemPassTemplateId;
            }
            if (this.afterRedeemPassTemplateId != null) {
                data.afterRedeemPassTemplateId = this.afterRedeemPassTemplateId;
            }
            if (this.quota != null) {
                data.quota = this.quota.toObject();
            }
            if (this.couponExpirySettings != null) {
                data.couponExpirySettings = this.couponExpirySettings.toObject();
            }
            if (this.redemptionSettings != null) {
                data.redemptionSettings = this.redemptionSettings.toObject();
            }
            if (this.issueStartDate != null) {
                data.issueStartDate = this.issueStartDate.toObject();
            }
            if (this.issueEndDate != null) {
                data.issueEndDate = this.issueEndDate.toObject();
            }
            if (this.created != null) {
                data.created = this.created.toObject();
            }
            if (this.updated != null) {
                data.updated = this.updated.toObject();
            }
            if (this.campaignId != null) {
                data.campaignId = this.campaignId;
            }
            if (this.distributionSettings != null) {
                data.distributionSettings = this.distributionSettings.toObject();
            }
            if (this.shortCode != null) {
                data.shortCode = this.shortCode;
            }
            if (this.ianaTimezone != null) {
                data.ianaTimezone = this.ianaTimezone;
            }
            if (this.disabled != null) {
                data.disabled = this.disabled;
            }
            if (this.operation != null) {
                data.operation = this.operation;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.id.length)
                writer.writeString(1, this.id);
            if (this.offerTitle.length)
                writer.writeString(2, this.offerTitle);
            if (this.hasLocalizedOfferTitle)
                writer.writeMessage(3, this.localizedOfferTitle, () => this.localizedOfferTitle.serialize(writer));
            if (this.offerShortTitle.length)
                writer.writeString(4, this.offerShortTitle);
            if (this.hasLocalizedOfferShortTitle)
                writer.writeMessage(5, this.localizedOfferShortTitle, () => this.localizedOfferShortTitle.serialize(writer));
            if (this.offerDetails.length)
                writer.writeString(6, this.offerDetails);
            if (this.hasLocalizedOfferDetails)
                writer.writeMessage(7, this.localizedOfferDetails, () => this.localizedOfferDetails.serialize(writer));
            if (this.offerFinePrint.length)
                writer.writeString(8, this.offerFinePrint);
            if (this.hasLocalizedOfferFinePrint)
                writer.writeMessage(9, this.localizedOfferFinePrint, () => this.localizedOfferFinePrint.serialize(writer));
            if (this.beforeRedeemPassTemplateId.length)
                writer.writeString(10, this.beforeRedeemPassTemplateId);
            if (this.afterRedeemPassTemplateId.length)
                writer.writeString(11, this.afterRedeemPassTemplateId);
            if (this.hasQuota)
                writer.writeMessage(12, this.quota, () => this.quota.serialize(writer));
            if (this.hasCouponExpirySettings)
                writer.writeMessage(13, this.couponExpirySettings, () => this.couponExpirySettings.serialize(writer));
            if (this.hasRedemptionSettings)
                writer.writeMessage(14, this.redemptionSettings, () => this.redemptionSettings.serialize(writer));
            if (this.hasIssueStartDate)
                writer.writeMessage(15, this.issueStartDate, () => this.issueStartDate.serialize(writer));
            if (this.hasIssueEndDate)
                writer.writeMessage(16, this.issueEndDate, () => this.issueEndDate.serialize(writer));
            if (this.hasCreated)
                writer.writeMessage(17, this.created, () => this.created.serialize(writer));
            if (this.hasUpdated)
                writer.writeMessage(18, this.updated, () => this.updated.serialize(writer));
            if (this.campaignId.length)
                writer.writeString(19, this.campaignId);
            if (this.hasDistributionSettings)
                writer.writeMessage(20, this.distributionSettings, () => this.distributionSettings.serialize(writer));
            if (this.shortCode.length)
                writer.writeString(21, this.shortCode);
            if (this.ianaTimezone.length)
                writer.writeString(22, this.ianaTimezone);
            if (this.disabled != false)
                writer.writeBool(23, this.disabled);
            if (this.operation != dependency_3.io.Operation.OPERATION_DO_NOT_USE)
                writer.writeEnum(100, this.operation);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CouponOffer {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CouponOffer();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.id = reader.readString();
                        break;
                    case 2:
                        message.offerTitle = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.localizedOfferTitle, () => message.localizedOfferTitle = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 4:
                        message.offerShortTitle = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.localizedOfferShortTitle, () => message.localizedOfferShortTitle = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 6:
                        message.offerDetails = reader.readString();
                        break;
                    case 7:
                        reader.readMessage(message.localizedOfferDetails, () => message.localizedOfferDetails = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 8:
                        message.offerFinePrint = reader.readString();
                        break;
                    case 9:
                        reader.readMessage(message.localizedOfferFinePrint, () => message.localizedOfferFinePrint = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 10:
                        message.beforeRedeemPassTemplateId = reader.readString();
                        break;
                    case 11:
                        message.afterRedeemPassTemplateId = reader.readString();
                        break;
                    case 12:
                        reader.readMessage(message.quota, () => message.quota = dependency_2.io.Quota.deserialize(reader));
                        break;
                    case 13:
                        reader.readMessage(message.couponExpirySettings, () => message.couponExpirySettings = CouponExpirySettings.deserialize(reader));
                        break;
                    case 14:
                        reader.readMessage(message.redemptionSettings, () => message.redemptionSettings = RedemptionSettings.deserialize(reader));
                        break;
                    case 15:
                        reader.readMessage(message.issueStartDate, () => message.issueStartDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 16:
                        reader.readMessage(message.issueEndDate, () => message.issueEndDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 17:
                        reader.readMessage(message.created, () => message.created = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 18:
                        reader.readMessage(message.updated, () => message.updated = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 19:
                        message.campaignId = reader.readString();
                        break;
                    case 20:
                        reader.readMessage(message.distributionSettings, () => message.distributionSettings = dependency_4.io.DistributionSettings.deserialize(reader));
                        break;
                    case 21:
                        message.shortCode = reader.readString();
                        break;
                    case 22:
                        message.ianaTimezone = reader.readString();
                        break;
                    case 23:
                        message.disabled = reader.readBool();
                        break;
                    case 100:
                        message.operation = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CouponOffer {
            return CouponOffer.deserialize(bytes);
        }
    }
    export class CouponExpirySettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            couponExpiryType?: CouponExpiryType;
            expireAfterXDays?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("couponExpiryType" in data && data.couponExpiryType != undefined) {
                    this.couponExpiryType = data.couponExpiryType;
                }
                if ("expireAfterXDays" in data && data.expireAfterXDays != undefined) {
                    this.expireAfterXDays = data.expireAfterXDays;
                }
            }
        }
        get couponExpiryType() {
            return pb_1.Message.getFieldWithDefault(this, 1, CouponExpiryType.EXPIRY_DO_NOT_USE) as CouponExpiryType;
        }
        set couponExpiryType(value: CouponExpiryType) {
            pb_1.Message.setField(this, 1, value);
        }
        get expireAfterXDays() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set expireAfterXDays(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            couponExpiryType?: CouponExpiryType;
            expireAfterXDays?: number;
        }): CouponExpirySettings {
            const message = new CouponExpirySettings({});
            if (data.couponExpiryType != null) {
                message.couponExpiryType = data.couponExpiryType;
            }
            if (data.expireAfterXDays != null) {
                message.expireAfterXDays = data.expireAfterXDays;
            }
            return message;
        }
        toObject() {
            const data: {
                couponExpiryType?: CouponExpiryType;
                expireAfterXDays?: number;
            } = {};
            if (this.couponExpiryType != null) {
                data.couponExpiryType = this.couponExpiryType;
            }
            if (this.expireAfterXDays != null) {
                data.expireAfterXDays = this.expireAfterXDays;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.couponExpiryType != CouponExpiryType.EXPIRY_DO_NOT_USE)
                writer.writeEnum(1, this.couponExpiryType);
            if (this.expireAfterXDays != 0)
                writer.writeUint32(3, this.expireAfterXDays);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CouponExpirySettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CouponExpirySettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.couponExpiryType = reader.readEnum();
                        break;
                    case 3:
                        message.expireAfterXDays = reader.readUint32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CouponExpirySettings {
            return CouponExpirySettings.deserialize(bytes);
        }
    }
    export class RedemptionSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            redemptionStartDate?: dependency_1.google.protobuf.Timestamp;
            redemptionEndDate?: dependency_1.google.protobuf.Timestamp;
            redemptionType?: RedemptionType[];
            codeProvidedOnRedeemSettings?: CustomerInitiatedCodeProvideOnRedeemSettings;
            fixedCodeSettings?: CustomerInitiatedFixedCodeSettings;
            standardSettings?: StandardPassKitHostedPage;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("redemptionStartDate" in data && data.redemptionStartDate != undefined) {
                    this.redemptionStartDate = data.redemptionStartDate;
                }
                if ("redemptionEndDate" in data && data.redemptionEndDate != undefined) {
                    this.redemptionEndDate = data.redemptionEndDate;
                }
                if ("redemptionType" in data && data.redemptionType != undefined) {
                    this.redemptionType = data.redemptionType;
                }
                if ("codeProvidedOnRedeemSettings" in data && data.codeProvidedOnRedeemSettings != undefined) {
                    this.codeProvidedOnRedeemSettings = data.codeProvidedOnRedeemSettings;
                }
                if ("fixedCodeSettings" in data && data.fixedCodeSettings != undefined) {
                    this.fixedCodeSettings = data.fixedCodeSettings;
                }
                if ("standardSettings" in data && data.standardSettings != undefined) {
                    this.standardSettings = data.standardSettings;
                }
            }
        }
        get redemptionStartDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 1) as dependency_1.google.protobuf.Timestamp;
        }
        set redemptionStartDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get hasRedemptionStartDate() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get redemptionEndDate() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 2) as dependency_1.google.protobuf.Timestamp;
        }
        set redemptionEndDate(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasRedemptionEndDate() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get redemptionType() {
            return pb_1.Message.getFieldWithDefault(this, 3, []) as RedemptionType[];
        }
        set redemptionType(value: RedemptionType[]) {
            pb_1.Message.setField(this, 3, value);
        }
        get codeProvidedOnRedeemSettings() {
            return pb_1.Message.getWrapperField(this, CustomerInitiatedCodeProvideOnRedeemSettings, 5) as CustomerInitiatedCodeProvideOnRedeemSettings;
        }
        set codeProvidedOnRedeemSettings(value: CustomerInitiatedCodeProvideOnRedeemSettings) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get hasCodeProvidedOnRedeemSettings() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get fixedCodeSettings() {
            return pb_1.Message.getWrapperField(this, CustomerInitiatedFixedCodeSettings, 6) as CustomerInitiatedFixedCodeSettings;
        }
        set fixedCodeSettings(value: CustomerInitiatedFixedCodeSettings) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get hasFixedCodeSettings() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get standardSettings() {
            return pb_1.Message.getWrapperField(this, StandardPassKitHostedPage, 7) as StandardPassKitHostedPage;
        }
        set standardSettings(value: StandardPassKitHostedPage) {
            pb_1.Message.setWrapperField(this, 7, value);
        }
        get hasStandardSettings() {
            return pb_1.Message.getField(this, 7) != null;
        }
        static fromObject(data: {
            redemptionStartDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            redemptionEndDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            redemptionType?: RedemptionType[];
            codeProvidedOnRedeemSettings?: ReturnType<typeof CustomerInitiatedCodeProvideOnRedeemSettings.prototype.toObject>;
            fixedCodeSettings?: ReturnType<typeof CustomerInitiatedFixedCodeSettings.prototype.toObject>;
            standardSettings?: ReturnType<typeof StandardPassKitHostedPage.prototype.toObject>;
        }): RedemptionSettings {
            const message = new RedemptionSettings({});
            if (data.redemptionStartDate != null) {
                message.redemptionStartDate = dependency_1.google.protobuf.Timestamp.fromObject(data.redemptionStartDate);
            }
            if (data.redemptionEndDate != null) {
                message.redemptionEndDate = dependency_1.google.protobuf.Timestamp.fromObject(data.redemptionEndDate);
            }
            if (data.redemptionType != null) {
                message.redemptionType = data.redemptionType;
            }
            if (data.codeProvidedOnRedeemSettings != null) {
                message.codeProvidedOnRedeemSettings = CustomerInitiatedCodeProvideOnRedeemSettings.fromObject(data.codeProvidedOnRedeemSettings);
            }
            if (data.fixedCodeSettings != null) {
                message.fixedCodeSettings = CustomerInitiatedFixedCodeSettings.fromObject(data.fixedCodeSettings);
            }
            if (data.standardSettings != null) {
                message.standardSettings = StandardPassKitHostedPage.fromObject(data.standardSettings);
            }
            return message;
        }
        toObject() {
            const data: {
                redemptionStartDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                redemptionEndDate?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
                redemptionType?: RedemptionType[];
                codeProvidedOnRedeemSettings?: ReturnType<typeof CustomerInitiatedCodeProvideOnRedeemSettings.prototype.toObject>;
                fixedCodeSettings?: ReturnType<typeof CustomerInitiatedFixedCodeSettings.prototype.toObject>;
                standardSettings?: ReturnType<typeof StandardPassKitHostedPage.prototype.toObject>;
            } = {};
            if (this.redemptionStartDate != null) {
                data.redemptionStartDate = this.redemptionStartDate.toObject();
            }
            if (this.redemptionEndDate != null) {
                data.redemptionEndDate = this.redemptionEndDate.toObject();
            }
            if (this.redemptionType != null) {
                data.redemptionType = this.redemptionType;
            }
            if (this.codeProvidedOnRedeemSettings != null) {
                data.codeProvidedOnRedeemSettings = this.codeProvidedOnRedeemSettings.toObject();
            }
            if (this.fixedCodeSettings != null) {
                data.fixedCodeSettings = this.fixedCodeSettings.toObject();
            }
            if (this.standardSettings != null) {
                data.standardSettings = this.standardSettings.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.hasRedemptionStartDate)
                writer.writeMessage(1, this.redemptionStartDate, () => this.redemptionStartDate.serialize(writer));
            if (this.hasRedemptionEndDate)
                writer.writeMessage(2, this.redemptionEndDate, () => this.redemptionEndDate.serialize(writer));
            if (this.redemptionType.length)
                writer.writePackedEnum(3, this.redemptionType);
            if (this.hasCodeProvidedOnRedeemSettings)
                writer.writeMessage(5, this.codeProvidedOnRedeemSettings, () => this.codeProvidedOnRedeemSettings.serialize(writer));
            if (this.hasFixedCodeSettings)
                writer.writeMessage(6, this.fixedCodeSettings, () => this.fixedCodeSettings.serialize(writer));
            if (this.hasStandardSettings)
                writer.writeMessage(7, this.standardSettings, () => this.standardSettings.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RedemptionSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RedemptionSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.redemptionStartDate, () => message.redemptionStartDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.redemptionEndDate, () => message.redemptionEndDate = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    case 3:
                        message.redemptionType = reader.readPackedEnum();
                        break;
                    case 5:
                        reader.readMessage(message.codeProvidedOnRedeemSettings, () => message.codeProvidedOnRedeemSettings = CustomerInitiatedCodeProvideOnRedeemSettings.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.fixedCodeSettings, () => message.fixedCodeSettings = CustomerInitiatedFixedCodeSettings.deserialize(reader));
                        break;
                    case 7:
                        reader.readMessage(message.standardSettings, () => message.standardSettings = StandardPassKitHostedPage.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RedemptionSettings {
            return RedemptionSettings.deserialize(bytes);
        }
    }
    export class CustomerInitiatedFixedCodeSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            fixedCode?: string;
            useCouponSku?: boolean;
            barcode?: dependency_8.io.BarcodeType;
            redemptionTimer?: RedemptionTimerSettings;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("fixedCode" in data && data.fixedCode != undefined) {
                    this.fixedCode = data.fixedCode;
                }
                if ("useCouponSku" in data && data.useCouponSku != undefined) {
                    this.useCouponSku = data.useCouponSku;
                }
                if ("barcode" in data && data.barcode != undefined) {
                    this.barcode = data.barcode;
                }
                if ("redemptionTimer" in data && data.redemptionTimer != undefined) {
                    this.redemptionTimer = data.redemptionTimer;
                }
            }
        }
        get fixedCode() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set fixedCode(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get useCouponSku() {
            return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
        }
        set useCouponSku(value: boolean) {
            pb_1.Message.setField(this, 2, value);
        }
        get barcode() {
            return pb_1.Message.getFieldWithDefault(this, 3, dependency_8.io.BarcodeType.BARCODE_TYPE_DO_NOT_USE) as dependency_8.io.BarcodeType;
        }
        set barcode(value: dependency_8.io.BarcodeType) {
            pb_1.Message.setField(this, 3, value);
        }
        get redemptionTimer() {
            return pb_1.Message.getWrapperField(this, RedemptionTimerSettings, 4) as RedemptionTimerSettings;
        }
        set redemptionTimer(value: RedemptionTimerSettings) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get hasRedemptionTimer() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            fixedCode?: string;
            useCouponSku?: boolean;
            barcode?: dependency_8.io.BarcodeType;
            redemptionTimer?: ReturnType<typeof RedemptionTimerSettings.prototype.toObject>;
        }): CustomerInitiatedFixedCodeSettings {
            const message = new CustomerInitiatedFixedCodeSettings({});
            if (data.fixedCode != null) {
                message.fixedCode = data.fixedCode;
            }
            if (data.useCouponSku != null) {
                message.useCouponSku = data.useCouponSku;
            }
            if (data.barcode != null) {
                message.barcode = data.barcode;
            }
            if (data.redemptionTimer != null) {
                message.redemptionTimer = RedemptionTimerSettings.fromObject(data.redemptionTimer);
            }
            return message;
        }
        toObject() {
            const data: {
                fixedCode?: string;
                useCouponSku?: boolean;
                barcode?: dependency_8.io.BarcodeType;
                redemptionTimer?: ReturnType<typeof RedemptionTimerSettings.prototype.toObject>;
            } = {};
            if (this.fixedCode != null) {
                data.fixedCode = this.fixedCode;
            }
            if (this.useCouponSku != null) {
                data.useCouponSku = this.useCouponSku;
            }
            if (this.barcode != null) {
                data.barcode = this.barcode;
            }
            if (this.redemptionTimer != null) {
                data.redemptionTimer = this.redemptionTimer.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.fixedCode.length)
                writer.writeString(1, this.fixedCode);
            if (this.useCouponSku != false)
                writer.writeBool(2, this.useCouponSku);
            if (this.barcode != dependency_8.io.BarcodeType.BARCODE_TYPE_DO_NOT_USE)
                writer.writeEnum(3, this.barcode);
            if (this.hasRedemptionTimer)
                writer.writeMessage(4, this.redemptionTimer, () => this.redemptionTimer.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CustomerInitiatedFixedCodeSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CustomerInitiatedFixedCodeSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.fixedCode = reader.readString();
                        break;
                    case 2:
                        message.useCouponSku = reader.readBool();
                        break;
                    case 3:
                        message.barcode = reader.readEnum();
                        break;
                    case 4:
                        reader.readMessage(message.redemptionTimer, () => message.redemptionTimer = RedemptionTimerSettings.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CustomerInitiatedFixedCodeSettings {
            return CustomerInitiatedFixedCodeSettings.deserialize(bytes);
        }
    }
    export class RedemptionTimerSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            timeoutSeconds?: number;
            timerHelpText?: string;
            localizedTimeHelpText?: dependency_5.io.LocalizedString;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("timeoutSeconds" in data && data.timeoutSeconds != undefined) {
                    this.timeoutSeconds = data.timeoutSeconds;
                }
                if ("timerHelpText" in data && data.timerHelpText != undefined) {
                    this.timerHelpText = data.timerHelpText;
                }
                if ("localizedTimeHelpText" in data && data.localizedTimeHelpText != undefined) {
                    this.localizedTimeHelpText = data.localizedTimeHelpText;
                }
            }
        }
        get timeoutSeconds() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set timeoutSeconds(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get timerHelpText() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set timerHelpText(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get localizedTimeHelpText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 3) as dependency_5.io.LocalizedString;
        }
        set localizedTimeHelpText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get hasLocalizedTimeHelpText() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            timeoutSeconds?: number;
            timerHelpText?: string;
            localizedTimeHelpText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
        }): RedemptionTimerSettings {
            const message = new RedemptionTimerSettings({});
            if (data.timeoutSeconds != null) {
                message.timeoutSeconds = data.timeoutSeconds;
            }
            if (data.timerHelpText != null) {
                message.timerHelpText = data.timerHelpText;
            }
            if (data.localizedTimeHelpText != null) {
                message.localizedTimeHelpText = dependency_5.io.LocalizedString.fromObject(data.localizedTimeHelpText);
            }
            return message;
        }
        toObject() {
            const data: {
                timeoutSeconds?: number;
                timerHelpText?: string;
                localizedTimeHelpText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            } = {};
            if (this.timeoutSeconds != null) {
                data.timeoutSeconds = this.timeoutSeconds;
            }
            if (this.timerHelpText != null) {
                data.timerHelpText = this.timerHelpText;
            }
            if (this.localizedTimeHelpText != null) {
                data.localizedTimeHelpText = this.localizedTimeHelpText.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.timeoutSeconds != 0)
                writer.writeUint32(1, this.timeoutSeconds);
            if (this.timerHelpText.length)
                writer.writeString(2, this.timerHelpText);
            if (this.hasLocalizedTimeHelpText)
                writer.writeMessage(3, this.localizedTimeHelpText, () => this.localizedTimeHelpText.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RedemptionTimerSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RedemptionTimerSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.timeoutSeconds = reader.readUint32();
                        break;
                    case 2:
                        message.timerHelpText = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.localizedTimeHelpText, () => message.localizedTimeHelpText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RedemptionTimerSettings {
            return RedemptionTimerSettings.deserialize(bytes);
        }
    }
    export class CustomerInitiatedCodeProvideOnRedeemSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            validCodes?: string[];
            redemptionCodeInput?: InputField;
            submitButtonText?: string;
            localizedSubmitButtonText?: dependency_5.io.LocalizedString;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("validCodes" in data && data.validCodes != undefined) {
                    this.validCodes = data.validCodes;
                }
                if ("redemptionCodeInput" in data && data.redemptionCodeInput != undefined) {
                    this.redemptionCodeInput = data.redemptionCodeInput;
                }
                if ("submitButtonText" in data && data.submitButtonText != undefined) {
                    this.submitButtonText = data.submitButtonText;
                }
                if ("localizedSubmitButtonText" in data && data.localizedSubmitButtonText != undefined) {
                    this.localizedSubmitButtonText = data.localizedSubmitButtonText;
                }
            }
        }
        get validCodes() {
            return pb_1.Message.getFieldWithDefault(this, 1, []) as string[];
        }
        set validCodes(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        get redemptionCodeInput() {
            return pb_1.Message.getWrapperField(this, InputField, 2) as InputField;
        }
        set redemptionCodeInput(value: InputField) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasRedemptionCodeInput() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get submitButtonText() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set submitButtonText(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get localizedSubmitButtonText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 4) as dependency_5.io.LocalizedString;
        }
        set localizedSubmitButtonText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get hasLocalizedSubmitButtonText() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            validCodes?: string[];
            redemptionCodeInput?: ReturnType<typeof InputField.prototype.toObject>;
            submitButtonText?: string;
            localizedSubmitButtonText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
        }): CustomerInitiatedCodeProvideOnRedeemSettings {
            const message = new CustomerInitiatedCodeProvideOnRedeemSettings({});
            if (data.validCodes != null) {
                message.validCodes = data.validCodes;
            }
            if (data.redemptionCodeInput != null) {
                message.redemptionCodeInput = InputField.fromObject(data.redemptionCodeInput);
            }
            if (data.submitButtonText != null) {
                message.submitButtonText = data.submitButtonText;
            }
            if (data.localizedSubmitButtonText != null) {
                message.localizedSubmitButtonText = dependency_5.io.LocalizedString.fromObject(data.localizedSubmitButtonText);
            }
            return message;
        }
        toObject() {
            const data: {
                validCodes?: string[];
                redemptionCodeInput?: ReturnType<typeof InputField.prototype.toObject>;
                submitButtonText?: string;
                localizedSubmitButtonText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            } = {};
            if (this.validCodes != null) {
                data.validCodes = this.validCodes;
            }
            if (this.redemptionCodeInput != null) {
                data.redemptionCodeInput = this.redemptionCodeInput.toObject();
            }
            if (this.submitButtonText != null) {
                data.submitButtonText = this.submitButtonText;
            }
            if (this.localizedSubmitButtonText != null) {
                data.localizedSubmitButtonText = this.localizedSubmitButtonText.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.validCodes.length)
                writer.writeRepeatedString(1, this.validCodes);
            if (this.hasRedemptionCodeInput)
                writer.writeMessage(2, this.redemptionCodeInput, () => this.redemptionCodeInput.serialize(writer));
            if (this.submitButtonText.length)
                writer.writeString(3, this.submitButtonText);
            if (this.hasLocalizedSubmitButtonText)
                writer.writeMessage(4, this.localizedSubmitButtonText, () => this.localizedSubmitButtonText.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CustomerInitiatedCodeProvideOnRedeemSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CustomerInitiatedCodeProvideOnRedeemSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    case 2:
                        reader.readMessage(message.redemptionCodeInput, () => message.redemptionCodeInput = InputField.deserialize(reader));
                        break;
                    case 3:
                        message.submitButtonText = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.localizedSubmitButtonText, () => message.localizedSubmitButtonText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CustomerInitiatedCodeProvideOnRedeemSettings {
            return CustomerInitiatedCodeProvideOnRedeemSettings.deserialize(bytes);
        }
    }
    export class InputField extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            label?: string;
            localizedLabel?: dependency_5.io.LocalizedString;
            helperText?: string;
            localizedHelperText?: dependency_5.io.LocalizedString;
            errorMessage?: string;
            localizedErrorMessage?: dependency_5.io.LocalizedString;
            defaultValue?: string;
            localizedDefaultValue?: dependency_5.io.LocalizedString;
            placeholder?: string;
            localizedPlaceholder?: dependency_5.io.LocalizedString;
            validation?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("label" in data && data.label != undefined) {
                    this.label = data.label;
                }
                if ("localizedLabel" in data && data.localizedLabel != undefined) {
                    this.localizedLabel = data.localizedLabel;
                }
                if ("helperText" in data && data.helperText != undefined) {
                    this.helperText = data.helperText;
                }
                if ("localizedHelperText" in data && data.localizedHelperText != undefined) {
                    this.localizedHelperText = data.localizedHelperText;
                }
                if ("errorMessage" in data && data.errorMessage != undefined) {
                    this.errorMessage = data.errorMessage;
                }
                if ("localizedErrorMessage" in data && data.localizedErrorMessage != undefined) {
                    this.localizedErrorMessage = data.localizedErrorMessage;
                }
                if ("defaultValue" in data && data.defaultValue != undefined) {
                    this.defaultValue = data.defaultValue;
                }
                if ("localizedDefaultValue" in data && data.localizedDefaultValue != undefined) {
                    this.localizedDefaultValue = data.localizedDefaultValue;
                }
                if ("placeholder" in data && data.placeholder != undefined) {
                    this.placeholder = data.placeholder;
                }
                if ("localizedPlaceholder" in data && data.localizedPlaceholder != undefined) {
                    this.localizedPlaceholder = data.localizedPlaceholder;
                }
                if ("validation" in data && data.validation != undefined) {
                    this.validation = data.validation;
                }
            }
        }
        get label() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set label(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get localizedLabel() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 2) as dependency_5.io.LocalizedString;
        }
        set localizedLabel(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasLocalizedLabel() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get helperText() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set helperText(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get localizedHelperText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 4) as dependency_5.io.LocalizedString;
        }
        set localizedHelperText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get hasLocalizedHelperText() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get errorMessage() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set errorMessage(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get localizedErrorMessage() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 6) as dependency_5.io.LocalizedString;
        }
        set localizedErrorMessage(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get hasLocalizedErrorMessage() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get defaultValue() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set defaultValue(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get localizedDefaultValue() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 8) as dependency_5.io.LocalizedString;
        }
        set localizedDefaultValue(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get hasLocalizedDefaultValue() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get placeholder() {
            return pb_1.Message.getFieldWithDefault(this, 9, "") as string;
        }
        set placeholder(value: string) {
            pb_1.Message.setField(this, 9, value);
        }
        get localizedPlaceholder() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 10) as dependency_5.io.LocalizedString;
        }
        set localizedPlaceholder(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get hasLocalizedPlaceholder() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get validation() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set validation(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        static fromObject(data: {
            label?: string;
            localizedLabel?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            helperText?: string;
            localizedHelperText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            errorMessage?: string;
            localizedErrorMessage?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            defaultValue?: string;
            localizedDefaultValue?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            placeholder?: string;
            localizedPlaceholder?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            validation?: string;
        }): InputField {
            const message = new InputField({});
            if (data.label != null) {
                message.label = data.label;
            }
            if (data.localizedLabel != null) {
                message.localizedLabel = dependency_5.io.LocalizedString.fromObject(data.localizedLabel);
            }
            if (data.helperText != null) {
                message.helperText = data.helperText;
            }
            if (data.localizedHelperText != null) {
                message.localizedHelperText = dependency_5.io.LocalizedString.fromObject(data.localizedHelperText);
            }
            if (data.errorMessage != null) {
                message.errorMessage = data.errorMessage;
            }
            if (data.localizedErrorMessage != null) {
                message.localizedErrorMessage = dependency_5.io.LocalizedString.fromObject(data.localizedErrorMessage);
            }
            if (data.defaultValue != null) {
                message.defaultValue = data.defaultValue;
            }
            if (data.localizedDefaultValue != null) {
                message.localizedDefaultValue = dependency_5.io.LocalizedString.fromObject(data.localizedDefaultValue);
            }
            if (data.placeholder != null) {
                message.placeholder = data.placeholder;
            }
            if (data.localizedPlaceholder != null) {
                message.localizedPlaceholder = dependency_5.io.LocalizedString.fromObject(data.localizedPlaceholder);
            }
            if (data.validation != null) {
                message.validation = data.validation;
            }
            return message;
        }
        toObject() {
            const data: {
                label?: string;
                localizedLabel?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                helperText?: string;
                localizedHelperText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                errorMessage?: string;
                localizedErrorMessage?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                defaultValue?: string;
                localizedDefaultValue?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                placeholder?: string;
                localizedPlaceholder?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                validation?: string;
            } = {};
            if (this.label != null) {
                data.label = this.label;
            }
            if (this.localizedLabel != null) {
                data.localizedLabel = this.localizedLabel.toObject();
            }
            if (this.helperText != null) {
                data.helperText = this.helperText;
            }
            if (this.localizedHelperText != null) {
                data.localizedHelperText = this.localizedHelperText.toObject();
            }
            if (this.errorMessage != null) {
                data.errorMessage = this.errorMessage;
            }
            if (this.localizedErrorMessage != null) {
                data.localizedErrorMessage = this.localizedErrorMessage.toObject();
            }
            if (this.defaultValue != null) {
                data.defaultValue = this.defaultValue;
            }
            if (this.localizedDefaultValue != null) {
                data.localizedDefaultValue = this.localizedDefaultValue.toObject();
            }
            if (this.placeholder != null) {
                data.placeholder = this.placeholder;
            }
            if (this.localizedPlaceholder != null) {
                data.localizedPlaceholder = this.localizedPlaceholder.toObject();
            }
            if (this.validation != null) {
                data.validation = this.validation;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.label.length)
                writer.writeString(1, this.label);
            if (this.hasLocalizedLabel)
                writer.writeMessage(2, this.localizedLabel, () => this.localizedLabel.serialize(writer));
            if (this.helperText.length)
                writer.writeString(3, this.helperText);
            if (this.hasLocalizedHelperText)
                writer.writeMessage(4, this.localizedHelperText, () => this.localizedHelperText.serialize(writer));
            if (this.errorMessage.length)
                writer.writeString(5, this.errorMessage);
            if (this.hasLocalizedErrorMessage)
                writer.writeMessage(6, this.localizedErrorMessage, () => this.localizedErrorMessage.serialize(writer));
            if (this.defaultValue.length)
                writer.writeString(7, this.defaultValue);
            if (this.hasLocalizedDefaultValue)
                writer.writeMessage(8, this.localizedDefaultValue, () => this.localizedDefaultValue.serialize(writer));
            if (this.placeholder.length)
                writer.writeString(9, this.placeholder);
            if (this.hasLocalizedPlaceholder)
                writer.writeMessage(10, this.localizedPlaceholder, () => this.localizedPlaceholder.serialize(writer));
            if (this.validation.length)
                writer.writeString(11, this.validation);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): InputField {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new InputField();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.label = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.localizedLabel, () => message.localizedLabel = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 3:
                        message.helperText = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.localizedHelperText, () => message.localizedHelperText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 5:
                        message.errorMessage = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.localizedErrorMessage, () => message.localizedErrorMessage = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 7:
                        message.defaultValue = reader.readString();
                        break;
                    case 8:
                        reader.readMessage(message.localizedDefaultValue, () => message.localizedDefaultValue = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 9:
                        message.placeholder = reader.readString();
                        break;
                    case 10:
                        reader.readMessage(message.localizedPlaceholder, () => message.localizedPlaceholder = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 11:
                        message.validation = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): InputField {
            return InputField.deserialize(bytes);
        }
    }
    export class StandardPassKitHostedPage extends pb_1.Message {
        #one_of_decls: number[][] = [[5, 6]];
        constructor(data?: any[] | ({
            title?: string;
            localizedTitle?: dependency_5.io.LocalizedString;
            redemptionInstructions?: string;
            localizedRedemptionInstructions?: dependency_5.io.LocalizedString;
            footerText?: string;
            localizedFooterText?: dependency_5.io.LocalizedString;
            responseTexts?: ResponseTexts;
            hideRedeemedDateTime?: boolean;
            callToActionButton?: CallToActionButton;
            cssOverrides?: string;
        } & (({
            imageIds?: dependency_9.io.ImageIds;
            images?: never;
        } | {
            imageIds?: never;
            images?: dependency_9.io.ImageData;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("title" in data && data.title != undefined) {
                    this.title = data.title;
                }
                if ("localizedTitle" in data && data.localizedTitle != undefined) {
                    this.localizedTitle = data.localizedTitle;
                }
                if ("redemptionInstructions" in data && data.redemptionInstructions != undefined) {
                    this.redemptionInstructions = data.redemptionInstructions;
                }
                if ("localizedRedemptionInstructions" in data && data.localizedRedemptionInstructions != undefined) {
                    this.localizedRedemptionInstructions = data.localizedRedemptionInstructions;
                }
                if ("imageIds" in data && data.imageIds != undefined) {
                    this.imageIds = data.imageIds;
                }
                if ("images" in data && data.images != undefined) {
                    this.images = data.images;
                }
                if ("footerText" in data && data.footerText != undefined) {
                    this.footerText = data.footerText;
                }
                if ("localizedFooterText" in data && data.localizedFooterText != undefined) {
                    this.localizedFooterText = data.localizedFooterText;
                }
                if ("responseTexts" in data && data.responseTexts != undefined) {
                    this.responseTexts = data.responseTexts;
                }
                if ("hideRedeemedDateTime" in data && data.hideRedeemedDateTime != undefined) {
                    this.hideRedeemedDateTime = data.hideRedeemedDateTime;
                }
                if ("callToActionButton" in data && data.callToActionButton != undefined) {
                    this.callToActionButton = data.callToActionButton;
                }
                if ("cssOverrides" in data && data.cssOverrides != undefined) {
                    this.cssOverrides = data.cssOverrides;
                }
            }
        }
        get title() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set title(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get localizedTitle() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 2) as dependency_5.io.LocalizedString;
        }
        set localizedTitle(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasLocalizedTitle() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get redemptionInstructions() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set redemptionInstructions(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get localizedRedemptionInstructions() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 4) as dependency_5.io.LocalizedString;
        }
        set localizedRedemptionInstructions(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get hasLocalizedRedemptionInstructions() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get imageIds() {
            return pb_1.Message.getWrapperField(this, dependency_9.io.ImageIds, 5) as dependency_9.io.ImageIds;
        }
        set imageIds(value: dependency_9.io.ImageIds) {
            pb_1.Message.setOneofWrapperField(this, 5, this.#one_of_decls[0], value);
        }
        get hasImageIds() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get images() {
            return pb_1.Message.getWrapperField(this, dependency_9.io.ImageData, 6) as dependency_9.io.ImageData;
        }
        set images(value: dependency_9.io.ImageData) {
            pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[0], value);
        }
        get hasImages() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get footerText() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set footerText(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get localizedFooterText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 8) as dependency_5.io.LocalizedString;
        }
        set localizedFooterText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get hasLocalizedFooterText() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get responseTexts() {
            return pb_1.Message.getWrapperField(this, ResponseTexts, 9) as ResponseTexts;
        }
        set responseTexts(value: ResponseTexts) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get hasResponseTexts() {
            return pb_1.Message.getField(this, 9) != null;
        }
        get hideRedeemedDateTime() {
            return pb_1.Message.getFieldWithDefault(this, 10, false) as boolean;
        }
        set hideRedeemedDateTime(value: boolean) {
            pb_1.Message.setField(this, 10, value);
        }
        get callToActionButton() {
            return pb_1.Message.getWrapperField(this, CallToActionButton, 11) as CallToActionButton;
        }
        set callToActionButton(value: CallToActionButton) {
            pb_1.Message.setWrapperField(this, 11, value);
        }
        get hasCallToActionButton() {
            return pb_1.Message.getField(this, 11) != null;
        }
        get cssOverrides() {
            return pb_1.Message.getFieldWithDefault(this, 12, "") as string;
        }
        set cssOverrides(value: string) {
            pb_1.Message.setField(this, 12, value);
        }
        get RedemptionImageAssets() {
            const cases: {
                [index: number]: "none" | "imageIds" | "images";
            } = {
                0: "none",
                5: "imageIds",
                6: "images"
            };
            return cases[pb_1.Message.computeOneofCase(this, [5, 6])];
        }
        static fromObject(data: {
            title?: string;
            localizedTitle?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            redemptionInstructions?: string;
            localizedRedemptionInstructions?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            imageIds?: ReturnType<typeof dependency_9.io.ImageIds.prototype.toObject>;
            images?: ReturnType<typeof dependency_9.io.ImageData.prototype.toObject>;
            footerText?: string;
            localizedFooterText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            responseTexts?: ReturnType<typeof ResponseTexts.prototype.toObject>;
            hideRedeemedDateTime?: boolean;
            callToActionButton?: ReturnType<typeof CallToActionButton.prototype.toObject>;
            cssOverrides?: string;
        }): StandardPassKitHostedPage {
            const message = new StandardPassKitHostedPage({});
            if (data.title != null) {
                message.title = data.title;
            }
            if (data.localizedTitle != null) {
                message.localizedTitle = dependency_5.io.LocalizedString.fromObject(data.localizedTitle);
            }
            if (data.redemptionInstructions != null) {
                message.redemptionInstructions = data.redemptionInstructions;
            }
            if (data.localizedRedemptionInstructions != null) {
                message.localizedRedemptionInstructions = dependency_5.io.LocalizedString.fromObject(data.localizedRedemptionInstructions);
            }
            if (data.imageIds != null) {
                message.imageIds = dependency_9.io.ImageIds.fromObject(data.imageIds);
            }
            if (data.images != null) {
                message.images = dependency_9.io.ImageData.fromObject(data.images);
            }
            if (data.footerText != null) {
                message.footerText = data.footerText;
            }
            if (data.localizedFooterText != null) {
                message.localizedFooterText = dependency_5.io.LocalizedString.fromObject(data.localizedFooterText);
            }
            if (data.responseTexts != null) {
                message.responseTexts = ResponseTexts.fromObject(data.responseTexts);
            }
            if (data.hideRedeemedDateTime != null) {
                message.hideRedeemedDateTime = data.hideRedeemedDateTime;
            }
            if (data.callToActionButton != null) {
                message.callToActionButton = CallToActionButton.fromObject(data.callToActionButton);
            }
            if (data.cssOverrides != null) {
                message.cssOverrides = data.cssOverrides;
            }
            return message;
        }
        toObject() {
            const data: {
                title?: string;
                localizedTitle?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                redemptionInstructions?: string;
                localizedRedemptionInstructions?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                imageIds?: ReturnType<typeof dependency_9.io.ImageIds.prototype.toObject>;
                images?: ReturnType<typeof dependency_9.io.ImageData.prototype.toObject>;
                footerText?: string;
                localizedFooterText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                responseTexts?: ReturnType<typeof ResponseTexts.prototype.toObject>;
                hideRedeemedDateTime?: boolean;
                callToActionButton?: ReturnType<typeof CallToActionButton.prototype.toObject>;
                cssOverrides?: string;
            } = {};
            if (this.title != null) {
                data.title = this.title;
            }
            if (this.localizedTitle != null) {
                data.localizedTitle = this.localizedTitle.toObject();
            }
            if (this.redemptionInstructions != null) {
                data.redemptionInstructions = this.redemptionInstructions;
            }
            if (this.localizedRedemptionInstructions != null) {
                data.localizedRedemptionInstructions = this.localizedRedemptionInstructions.toObject();
            }
            if (this.imageIds != null) {
                data.imageIds = this.imageIds.toObject();
            }
            if (this.images != null) {
                data.images = this.images.toObject();
            }
            if (this.footerText != null) {
                data.footerText = this.footerText;
            }
            if (this.localizedFooterText != null) {
                data.localizedFooterText = this.localizedFooterText.toObject();
            }
            if (this.responseTexts != null) {
                data.responseTexts = this.responseTexts.toObject();
            }
            if (this.hideRedeemedDateTime != null) {
                data.hideRedeemedDateTime = this.hideRedeemedDateTime;
            }
            if (this.callToActionButton != null) {
                data.callToActionButton = this.callToActionButton.toObject();
            }
            if (this.cssOverrides != null) {
                data.cssOverrides = this.cssOverrides;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.title.length)
                writer.writeString(1, this.title);
            if (this.hasLocalizedTitle)
                writer.writeMessage(2, this.localizedTitle, () => this.localizedTitle.serialize(writer));
            if (this.redemptionInstructions.length)
                writer.writeString(3, this.redemptionInstructions);
            if (this.hasLocalizedRedemptionInstructions)
                writer.writeMessage(4, this.localizedRedemptionInstructions, () => this.localizedRedemptionInstructions.serialize(writer));
            if (this.hasImageIds)
                writer.writeMessage(5, this.imageIds, () => this.imageIds.serialize(writer));
            if (this.hasImages)
                writer.writeMessage(6, this.images, () => this.images.serialize(writer));
            if (this.footerText.length)
                writer.writeString(7, this.footerText);
            if (this.hasLocalizedFooterText)
                writer.writeMessage(8, this.localizedFooterText, () => this.localizedFooterText.serialize(writer));
            if (this.hasResponseTexts)
                writer.writeMessage(9, this.responseTexts, () => this.responseTexts.serialize(writer));
            if (this.hideRedeemedDateTime != false)
                writer.writeBool(10, this.hideRedeemedDateTime);
            if (this.hasCallToActionButton)
                writer.writeMessage(11, this.callToActionButton, () => this.callToActionButton.serialize(writer));
            if (this.cssOverrides.length)
                writer.writeString(12, this.cssOverrides);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StandardPassKitHostedPage {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StandardPassKitHostedPage();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.title = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.localizedTitle, () => message.localizedTitle = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 3:
                        message.redemptionInstructions = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.localizedRedemptionInstructions, () => message.localizedRedemptionInstructions = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 5:
                        reader.readMessage(message.imageIds, () => message.imageIds = dependency_9.io.ImageIds.deserialize(reader));
                        break;
                    case 6:
                        reader.readMessage(message.images, () => message.images = dependency_9.io.ImageData.deserialize(reader));
                        break;
                    case 7:
                        message.footerText = reader.readString();
                        break;
                    case 8:
                        reader.readMessage(message.localizedFooterText, () => message.localizedFooterText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 9:
                        reader.readMessage(message.responseTexts, () => message.responseTexts = ResponseTexts.deserialize(reader));
                        break;
                    case 10:
                        message.hideRedeemedDateTime = reader.readBool();
                        break;
                    case 11:
                        reader.readMessage(message.callToActionButton, () => message.callToActionButton = CallToActionButton.deserialize(reader));
                        break;
                    case 12:
                        message.cssOverrides = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): StandardPassKitHostedPage {
            return StandardPassKitHostedPage.deserialize(bytes);
        }
    }
    export class CallToActionButton extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            hideCallToActionButton?: boolean;
            buttonText?: string;
            localizedButtonText?: dependency_5.io.LocalizedString;
            link?: string;
            localizedLink?: dependency_5.io.LocalizedString;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("hideCallToActionButton" in data && data.hideCallToActionButton != undefined) {
                    this.hideCallToActionButton = data.hideCallToActionButton;
                }
                if ("buttonText" in data && data.buttonText != undefined) {
                    this.buttonText = data.buttonText;
                }
                if ("localizedButtonText" in data && data.localizedButtonText != undefined) {
                    this.localizedButtonText = data.localizedButtonText;
                }
                if ("link" in data && data.link != undefined) {
                    this.link = data.link;
                }
                if ("localizedLink" in data && data.localizedLink != undefined) {
                    this.localizedLink = data.localizedLink;
                }
            }
        }
        get hideCallToActionButton() {
            return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
        }
        set hideCallToActionButton(value: boolean) {
            pb_1.Message.setField(this, 1, value);
        }
        get buttonText() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set buttonText(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get localizedButtonText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 3) as dependency_5.io.LocalizedString;
        }
        set localizedButtonText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get hasLocalizedButtonText() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get link() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set link(value: string) {
            pb_1.Message.setField(this, 4, value);
        }
        get localizedLink() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 5) as dependency_5.io.LocalizedString;
        }
        set localizedLink(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 5, value);
        }
        get hasLocalizedLink() {
            return pb_1.Message.getField(this, 5) != null;
        }
        static fromObject(data: {
            hideCallToActionButton?: boolean;
            buttonText?: string;
            localizedButtonText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            link?: string;
            localizedLink?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
        }): CallToActionButton {
            const message = new CallToActionButton({});
            if (data.hideCallToActionButton != null) {
                message.hideCallToActionButton = data.hideCallToActionButton;
            }
            if (data.buttonText != null) {
                message.buttonText = data.buttonText;
            }
            if (data.localizedButtonText != null) {
                message.localizedButtonText = dependency_5.io.LocalizedString.fromObject(data.localizedButtonText);
            }
            if (data.link != null) {
                message.link = data.link;
            }
            if (data.localizedLink != null) {
                message.localizedLink = dependency_5.io.LocalizedString.fromObject(data.localizedLink);
            }
            return message;
        }
        toObject() {
            const data: {
                hideCallToActionButton?: boolean;
                buttonText?: string;
                localizedButtonText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                link?: string;
                localizedLink?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            } = {};
            if (this.hideCallToActionButton != null) {
                data.hideCallToActionButton = this.hideCallToActionButton;
            }
            if (this.buttonText != null) {
                data.buttonText = this.buttonText;
            }
            if (this.localizedButtonText != null) {
                data.localizedButtonText = this.localizedButtonText.toObject();
            }
            if (this.link != null) {
                data.link = this.link;
            }
            if (this.localizedLink != null) {
                data.localizedLink = this.localizedLink.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.hideCallToActionButton != false)
                writer.writeBool(1, this.hideCallToActionButton);
            if (this.buttonText.length)
                writer.writeString(2, this.buttonText);
            if (this.hasLocalizedButtonText)
                writer.writeMessage(3, this.localizedButtonText, () => this.localizedButtonText.serialize(writer));
            if (this.link.length)
                writer.writeString(4, this.link);
            if (this.hasLocalizedLink)
                writer.writeMessage(5, this.localizedLink, () => this.localizedLink.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CallToActionButton {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CallToActionButton();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.hideCallToActionButton = reader.readBool();
                        break;
                    case 2:
                        message.buttonText = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.localizedButtonText, () => message.localizedButtonText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 4:
                        message.link = reader.readString();
                        break;
                    case 5:
                        reader.readMessage(message.localizedLink, () => message.localizedLink = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CallToActionButton {
            return CallToActionButton.deserialize(bytes);
        }
    }
    export class ResponseTexts extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            redeemConfirmationDialogBoxText?: string;
            localizedRedeemConfirmationDialogBoxText?: dependency_5.io.LocalizedString;
            cancelRedeemText?: string;
            localizedCancelRedeemText?: dependency_5.io.LocalizedString;
            afterRedeemText?: string;
            localizedAfterRedeemText?: dependency_5.io.LocalizedString;
            couponAlreadyRedeemedText?: string;
            localizedCouponAlreadyRedeemedText?: dependency_5.io.LocalizedString;
            offerExpiredText?: string;
            localizedOfferExpiredText?: dependency_5.io.LocalizedString;
            couponExpiredText?: string;
            localizedCouponExpiredText?: dependency_5.io.LocalizedString;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("redeemConfirmationDialogBoxText" in data && data.redeemConfirmationDialogBoxText != undefined) {
                    this.redeemConfirmationDialogBoxText = data.redeemConfirmationDialogBoxText;
                }
                if ("localizedRedeemConfirmationDialogBoxText" in data && data.localizedRedeemConfirmationDialogBoxText != undefined) {
                    this.localizedRedeemConfirmationDialogBoxText = data.localizedRedeemConfirmationDialogBoxText;
                }
                if ("cancelRedeemText" in data && data.cancelRedeemText != undefined) {
                    this.cancelRedeemText = data.cancelRedeemText;
                }
                if ("localizedCancelRedeemText" in data && data.localizedCancelRedeemText != undefined) {
                    this.localizedCancelRedeemText = data.localizedCancelRedeemText;
                }
                if ("afterRedeemText" in data && data.afterRedeemText != undefined) {
                    this.afterRedeemText = data.afterRedeemText;
                }
                if ("localizedAfterRedeemText" in data && data.localizedAfterRedeemText != undefined) {
                    this.localizedAfterRedeemText = data.localizedAfterRedeemText;
                }
                if ("couponAlreadyRedeemedText" in data && data.couponAlreadyRedeemedText != undefined) {
                    this.couponAlreadyRedeemedText = data.couponAlreadyRedeemedText;
                }
                if ("localizedCouponAlreadyRedeemedText" in data && data.localizedCouponAlreadyRedeemedText != undefined) {
                    this.localizedCouponAlreadyRedeemedText = data.localizedCouponAlreadyRedeemedText;
                }
                if ("offerExpiredText" in data && data.offerExpiredText != undefined) {
                    this.offerExpiredText = data.offerExpiredText;
                }
                if ("localizedOfferExpiredText" in data && data.localizedOfferExpiredText != undefined) {
                    this.localizedOfferExpiredText = data.localizedOfferExpiredText;
                }
                if ("couponExpiredText" in data && data.couponExpiredText != undefined) {
                    this.couponExpiredText = data.couponExpiredText;
                }
                if ("localizedCouponExpiredText" in data && data.localizedCouponExpiredText != undefined) {
                    this.localizedCouponExpiredText = data.localizedCouponExpiredText;
                }
            }
        }
        get redeemConfirmationDialogBoxText() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set redeemConfirmationDialogBoxText(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get localizedRedeemConfirmationDialogBoxText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 2) as dependency_5.io.LocalizedString;
        }
        set localizedRedeemConfirmationDialogBoxText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasLocalizedRedeemConfirmationDialogBoxText() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get cancelRedeemText() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set cancelRedeemText(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get localizedCancelRedeemText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 4) as dependency_5.io.LocalizedString;
        }
        set localizedCancelRedeemText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get hasLocalizedCancelRedeemText() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get afterRedeemText() {
            return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
        }
        set afterRedeemText(value: string) {
            pb_1.Message.setField(this, 5, value);
        }
        get localizedAfterRedeemText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 6) as dependency_5.io.LocalizedString;
        }
        set localizedAfterRedeemText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 6, value);
        }
        get hasLocalizedAfterRedeemText() {
            return pb_1.Message.getField(this, 6) != null;
        }
        get couponAlreadyRedeemedText() {
            return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
        }
        set couponAlreadyRedeemedText(value: string) {
            pb_1.Message.setField(this, 7, value);
        }
        get localizedCouponAlreadyRedeemedText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 8) as dependency_5.io.LocalizedString;
        }
        set localizedCouponAlreadyRedeemedText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 8, value);
        }
        get hasLocalizedCouponAlreadyRedeemedText() {
            return pb_1.Message.getField(this, 8) != null;
        }
        get offerExpiredText() {
            return pb_1.Message.getFieldWithDefault(this, 9, "") as string;
        }
        set offerExpiredText(value: string) {
            pb_1.Message.setField(this, 9, value);
        }
        get localizedOfferExpiredText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 10) as dependency_5.io.LocalizedString;
        }
        set localizedOfferExpiredText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 10, value);
        }
        get hasLocalizedOfferExpiredText() {
            return pb_1.Message.getField(this, 10) != null;
        }
        get couponExpiredText() {
            return pb_1.Message.getFieldWithDefault(this, 11, "") as string;
        }
        set couponExpiredText(value: string) {
            pb_1.Message.setField(this, 11, value);
        }
        get localizedCouponExpiredText() {
            return pb_1.Message.getWrapperField(this, dependency_5.io.LocalizedString, 12) as dependency_5.io.LocalizedString;
        }
        set localizedCouponExpiredText(value: dependency_5.io.LocalizedString) {
            pb_1.Message.setWrapperField(this, 12, value);
        }
        get hasLocalizedCouponExpiredText() {
            return pb_1.Message.getField(this, 12) != null;
        }
        static fromObject(data: {
            redeemConfirmationDialogBoxText?: string;
            localizedRedeemConfirmationDialogBoxText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            cancelRedeemText?: string;
            localizedCancelRedeemText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            afterRedeemText?: string;
            localizedAfterRedeemText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            couponAlreadyRedeemedText?: string;
            localizedCouponAlreadyRedeemedText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            offerExpiredText?: string;
            localizedOfferExpiredText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            couponExpiredText?: string;
            localizedCouponExpiredText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
        }): ResponseTexts {
            const message = new ResponseTexts({});
            if (data.redeemConfirmationDialogBoxText != null) {
                message.redeemConfirmationDialogBoxText = data.redeemConfirmationDialogBoxText;
            }
            if (data.localizedRedeemConfirmationDialogBoxText != null) {
                message.localizedRedeemConfirmationDialogBoxText = dependency_5.io.LocalizedString.fromObject(data.localizedRedeemConfirmationDialogBoxText);
            }
            if (data.cancelRedeemText != null) {
                message.cancelRedeemText = data.cancelRedeemText;
            }
            if (data.localizedCancelRedeemText != null) {
                message.localizedCancelRedeemText = dependency_5.io.LocalizedString.fromObject(data.localizedCancelRedeemText);
            }
            if (data.afterRedeemText != null) {
                message.afterRedeemText = data.afterRedeemText;
            }
            if (data.localizedAfterRedeemText != null) {
                message.localizedAfterRedeemText = dependency_5.io.LocalizedString.fromObject(data.localizedAfterRedeemText);
            }
            if (data.couponAlreadyRedeemedText != null) {
                message.couponAlreadyRedeemedText = data.couponAlreadyRedeemedText;
            }
            if (data.localizedCouponAlreadyRedeemedText != null) {
                message.localizedCouponAlreadyRedeemedText = dependency_5.io.LocalizedString.fromObject(data.localizedCouponAlreadyRedeemedText);
            }
            if (data.offerExpiredText != null) {
                message.offerExpiredText = data.offerExpiredText;
            }
            if (data.localizedOfferExpiredText != null) {
                message.localizedOfferExpiredText = dependency_5.io.LocalizedString.fromObject(data.localizedOfferExpiredText);
            }
            if (data.couponExpiredText != null) {
                message.couponExpiredText = data.couponExpiredText;
            }
            if (data.localizedCouponExpiredText != null) {
                message.localizedCouponExpiredText = dependency_5.io.LocalizedString.fromObject(data.localizedCouponExpiredText);
            }
            return message;
        }
        toObject() {
            const data: {
                redeemConfirmationDialogBoxText?: string;
                localizedRedeemConfirmationDialogBoxText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                cancelRedeemText?: string;
                localizedCancelRedeemText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                afterRedeemText?: string;
                localizedAfterRedeemText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                couponAlreadyRedeemedText?: string;
                localizedCouponAlreadyRedeemedText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                offerExpiredText?: string;
                localizedOfferExpiredText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
                couponExpiredText?: string;
                localizedCouponExpiredText?: ReturnType<typeof dependency_5.io.LocalizedString.prototype.toObject>;
            } = {};
            if (this.redeemConfirmationDialogBoxText != null) {
                data.redeemConfirmationDialogBoxText = this.redeemConfirmationDialogBoxText;
            }
            if (this.localizedRedeemConfirmationDialogBoxText != null) {
                data.localizedRedeemConfirmationDialogBoxText = this.localizedRedeemConfirmationDialogBoxText.toObject();
            }
            if (this.cancelRedeemText != null) {
                data.cancelRedeemText = this.cancelRedeemText;
            }
            if (this.localizedCancelRedeemText != null) {
                data.localizedCancelRedeemText = this.localizedCancelRedeemText.toObject();
            }
            if (this.afterRedeemText != null) {
                data.afterRedeemText = this.afterRedeemText;
            }
            if (this.localizedAfterRedeemText != null) {
                data.localizedAfterRedeemText = this.localizedAfterRedeemText.toObject();
            }
            if (this.couponAlreadyRedeemedText != null) {
                data.couponAlreadyRedeemedText = this.couponAlreadyRedeemedText;
            }
            if (this.localizedCouponAlreadyRedeemedText != null) {
                data.localizedCouponAlreadyRedeemedText = this.localizedCouponAlreadyRedeemedText.toObject();
            }
            if (this.offerExpiredText != null) {
                data.offerExpiredText = this.offerExpiredText;
            }
            if (this.localizedOfferExpiredText != null) {
                data.localizedOfferExpiredText = this.localizedOfferExpiredText.toObject();
            }
            if (this.couponExpiredText != null) {
                data.couponExpiredText = this.couponExpiredText;
            }
            if (this.localizedCouponExpiredText != null) {
                data.localizedCouponExpiredText = this.localizedCouponExpiredText.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.redeemConfirmationDialogBoxText.length)
                writer.writeString(1, this.redeemConfirmationDialogBoxText);
            if (this.hasLocalizedRedeemConfirmationDialogBoxText)
                writer.writeMessage(2, this.localizedRedeemConfirmationDialogBoxText, () => this.localizedRedeemConfirmationDialogBoxText.serialize(writer));
            if (this.cancelRedeemText.length)
                writer.writeString(3, this.cancelRedeemText);
            if (this.hasLocalizedCancelRedeemText)
                writer.writeMessage(4, this.localizedCancelRedeemText, () => this.localizedCancelRedeemText.serialize(writer));
            if (this.afterRedeemText.length)
                writer.writeString(5, this.afterRedeemText);
            if (this.hasLocalizedAfterRedeemText)
                writer.writeMessage(6, this.localizedAfterRedeemText, () => this.localizedAfterRedeemText.serialize(writer));
            if (this.couponAlreadyRedeemedText.length)
                writer.writeString(7, this.couponAlreadyRedeemedText);
            if (this.hasLocalizedCouponAlreadyRedeemedText)
                writer.writeMessage(8, this.localizedCouponAlreadyRedeemedText, () => this.localizedCouponAlreadyRedeemedText.serialize(writer));
            if (this.offerExpiredText.length)
                writer.writeString(9, this.offerExpiredText);
            if (this.hasLocalizedOfferExpiredText)
                writer.writeMessage(10, this.localizedOfferExpiredText, () => this.localizedOfferExpiredText.serialize(writer));
            if (this.couponExpiredText.length)
                writer.writeString(11, this.couponExpiredText);
            if (this.hasLocalizedCouponExpiredText)
                writer.writeMessage(12, this.localizedCouponExpiredText, () => this.localizedCouponExpiredText.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ResponseTexts {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ResponseTexts();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.redeemConfirmationDialogBoxText = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.localizedRedeemConfirmationDialogBoxText, () => message.localizedRedeemConfirmationDialogBoxText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 3:
                        message.cancelRedeemText = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.localizedCancelRedeemText, () => message.localizedCancelRedeemText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 5:
                        message.afterRedeemText = reader.readString();
                        break;
                    case 6:
                        reader.readMessage(message.localizedAfterRedeemText, () => message.localizedAfterRedeemText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 7:
                        message.couponAlreadyRedeemedText = reader.readString();
                        break;
                    case 8:
                        reader.readMessage(message.localizedCouponAlreadyRedeemedText, () => message.localizedCouponAlreadyRedeemedText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 9:
                        message.offerExpiredText = reader.readString();
                        break;
                    case 10:
                        reader.readMessage(message.localizedOfferExpiredText, () => message.localizedOfferExpiredText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    case 11:
                        message.couponExpiredText = reader.readString();
                        break;
                    case 12:
                        reader.readMessage(message.localizedCouponExpiredText, () => message.localizedCouponExpiredText = dependency_5.io.LocalizedString.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ResponseTexts {
            return ResponseTexts.deserialize(bytes);
        }
    }
    export class CouponOffersListRequestDeprecated extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            campaignId?: string;
            pagination?: dependency_6.io.Pagination;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("campaignId" in data && data.campaignId != undefined) {
                    this.campaignId = data.campaignId;
                }
                if ("pagination" in data && data.pagination != undefined) {
                    this.pagination = data.pagination;
                }
            }
        }
        get campaignId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set campaignId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get pagination() {
            return pb_1.Message.getWrapperField(this, dependency_6.io.Pagination, 2) as dependency_6.io.Pagination;
        }
        set pagination(value: dependency_6.io.Pagination) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasPagination() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            campaignId?: string;
            pagination?: ReturnType<typeof dependency_6.io.Pagination.prototype.toObject>;
        }): CouponOffersListRequestDeprecated {
            const message = new CouponOffersListRequestDeprecated({});
            if (data.campaignId != null) {
                message.campaignId = data.campaignId;
            }
            if (data.pagination != null) {
                message.pagination = dependency_6.io.Pagination.fromObject(data.pagination);
            }
            return message;
        }
        toObject() {
            const data: {
                campaignId?: string;
                pagination?: ReturnType<typeof dependency_6.io.Pagination.prototype.toObject>;
            } = {};
            if (this.campaignId != null) {
                data.campaignId = this.campaignId;
            }
            if (this.pagination != null) {
                data.pagination = this.pagination.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.campaignId.length)
                writer.writeString(1, this.campaignId);
            if (this.hasPagination)
                writer.writeMessage(2, this.pagination, () => this.pagination.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CouponOffersListRequestDeprecated {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CouponOffersListRequestDeprecated();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.campaignId = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.pagination, () => message.pagination = dependency_6.io.Pagination.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CouponOffersListRequestDeprecated {
            return CouponOffersListRequestDeprecated.deserialize(bytes);
        }
    }
    export class CouponOffersListRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            campaignId?: string;
            filters?: dependency_7.io.Filters;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("campaignId" in data && data.campaignId != undefined) {
                    this.campaignId = data.campaignId;
                }
                if ("filters" in data && data.filters != undefined) {
                    this.filters = data.filters;
                }
            }
        }
        get campaignId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set campaignId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get filters() {
            return pb_1.Message.getWrapperField(this, dependency_7.io.Filters, 2) as dependency_7.io.Filters;
        }
        set filters(value: dependency_7.io.Filters) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get hasFilters() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            campaignId?: string;
            filters?: ReturnType<typeof dependency_7.io.Filters.prototype.toObject>;
        }): CouponOffersListRequest {
            const message = new CouponOffersListRequest({});
            if (data.campaignId != null) {
                message.campaignId = data.campaignId;
            }
            if (data.filters != null) {
                message.filters = dependency_7.io.Filters.fromObject(data.filters);
            }
            return message;
        }
        toObject() {
            const data: {
                campaignId?: string;
                filters?: ReturnType<typeof dependency_7.io.Filters.prototype.toObject>;
            } = {};
            if (this.campaignId != null) {
                data.campaignId = this.campaignId;
            }
            if (this.filters != null) {
                data.filters = this.filters.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.campaignId.length)
                writer.writeString(1, this.campaignId);
            if (this.hasFilters)
                writer.writeMessage(2, this.filters, () => this.filters.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CouponOffersListRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CouponOffersListRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.campaignId = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.filters, () => message.filters = dependency_7.io.Filters.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CouponOffersListRequest {
            return CouponOffersListRequest.deserialize(bytes);
        }
    }
}
