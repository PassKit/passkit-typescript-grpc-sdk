/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/core/a_rpc_messages.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/api/annotations";
import * as dependency_2 from "./../../google/protobuf/empty";
import * as dependency_3 from "./../../protoc-gen-openapiv2/options/annotations";
import * as dependency_4 from "./../common/common_objects";
import * as dependency_5 from "./../common/message";
import * as grpc_1 from "@grpc/grpc-js";
export namespace io {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedMessagesService {
        static definition = {
            getMessage: {
                path: "/io.Messages/getMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Message) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Message.deserialize(new Uint8Array(bytes))
            },
            createMessage: {
                path: "/io.Messages/createMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.io.Message) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.Message.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateMessage: {
                path: "/io.Messages/updateMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.io.Message) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.Message.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            deleteMessage: {
                path: "/io.Messages/deleteMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            sendMessage: {
                path: "/io.Messages/sendMessage",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_5.io.SendMessageRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.io.SendMessageRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.SendMessageResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.SendMessageResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract getMessage(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_5.io.Message>, callback: grpc_1.sendUnaryData<dependency_5.io.Message>): void;
        abstract createMessage(call: grpc_1.ServerUnaryCall<dependency_5.io.Message, dependency_4.io.Id>, callback: grpc_1.sendUnaryData<dependency_4.io.Id>): void;
        abstract updateMessage(call: grpc_1.ServerUnaryCall<dependency_5.io.Message, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract deleteMessage(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract sendMessage(call: grpc_1.ServerUnaryCall<dependency_5.io.SendMessageRequest, dependency_5.io.SendMessageResponse>, callback: grpc_1.sendUnaryData<dependency_5.io.SendMessageResponse>): void;
    }
    export class MessagesClient extends grpc_1.makeGenericClientConstructor(UnimplementedMessagesService.definition, "Messages", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        getMessage: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_5.io.Message> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_5.io.Message> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getMessage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_5.io.Message) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        createMessage: GrpcPromiseServiceInterface<dependency_5.io.Message, dependency_4.io.Id> = (message: dependency_5.io.Message, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createMessage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateMessage: GrpcPromiseServiceInterface<dependency_5.io.Message, dependency_2.google.protobuf.Empty> = (message: dependency_5.io.Message, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateMessage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteMessage: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteMessage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        sendMessage: GrpcPromiseServiceInterface<dependency_5.io.SendMessageRequest, dependency_5.io.SendMessageResponse> = (message: dependency_5.io.SendMessageRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_5.io.SendMessageResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.sendMessage(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_5.io.SendMessageResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
    }
}
