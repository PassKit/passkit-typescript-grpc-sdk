/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/common/note.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/protobuf/timestamp";
import * as pb_1 from "google-protobuf";
export namespace io {
    export class Note extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            subjectId?: string;
            username?: string;
            message?: string;
            created?: dependency_1.google.protobuf.Timestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("subjectId" in data && data.subjectId != undefined) {
                    this.subjectId = data.subjectId;
                }
                if ("username" in data && data.username != undefined) {
                    this.username = data.username;
                }
                if ("message" in data && data.message != undefined) {
                    this.message = data.message;
                }
                if ("created" in data && data.created != undefined) {
                    this.created = data.created;
                }
            }
        }
        get subjectId() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set subjectId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get username() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set username(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get message() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set message(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get created() {
            return pb_1.Message.getWrapperField(this, dependency_1.google.protobuf.Timestamp, 4) as dependency_1.google.protobuf.Timestamp;
        }
        set created(value: dependency_1.google.protobuf.Timestamp) {
            pb_1.Message.setWrapperField(this, 4, value);
        }
        get hasCreated() {
            return pb_1.Message.getField(this, 4) != null;
        }
        static fromObject(data: {
            subjectId?: string;
            username?: string;
            message?: string;
            created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
        }): Note {
            const message = new Note({});
            if (data.subjectId != null) {
                message.subjectId = data.subjectId;
            }
            if (data.username != null) {
                message.username = data.username;
            }
            if (data.message != null) {
                message.message = data.message;
            }
            if (data.created != null) {
                message.created = dependency_1.google.protobuf.Timestamp.fromObject(data.created);
            }
            return message;
        }
        toObject() {
            const data: {
                subjectId?: string;
                username?: string;
                message?: string;
                created?: ReturnType<typeof dependency_1.google.protobuf.Timestamp.prototype.toObject>;
            } = {};
            if (this.subjectId != null) {
                data.subjectId = this.subjectId;
            }
            if (this.username != null) {
                data.username = this.username;
            }
            if (this.message != null) {
                data.message = this.message;
            }
            if (this.created != null) {
                data.created = this.created.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.subjectId.length)
                writer.writeString(1, this.subjectId);
            if (this.username.length)
                writer.writeString(2, this.username);
            if (this.message.length)
                writer.writeString(3, this.message);
            if (this.hasCreated)
                writer.writeMessage(4, this.created, () => this.created.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Note {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Note();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.subjectId = reader.readString();
                        break;
                    case 2:
                        message.username = reader.readString();
                        break;
                    case 3:
                        message.message = reader.readString();
                        break;
                    case 4:
                        reader.readMessage(message.created, () => message.created = dependency_1.google.protobuf.Timestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Note {
            return Note.deserialize(bytes);
        }
    }
}
