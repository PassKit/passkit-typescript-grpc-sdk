/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/member/a_rpc.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/api/annotations";
import * as dependency_2 from "./../../google/protobuf/empty";
import * as dependency_3 from "./../common/common_objects";
import * as dependency_4 from "./../common/distribution";
import * as dependency_5 from "./../common/message";
import * as dependency_6 from "./../common/pagination";
import * as dependency_7 from "./../common/filter";
import * as dependency_8 from "./../common/personal";
import * as dependency_9 from "./member_events";
import * as dependency_10 from "./member";
import * as dependency_11 from "./program";
import * as dependency_12 from "./tier";
import * as dependency_13 from "./../../protoc-gen-openapiv2/options/annotations";
import * as grpc_1 from "@grpc/grpc-js";
export namespace members {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedMembersService {
        static definition = {
            createProgram: {
                path: "/members.Members/createProgram",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_11.members.Program) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_11.members.Program.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateProgram: {
                path: "/members.Members/updateProgram",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_11.members.Program) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_11.members.Program.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_11.members.Program) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_11.members.Program.deserialize(new Uint8Array(bytes))
            },
            getProgram: {
                path: "/members.Members/getProgram",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_11.members.Program) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_11.members.Program.deserialize(new Uint8Array(bytes))
            },
            copyProgram: {
                path: "/members.Members/copyProgram",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_11.members.ProgramCopyRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_11.members.ProgramCopyRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            deleteProgram: {
                path: "/members.Members/deleteProgram",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            listProgramsDeprecated: {
                path: "/members.Members/listProgramsDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_6.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_11.members.Program) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_11.members.Program.deserialize(new Uint8Array(bytes))
            },
            listPrograms: {
                path: "/members.Members/listPrograms",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_7.io.Filters) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.io.Filters.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_11.members.Program) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_11.members.Program.deserialize(new Uint8Array(bytes))
            },
            createTier: {
                path: "/members.Members/createTier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_12.members.Tier) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_12.members.Tier.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            updateTier: {
                path: "/members.Members/updateTier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_12.members.Tier) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_12.members.Tier.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_12.members.Tier) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_12.members.Tier.deserialize(new Uint8Array(bytes))
            },
            getTier: {
                path: "/members.Members/getTier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_12.members.TierRequestInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_12.members.TierRequestInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_12.members.Tier) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_12.members.Tier.deserialize(new Uint8Array(bytes))
            },
            deleteTier: {
                path: "/members.Members/deleteTier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_12.members.TierRequestInput) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_12.members.TierRequestInput.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            listTiersDeprecated: {
                path: "/members.Members/listTiersDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_10.members.ListRequestDeprecated) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequestDeprecated.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_12.members.Tier) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_12.members.Tier.deserialize(new Uint8Array(bytes))
            },
            listTiers: {
                path: "/members.Members/listTiers",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_10.members.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_12.members.Tier) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_12.members.Tier.deserialize(new Uint8Array(bytes))
            },
            enrolMember: {
                path: "/members.Members/enrolMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            enrolMemberPublic: {
                path: "/members.Members/enrolMemberPublic",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            getMemberRecordById: {
                path: "/members.Members/getMemberRecordById",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes))
            },
            getMemberRecordByExternalId: {
                path: "/members.Members/getMemberRecordByExternalId",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.MemberRecordByExternalIdRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.MemberRecordByExternalIdRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes))
            },
            checkInMember: {
                path: "/members.Members/checkInMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.MemberCheckInOutRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.MemberCheckInOutRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.members.MemberEvent) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.members.MemberEvent.deserialize(new Uint8Array(bytes))
            },
            checkOutMember: {
                path: "/members.Members/checkOutMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.MemberCheckInOutRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.MemberCheckInOutRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.members.MemberEvent) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.members.MemberEvent.deserialize(new Uint8Array(bytes))
            },
            listMembersDeprecated: {
                path: "/members.Members/listMembersDeprecated",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_10.members.ListRequestDeprecated) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequestDeprecated.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes))
            },
            listMembers: {
                path: "/members.Members/listMembers",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_10.members.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes))
            },
            updateMember: {
                path: "/members.Members/updateMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            earnPoints: {
                path: "/members.Members/earnPoints",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.EarnBurnPointsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.EarnBurnPointsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.members.MemberPoints) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.members.MemberPoints.deserialize(new Uint8Array(bytes))
            },
            burnPoints: {
                path: "/members.Members/burnPoints",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.EarnBurnPointsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.EarnBurnPointsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.members.MemberPoints) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.members.MemberPoints.deserialize(new Uint8Array(bytes))
            },
            setPoints: {
                path: "/members.Members/setPoints",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.SetPointsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.SetPointsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_10.members.MemberPoints) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_10.members.MemberPoints.deserialize(new Uint8Array(bytes))
            },
            changeMemberTier: {
                path: "/members.Members/changeMemberTier",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.ChangeTierRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ChangeTierRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.members.MemberEvent) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.members.MemberEvent.deserialize(new Uint8Array(bytes))
            },
            updateMembersBySegment: {
                path: "/members.Members/updateMembersBySegment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.MemberSegmentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.MemberSegmentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            deleteMembersBySegment: {
                path: "/members.Members/deleteMembersBySegment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.MemberSegmentRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.MemberSegmentRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            deleteMember: {
                path: "/members.Members/deleteMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.Member) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.Member.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            bulkDeleteMembers: {
                path: "/members.Members/bulkDeleteMembers",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.BulkPassActionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.BulkPassActionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            countMembersDeprecated: {
                path: "/members.Members/countMembersDeprecated",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.ListRequestDeprecated) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequestDeprecated.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Count.deserialize(new Uint8Array(bytes))
            },
            countMembers: {
                path: "/members.Members/countMembers",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Count.deserialize(new Uint8Array(bytes))
            },
            getMessageHistoryForMember: {
                path: "/members.Members/getMessageHistoryForMember",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_6.io.Pagination) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.io.Pagination.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.io.Message) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.io.Message.deserialize(new Uint8Array(bytes))
            },
            getMetaKeysForProgram: {
                path: "/members.Members/getMetaKeysForProgram",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Strings) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Strings.deserialize(new Uint8Array(bytes))
            },
            renewMembersExpiry: {
                path: "/members.Members/renewMembersExpiry",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.UpdateExpiryRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.UpdateExpiryRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Count.deserialize(new Uint8Array(bytes))
            },
            updateMemberExpiry: {
                path: "/members.Members/updateMemberExpiry",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.MemberExpiry) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.MemberExpiry.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            patchPerson: {
                path: "/members.Members/patchPerson",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.io.PersonRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.io.PersonRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes))
            },
            countMemberEvents: {
                path: "/members.Members/countMemberEvents",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Count) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Count.deserialize(new Uint8Array(bytes))
            },
            listMemberEvents: {
                path: "/members.Members/listMemberEvents",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_10.members.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.members.MemberEvent) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.members.MemberEvent.deserialize(new Uint8Array(bytes))
            },
            getMemberEventMetaKeysForProgram: {
                path: "/members.Members/getMemberEventMetaKeysForProgram",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.io.Strings) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.io.Strings.deserialize(new Uint8Array(bytes))
            },
            listEventsForMember: {
                path: "/members.Members/listEventsForMember",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_9.members.MemberEvent) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_9.members.MemberEvent.deserialize(new Uint8Array(bytes))
            },
            deleteMemberEvents: {
                path: "/members.Members/deleteMemberEvents",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_10.members.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_10.members.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            deleteEventsForMember: {
                path: "/members.Members/deleteEventsForMember",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            deleteMemberEvent: {
                path: "/members.Members/deleteMemberEvent",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getProgramEnrolment: {
                path: "/members.Members/getProgramEnrolment",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_3.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_3.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.io.EnrolmentUrls) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.io.EnrolmentUrls.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract createProgram(call: grpc_1.ServerUnaryCall<dependency_11.members.Program, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract updateProgram(call: grpc_1.ServerUnaryCall<dependency_11.members.Program, dependency_11.members.Program>, callback: grpc_1.sendUnaryData<dependency_11.members.Program>): void;
        abstract getProgram(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_11.members.Program>, callback: grpc_1.sendUnaryData<dependency_11.members.Program>): void;
        abstract copyProgram(call: grpc_1.ServerUnaryCall<dependency_11.members.ProgramCopyRequest, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract deleteProgram(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract listProgramsDeprecated(call: grpc_1.ServerWritableStream<dependency_6.io.Pagination, dependency_11.members.Program>): void;
        abstract listPrograms(call: grpc_1.ServerWritableStream<dependency_7.io.Filters, dependency_11.members.Program>): void;
        abstract createTier(call: grpc_1.ServerUnaryCall<dependency_12.members.Tier, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract updateTier(call: grpc_1.ServerUnaryCall<dependency_12.members.Tier, dependency_12.members.Tier>, callback: grpc_1.sendUnaryData<dependency_12.members.Tier>): void;
        abstract getTier(call: grpc_1.ServerUnaryCall<dependency_12.members.TierRequestInput, dependency_12.members.Tier>, callback: grpc_1.sendUnaryData<dependency_12.members.Tier>): void;
        abstract deleteTier(call: grpc_1.ServerUnaryCall<dependency_12.members.TierRequestInput, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract listTiersDeprecated(call: grpc_1.ServerWritableStream<dependency_10.members.ListRequestDeprecated, dependency_12.members.Tier>): void;
        abstract listTiers(call: grpc_1.ServerWritableStream<dependency_10.members.ListRequest, dependency_12.members.Tier>): void;
        abstract enrolMember(call: grpc_1.ServerUnaryCall<dependency_10.members.Member, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract enrolMemberPublic(call: grpc_1.ServerUnaryCall<dependency_10.members.Member, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract getMemberRecordById(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_10.members.Member>, callback: grpc_1.sendUnaryData<dependency_10.members.Member>): void;
        abstract getMemberRecordByExternalId(call: grpc_1.ServerUnaryCall<dependency_10.members.MemberRecordByExternalIdRequest, dependency_10.members.Member>, callback: grpc_1.sendUnaryData<dependency_10.members.Member>): void;
        abstract checkInMember(call: grpc_1.ServerUnaryCall<dependency_10.members.MemberCheckInOutRequest, dependency_9.members.MemberEvent>, callback: grpc_1.sendUnaryData<dependency_9.members.MemberEvent>): void;
        abstract checkOutMember(call: grpc_1.ServerUnaryCall<dependency_10.members.MemberCheckInOutRequest, dependency_9.members.MemberEvent>, callback: grpc_1.sendUnaryData<dependency_9.members.MemberEvent>): void;
        abstract listMembersDeprecated(call: grpc_1.ServerWritableStream<dependency_10.members.ListRequestDeprecated, dependency_10.members.Member>): void;
        abstract listMembers(call: grpc_1.ServerWritableStream<dependency_10.members.ListRequest, dependency_10.members.Member>): void;
        abstract updateMember(call: grpc_1.ServerUnaryCall<dependency_10.members.Member, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract earnPoints(call: grpc_1.ServerUnaryCall<dependency_10.members.EarnBurnPointsRequest, dependency_10.members.MemberPoints>, callback: grpc_1.sendUnaryData<dependency_10.members.MemberPoints>): void;
        abstract burnPoints(call: grpc_1.ServerUnaryCall<dependency_10.members.EarnBurnPointsRequest, dependency_10.members.MemberPoints>, callback: grpc_1.sendUnaryData<dependency_10.members.MemberPoints>): void;
        abstract setPoints(call: grpc_1.ServerUnaryCall<dependency_10.members.SetPointsRequest, dependency_10.members.MemberPoints>, callback: grpc_1.sendUnaryData<dependency_10.members.MemberPoints>): void;
        abstract changeMemberTier(call: grpc_1.ServerUnaryCall<dependency_10.members.ChangeTierRequest, dependency_9.members.MemberEvent>, callback: grpc_1.sendUnaryData<dependency_9.members.MemberEvent>): void;
        abstract updateMembersBySegment(call: grpc_1.ServerUnaryCall<dependency_10.members.MemberSegmentRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract deleteMembersBySegment(call: grpc_1.ServerUnaryCall<dependency_10.members.MemberSegmentRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract deleteMember(call: grpc_1.ServerUnaryCall<dependency_10.members.Member, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract bulkDeleteMembers(call: grpc_1.ServerUnaryCall<dependency_3.io.BulkPassActionRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract countMembersDeprecated(call: grpc_1.ServerUnaryCall<dependency_10.members.ListRequestDeprecated, dependency_3.io.Count>, callback: grpc_1.sendUnaryData<dependency_3.io.Count>): void;
        abstract countMembers(call: grpc_1.ServerUnaryCall<dependency_10.members.ListRequest, dependency_3.io.Count>, callback: grpc_1.sendUnaryData<dependency_3.io.Count>): void;
        abstract getMessageHistoryForMember(call: grpc_1.ServerWritableStream<dependency_6.io.Pagination, dependency_5.io.Message>): void;
        abstract getMetaKeysForProgram(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_3.io.Strings>, callback: grpc_1.sendUnaryData<dependency_3.io.Strings>): void;
        abstract renewMembersExpiry(call: grpc_1.ServerUnaryCall<dependency_10.members.UpdateExpiryRequest, dependency_3.io.Count>, callback: grpc_1.sendUnaryData<dependency_3.io.Count>): void;
        abstract updateMemberExpiry(call: grpc_1.ServerUnaryCall<dependency_10.members.MemberExpiry, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract patchPerson(call: grpc_1.ServerUnaryCall<dependency_8.io.PersonRequest, dependency_3.io.Id>, callback: grpc_1.sendUnaryData<dependency_3.io.Id>): void;
        abstract countMemberEvents(call: grpc_1.ServerUnaryCall<dependency_10.members.ListRequest, dependency_3.io.Count>, callback: grpc_1.sendUnaryData<dependency_3.io.Count>): void;
        abstract listMemberEvents(call: grpc_1.ServerWritableStream<dependency_10.members.ListRequest, dependency_9.members.MemberEvent>): void;
        abstract getMemberEventMetaKeysForProgram(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_3.io.Strings>, callback: grpc_1.sendUnaryData<dependency_3.io.Strings>): void;
        abstract listEventsForMember(call: grpc_1.ServerWritableStream<dependency_3.io.Id, dependency_9.members.MemberEvent>): void;
        abstract deleteMemberEvents(call: grpc_1.ServerUnaryCall<dependency_10.members.ListRequest, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract deleteEventsForMember(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract deleteMemberEvent(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getProgramEnrolment(call: grpc_1.ServerUnaryCall<dependency_3.io.Id, dependency_4.io.EnrolmentUrls>, callback: grpc_1.sendUnaryData<dependency_4.io.EnrolmentUrls>): void;
    }
    export class MembersClient extends grpc_1.makeGenericClientConstructor(UnimplementedMembersService.definition, "Members", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        createProgram: GrpcPromiseServiceInterface<dependency_11.members.Program, dependency_3.io.Id> = (message: dependency_11.members.Program, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createProgram(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateProgram: GrpcPromiseServiceInterface<dependency_11.members.Program, dependency_11.members.Program> = (message: dependency_11.members.Program, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_11.members.Program> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateProgram(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_11.members.Program) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getProgram: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_11.members.Program> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_11.members.Program> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getProgram(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_11.members.Program) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        copyProgram: GrpcPromiseServiceInterface<dependency_11.members.ProgramCopyRequest, dependency_3.io.Id> = (message: dependency_11.members.ProgramCopyRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.copyProgram(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteProgram: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteProgram(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listProgramsDeprecated: GrpcStreamServiceInterface<dependency_6.io.Pagination, dependency_11.members.Program> = (message: dependency_6.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_11.members.Program> => {
            return super.listProgramsDeprecated(message, metadata, options);
        };
        listPrograms: GrpcStreamServiceInterface<dependency_7.io.Filters, dependency_11.members.Program> = (message: dependency_7.io.Filters, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_11.members.Program> => {
            return super.listPrograms(message, metadata, options);
        };
        createTier: GrpcPromiseServiceInterface<dependency_12.members.Tier, dependency_3.io.Id> = (message: dependency_12.members.Tier, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createTier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateTier: GrpcPromiseServiceInterface<dependency_12.members.Tier, dependency_12.members.Tier> = (message: dependency_12.members.Tier, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_12.members.Tier> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateTier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_12.members.Tier) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getTier: GrpcPromiseServiceInterface<dependency_12.members.TierRequestInput, dependency_12.members.Tier> = (message: dependency_12.members.TierRequestInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_12.members.Tier> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getTier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_12.members.Tier) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteTier: GrpcPromiseServiceInterface<dependency_12.members.TierRequestInput, dependency_2.google.protobuf.Empty> = (message: dependency_12.members.TierRequestInput, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteTier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listTiersDeprecated: GrpcStreamServiceInterface<dependency_10.members.ListRequestDeprecated, dependency_12.members.Tier> = (message: dependency_10.members.ListRequestDeprecated, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_12.members.Tier> => {
            return super.listTiersDeprecated(message, metadata, options);
        };
        listTiers: GrpcStreamServiceInterface<dependency_10.members.ListRequest, dependency_12.members.Tier> = (message: dependency_10.members.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_12.members.Tier> => {
            return super.listTiers(message, metadata, options);
        };
        enrolMember: GrpcPromiseServiceInterface<dependency_10.members.Member, dependency_3.io.Id> = (message: dependency_10.members.Member, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.enrolMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        enrolMemberPublic: GrpcPromiseServiceInterface<dependency_10.members.Member, dependency_3.io.Id> = (message: dependency_10.members.Member, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.enrolMemberPublic(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getMemberRecordById: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_10.members.Member> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_10.members.Member> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getMemberRecordById(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_10.members.Member) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getMemberRecordByExternalId: GrpcPromiseServiceInterface<dependency_10.members.MemberRecordByExternalIdRequest, dependency_10.members.Member> = (message: dependency_10.members.MemberRecordByExternalIdRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_10.members.Member> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getMemberRecordByExternalId(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_10.members.Member) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        checkInMember: GrpcPromiseServiceInterface<dependency_10.members.MemberCheckInOutRequest, dependency_9.members.MemberEvent> = (message: dependency_10.members.MemberCheckInOutRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.members.MemberEvent> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.checkInMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.members.MemberEvent) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        checkOutMember: GrpcPromiseServiceInterface<dependency_10.members.MemberCheckInOutRequest, dependency_9.members.MemberEvent> = (message: dependency_10.members.MemberCheckInOutRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.members.MemberEvent> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.checkOutMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.members.MemberEvent) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listMembersDeprecated: GrpcStreamServiceInterface<dependency_10.members.ListRequestDeprecated, dependency_10.members.Member> = (message: dependency_10.members.ListRequestDeprecated, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_10.members.Member> => {
            return super.listMembersDeprecated(message, metadata, options);
        };
        listMembers: GrpcStreamServiceInterface<dependency_10.members.ListRequest, dependency_10.members.Member> = (message: dependency_10.members.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_10.members.Member> => {
            return super.listMembers(message, metadata, options);
        };
        updateMember: GrpcPromiseServiceInterface<dependency_10.members.Member, dependency_3.io.Id> = (message: dependency_10.members.Member, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        earnPoints: GrpcPromiseServiceInterface<dependency_10.members.EarnBurnPointsRequest, dependency_10.members.MemberPoints> = (message: dependency_10.members.EarnBurnPointsRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_10.members.MemberPoints> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.earnPoints(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_10.members.MemberPoints) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        burnPoints: GrpcPromiseServiceInterface<dependency_10.members.EarnBurnPointsRequest, dependency_10.members.MemberPoints> = (message: dependency_10.members.EarnBurnPointsRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_10.members.MemberPoints> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.burnPoints(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_10.members.MemberPoints) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        setPoints: GrpcPromiseServiceInterface<dependency_10.members.SetPointsRequest, dependency_10.members.MemberPoints> = (message: dependency_10.members.SetPointsRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_10.members.MemberPoints> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.setPoints(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_10.members.MemberPoints) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        changeMemberTier: GrpcPromiseServiceInterface<dependency_10.members.ChangeTierRequest, dependency_9.members.MemberEvent> = (message: dependency_10.members.ChangeTierRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_9.members.MemberEvent> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.changeMemberTier(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_9.members.MemberEvent) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateMembersBySegment: GrpcPromiseServiceInterface<dependency_10.members.MemberSegmentRequest, dependency_2.google.protobuf.Empty> = (message: dependency_10.members.MemberSegmentRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateMembersBySegment(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteMembersBySegment: GrpcPromiseServiceInterface<dependency_10.members.MemberSegmentRequest, dependency_2.google.protobuf.Empty> = (message: dependency_10.members.MemberSegmentRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteMembersBySegment(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteMember: GrpcPromiseServiceInterface<dependency_10.members.Member, dependency_2.google.protobuf.Empty> = (message: dependency_10.members.Member, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        bulkDeleteMembers: GrpcPromiseServiceInterface<dependency_3.io.BulkPassActionRequest, dependency_2.google.protobuf.Empty> = (message: dependency_3.io.BulkPassActionRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.bulkDeleteMembers(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        countMembersDeprecated: GrpcPromiseServiceInterface<dependency_10.members.ListRequestDeprecated, dependency_3.io.Count> = (message: dependency_10.members.ListRequestDeprecated, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countMembersDeprecated(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        countMembers: GrpcPromiseServiceInterface<dependency_10.members.ListRequest, dependency_3.io.Count> = (message: dependency_10.members.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countMembers(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getMessageHistoryForMember: GrpcStreamServiceInterface<dependency_6.io.Pagination, dependency_5.io.Message> = (message: dependency_6.io.Pagination, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_5.io.Message> => {
            return super.getMessageHistoryForMember(message, metadata, options);
        };
        getMetaKeysForProgram: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_3.io.Strings> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Strings> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getMetaKeysForProgram(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Strings) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        renewMembersExpiry: GrpcPromiseServiceInterface<dependency_10.members.UpdateExpiryRequest, dependency_3.io.Count> = (message: dependency_10.members.UpdateExpiryRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.renewMembersExpiry(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateMemberExpiry: GrpcPromiseServiceInterface<dependency_10.members.MemberExpiry, dependency_3.io.Id> = (message: dependency_10.members.MemberExpiry, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateMemberExpiry(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        patchPerson: GrpcPromiseServiceInterface<dependency_8.io.PersonRequest, dependency_3.io.Id> = (message: dependency_8.io.PersonRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Id> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.patchPerson(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Id) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        countMemberEvents: GrpcPromiseServiceInterface<dependency_10.members.ListRequest, dependency_3.io.Count> = (message: dependency_10.members.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Count> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.countMemberEvents(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Count) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listMemberEvents: GrpcStreamServiceInterface<dependency_10.members.ListRequest, dependency_9.members.MemberEvent> = (message: dependency_10.members.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_9.members.MemberEvent> => {
            return super.listMemberEvents(message, metadata, options);
        };
        getMemberEventMetaKeysForProgram: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_3.io.Strings> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_3.io.Strings> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getMemberEventMetaKeysForProgram(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_3.io.Strings) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listEventsForMember: GrpcStreamServiceInterface<dependency_3.io.Id, dependency_9.members.MemberEvent> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_9.members.MemberEvent> => {
            return super.listEventsForMember(message, metadata, options);
        };
        deleteMemberEvents: GrpcPromiseServiceInterface<dependency_10.members.ListRequest, dependency_2.google.protobuf.Empty> = (message: dependency_10.members.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteMemberEvents(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteEventsForMember: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteEventsForMember(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteMemberEvent: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteMemberEvent(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getProgramEnrolment: GrpcPromiseServiceInterface<dependency_3.io.Id, dependency_4.io.EnrolmentUrls> = (message: dependency_3.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_4.io.EnrolmentUrls> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getProgramEnrolment(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_4.io.EnrolmentUrls) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
    }
}
