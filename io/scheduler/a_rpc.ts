/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 5.29.0
 * source: io/scheduler/a_rpc.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../google/api/annotations";
import * as dependency_2 from "./../../google/protobuf/empty";
import * as dependency_3 from "./../../protoc-gen-openapiv2/options/annotations";
import * as dependency_4 from "./../common/common_objects";
import * as dependency_5 from "./scheduler";
import * as dependency_6 from "./../../ct/scheduler/scheduler";
import * as grpc_1 from "@grpc/grpc-js";
export namespace scheduler {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedSchedulerService {
        static definition = {
            createSchedulingJob: {
                path: "/scheduler.Scheduler/createSchedulingJob",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.ct.SchedulingJob) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.ct.SchedulingJob.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.ct.SchedulingJobResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.ct.SchedulingJobResponse.deserialize(new Uint8Array(bytes))
            },
            getSchedulingJob: {
                path: "/scheduler.Scheduler/getSchedulingJob",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.ct.SchedulingJob) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.ct.SchedulingJob.deserialize(new Uint8Array(bytes))
            },
            updateSchedulingJob: {
                path: "/scheduler.Scheduler/updateSchedulingJob",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.ct.SchedulingJob) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.ct.SchedulingJob.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.ct.SchedulingJobResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.ct.SchedulingJobResponse.deserialize(new Uint8Array(bytes))
            },
            patchSchedulingJob: {
                path: "/scheduler.Scheduler/patchSchedulingJob",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.ct.SchedulingJob) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.ct.SchedulingJob.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.ct.SchedulingJobResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.ct.SchedulingJobResponse.deserialize(new Uint8Array(bytes))
            },
            deleteSchedulingJob: {
                path: "/scheduler.Scheduler/deleteSchedulingJob",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.google.protobuf.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.google.protobuf.Empty.deserialize(new Uint8Array(bytes))
            },
            getSchedulingJobHistory: {
                path: "/scheduler.Scheduler/getSchedulingJobHistory",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_4.io.Id) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_4.io.Id.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.ct.JobHistory) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.ct.JobHistory.deserialize(new Uint8Array(bytes))
            },
            listSchedulingJobHistories: {
                path: "/scheduler.Scheduler/listSchedulingJobHistories",
                requestStream: false,
                responseStream: true,
                requestSerialize: (message: dependency_5.scheduler.ListRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_5.scheduler.ListRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.ct.JobHistory) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.ct.JobHistory.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract createSchedulingJob(call: grpc_1.ServerUnaryCall<dependency_6.ct.SchedulingJob, dependency_6.ct.SchedulingJobResponse>, callback: grpc_1.sendUnaryData<dependency_6.ct.SchedulingJobResponse>): void;
        abstract getSchedulingJob(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_6.ct.SchedulingJob>, callback: grpc_1.sendUnaryData<dependency_6.ct.SchedulingJob>): void;
        abstract updateSchedulingJob(call: grpc_1.ServerUnaryCall<dependency_6.ct.SchedulingJob, dependency_6.ct.SchedulingJobResponse>, callback: grpc_1.sendUnaryData<dependency_6.ct.SchedulingJobResponse>): void;
        abstract patchSchedulingJob(call: grpc_1.ServerUnaryCall<dependency_6.ct.SchedulingJob, dependency_6.ct.SchedulingJobResponse>, callback: grpc_1.sendUnaryData<dependency_6.ct.SchedulingJobResponse>): void;
        abstract deleteSchedulingJob(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_2.google.protobuf.Empty>, callback: grpc_1.sendUnaryData<dependency_2.google.protobuf.Empty>): void;
        abstract getSchedulingJobHistory(call: grpc_1.ServerUnaryCall<dependency_4.io.Id, dependency_6.ct.JobHistory>, callback: grpc_1.sendUnaryData<dependency_6.ct.JobHistory>): void;
        abstract listSchedulingJobHistories(call: grpc_1.ServerWritableStream<dependency_5.scheduler.ListRequest, dependency_6.ct.JobHistory>): void;
    }
    export class SchedulerClient extends grpc_1.makeGenericClientConstructor(UnimplementedSchedulerService.definition, "Scheduler", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        createSchedulingJob: GrpcPromiseServiceInterface<dependency_6.ct.SchedulingJob, dependency_6.ct.SchedulingJobResponse> = (message: dependency_6.ct.SchedulingJob, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.ct.SchedulingJobResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.createSchedulingJob(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.ct.SchedulingJobResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getSchedulingJob: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_6.ct.SchedulingJob> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.ct.SchedulingJob> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getSchedulingJob(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.ct.SchedulingJob) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        updateSchedulingJob: GrpcPromiseServiceInterface<dependency_6.ct.SchedulingJob, dependency_6.ct.SchedulingJobResponse> = (message: dependency_6.ct.SchedulingJob, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.ct.SchedulingJobResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.updateSchedulingJob(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.ct.SchedulingJobResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        patchSchedulingJob: GrpcPromiseServiceInterface<dependency_6.ct.SchedulingJob, dependency_6.ct.SchedulingJobResponse> = (message: dependency_6.ct.SchedulingJob, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.ct.SchedulingJobResponse> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.patchSchedulingJob(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.ct.SchedulingJobResponse) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        deleteSchedulingJob: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_2.google.protobuf.Empty> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_2.google.protobuf.Empty> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.deleteSchedulingJob(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_2.google.protobuf.Empty) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        getSchedulingJobHistory: GrpcPromiseServiceInterface<dependency_4.io.Id, dependency_6.ct.JobHistory> = (message: dependency_4.io.Id, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): Promise<dependency_6.ct.JobHistory> => { if (!metadata) {
            metadata = new grpc_1.Metadata;
        } if (!options) {
            options = {};
        } return new Promise((resolve, reject) => super.getSchedulingJobHistory(message, metadata, options, (error: grpc_1.ServiceError, response: dependency_6.ct.JobHistory) => {
            if (error) {
                reject(error);
            }
            else {
                resolve(response);
            }
        })); };
        listSchedulingJobHistories: GrpcStreamServiceInterface<dependency_5.scheduler.ListRequest, dependency_6.ct.JobHistory> = (message: dependency_5.scheduler.ListRequest, metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<dependency_6.ct.JobHistory> => {
            return super.listSchedulingJobHistories(message, metadata, options);
        };
    }
}
